/**********************************************************************************
*                                                                                 *
* The use of ALVAR requires written License Agreement with VTT Technical          *
* Research Centre of Finland in commercial use or in use outside of the           *
* FI-WARE project. The License Terms are listed below.                            *
*                                                                                 *
* Copyright (C) VTT Technical Research Centre of Finland, All rights reserved     *
*                                                                                 *
* LICENSE TERMS                                                                   *
*                                                                                 *
* ALVAR software is protected by copyright laws and international treaty          *
* provisions. All rights (including all intellectual property rights such as      *
* copyright, right to data base and trademark) to ALVAR belong to Licensor or     *
* third parties. No other rights than those explicitly mentioned herein are       *
* hereby granted to the Licensee. Except for the API, no rights are granted       *
* to the source code of ALVAR.                                                    *
*                                                                                 *
* The License shall commence on the date identified in the License Agreement.     *
* The license shall continue until the end of the License Period or until any     *
* breach of the terms of this license by the Licensee, whichever is earlier.      *
*                                                                                 *
* ALVAR may only be used by the legal entity explicitly named as Licensee in      *
* the License Agreement, regardless of whether or not such legal entity belongs   *
* to the same group of companies than the Licensee.                               *
*                                                                                 *
* To the extent not otherwise explicitly authorised by law, the Licensee may not: *
* - transfer, assign or lease any of the rights granted hereunder to any third    *
* party.                                                                          *
* - sub-license ALVAR or otherwise give user rights to ALVAR to any third party.  *
* - modify, develop, reverse engineer, de-compile, disassemble or translate any   *
* code related to ALVAR                                                           *
* - use ALVAR or portions of it to develop any competing products.                *
* - use ALVAR contrary to applicable laws and regulations.                        *
*                                                                                 *
* ALVAR API files may be copied, modified and developed to the extent the normal  *
* use of ALVAR Applications such requires. Except for backup copies and copies    *
* generated by the computer automatically in the normal use of ALVAR, the         *
* Licensee may not otherwise copy ALVAR.                                          *
*                                                                                 *
* ALVAR Applications may not be distributed to any third party without a separate *
* Distribution Agreement with the Licensor.                                       *
*                                                                                 *
* The Licensee shall undertake to keep confidential and not to disclose to any    *
* third party any information, data and material relating to ALVAR and shall not  *
* to use such information, data and material for any other purpose than for the   *
* normal use of ALVAR as identified in the License Agreement. The obligations on  *
* confidentiality shall be valid even after the expiration of this License. Upon  *
* the termination of the License the Licensee shall destroy all information       *
* relevant to ALVAR and all copies thereof and cease the use of ALVAR.            *
*                                                                                 *
* Licensor does not hereby commit itself to any support, maintenance or           *
* consulting services, unless otherwise explicitly separately agreed upon in a    *
* Maintenance Agreement. The Licensor shall have the right to transfer the        *
* License to a third party. For the avoidance of doubt, new modules of ALVAR than *
* the one mentioned in the License Agreement may be available or released from    *
* time to time under separate agreement with separate license fees.               *
*                                                                                 *
* If the Licensee when using ALVAR has proposals to further develop ALVAR or      *
* discovers problems or other findings regarding ALVAR, the Licensee shall report *
* such as Feedback to the Licensor. With respect to Feedback the Licensee hereby  *
* grants the Licensor worldwide, non-exclusive, perpetual, irrevocable,           *
* royalty-free rights (1) to use, copy and modify Feedback and to create derivate *
* works thereof, (2) to make, use, import, sell, offer for sale, lease or         *
* otherwise distribute any version of ALVAR or services of the Licensor           *
* containing Feedback, and (3) to sublicense rights to the extent a license is    *
* necessary for using any version of ALVAR or services of the Licensor.           *
*                                                                                 *
* Unless otherwise agreed, the Licensee hereby gives Licensor the permission to   *
* refer to this License and the name of the Licensee in marketing of ALVAR.       *
*                                                                                 *
* ALVAR IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT *
* NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, NON-INFRINGEMENT OF  *
* COPYRIGHTS, TRADE SECRETS OR ANY PATENT AND FITNESS FOR A PARTICULAR PURPOSE    *
* ARE DISCLAIMED.                                                                 *
*                                                                                 *
* IN NO EVENT SHALL THE LICENSOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  *
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,    *
* PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR  *
* BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER   *
* IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)      *
* ARISING IN ANY WAY OUT OF THE USE OF ALVAR, EVEN IF ADVISED OF THE POSSIBILITY  *
* OF SUCH DAMAGE.                                                                 *
*                                                                                 *
* IN CASE IT IS NOT POSSIBLE ACCORDING TO THE APPLICABLE LAW TO LIMIT CERTAIN     *
* LIABILITY ENTIRELY, THE TOTAL LIMIT OF LIABILITY OF THE LICENSOR SHALL IN ALL   *
* CASES BE LIMITED TO FIFTY (50) EUROS. IN CASE IT IS NOT POSSIBLE ACCORDING TO   *
* THE APPLICABLE LAW TO LIMIT THE LIABILITY TO SUCH PRETERMINED AMOUNT, THE TOTAL *
* LIMIT OF LIABILITY OF THE LICENSOR SHALL BE THE MAXIMUM LIMITATION OF LIABILITY *
* ALLOWED BY APPLICABLE LAW.                                                      *
*                                                                                 *
* THE LICENSEE AGREES TO INDEMNIFY, DEFEND AND HOLD THE LICENSOR HARMLESS FROM    *
* AND AGAINST ANY AND ALL LIABILITY AND COSTS INCURRED BY THE LICENSOR IN         *
* CONNECTION WITH OR ARISING OUT OF THE LICENSOR'S: USE OR MISUSE OF ALVAR; OR    *
* BREACH OF ANY TERMS OF THE LICENSE AGREEMENT; OR VIOLATION OF ANY RIGHTS OF     *
* ANY THIRD PARTY.                                                                *
*                                                                                 *
* These License Terms are subject to Finnish law (excluding its principles on     *
* conflict of laws). Any disputes arising out of these License Terms, which       *
* cannot be solved amicably, shall be finally settled by one arbitrator in        *
* accordance with the Arbitration Rules of the Finnish Central Chamber of         *
* Commerce or if so chosen by the Licensor, in the first instance court of the    *
* Licensee's domicile.                                                            *
*                                                                                 *
**********************************************************************************/

// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  Module['arguments'] = process['argv'].slice(2);

  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?\{ ?[^}]* ?\}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (vararg) return 8;
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    code = Pointer_stringify(code);
    if (code[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (code.indexOf('"', 1) === code.length-1) {
        code = code.substr(1, code.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + code + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    return Runtime.asmConstCache[code] = eval('(function(' + args.join(',') + '){ ' + code + ' })'); // new Function does not allow upvars in node
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;









//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;

// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    return rawList ? list : ret + flushList();
  }
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    return parse();
  } catch(e) {
    return func;
  }
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 22120;

var _stdout;
var _stdout=_stdout=allocate(1, "i32*", ALLOC_STATIC);
var _stdin;
var _stdin=_stdin=allocate(1, "i32*", ALLOC_STATIC);
var _stderr;
var _stderr=_stderr=allocate(1, "i32*", ALLOC_STATIC);

/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } },{ func: function() { __GLOBAL__I_a() } },{ func: function() { __GLOBAL__I_a361() } });



































































































































































































































































































































































































































var ___dso_handle;
var ___dso_handle=___dso_handle=allocate(1, "i32*", ALLOC_STATIC);










































































































































































var __ZTVN10__cxxabiv120__si_class_type_infoE;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,224,64,0,0,58,1,0,0,164,0,0,0,80,0,0,0,188,0,0,0,10,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;
var __ZTVN10__cxxabiv117__class_type_infoE;
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,240,64,0,0,58,1,0,0,52,1,0,0,80,0,0,0,188,0,0,0,10,0,0,0,28,0,0,0,2,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);;








































































































































































































































































































































































































































































































































var __ZN12alvar_mobile9BitsetExtC1Ev;
var __ZN12alvar_mobile4BlobC1Ev;
var __ZN12alvar_mobile12BlobDetectorC1Ev;
var __ZN12alvar_mobile12BlobDetectorD1Ev;
var __ZN12alvar_mobile6CameraC1Ev;
var __ZN12alvar_mobile6CameraC1EdRKN5Eigen6MatrixIdLi2ELi1ELi0ELi2ELi1EEES5_b;
var __ZN12alvar_mobile5ImageC1Ev;
var __ZN12alvar_mobile5ImageC1EPhiib;
var __ZN12alvar_mobile4LensC1Ev;
var __ZN12alvar_mobile4LensC1ERKN5Eigen6MatrixIdLi2ELi1ELi0ELi2ELi1EEES5_d;
var __ZN12alvar_mobile4LineC1Ev;
var __ZN12alvar_mobile6MarkerC1Ei;
var __ZN12alvar_mobile6MarkerD1Ev;
var __ZN12alvar_mobile11MarkerAlvarC1Ei;
var __ZN12alvar_mobile11MarkerAlvarD1Ev;
var __ZN12alvar_mobile15MarkerArtoolkitC1Ei;
var __ZN12alvar_mobile15MarkerArtoolkitD1Ev;
var __ZN12alvar_mobile14MarkerDetectorC1Ev;
var __ZN12alvar_mobile14MarkerDetectorD1Ev;
var __ZN12alvar_mobile21PerspectiveProjectionC1ERKN5Eigen6MatrixIdLi3ELi3ELi0ELi3ELi3EEERKNS_4PoseE;
var __ZN12alvar_mobile4PoseC1Ev;
var __ZN12alvar_mobile4PoseC1ERKS0_;
var __ZN12alvar_mobile10TrackerPsaC1Ei;
var __ZN12alvar_mobile10TrackerPsaD1Ev;
var __ZNSt13runtime_errorC1EPKc;
var __ZNSt13runtime_errorD1Ev;
var __ZNSt12length_errorD1Ev;
var __ZNSt3__16localeC1Ev;
var __ZNSt3__16localeC1ERKS0_;
var __ZNSt3__16localeD1Ev;
var __ZNSt8bad_castC1Ev;
var __ZNSt8bad_castD1Ev;
var __ZNSt9bad_allocC1Ev;
var __ZNSt9bad_allocD1Ev;
/* memory initializer */ allocate([95,112,137,0,255,9,47,15,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,74,117,108,0,0,0,0,0,74,117,110,0,0,0,0,0,65,112,114,0,0,0,0,0,77,97,114,0,0,0,0,0,70,101,98,0,0,0,0,0,74,97,110,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,80,108,97,105,110,79,98,106,101,99,116,66,97,115,101,46,104,0,0,79,99,116,111,98,101,114,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,67,119,105,115,101,66,105,110,97,114,121,79,112,46,104,0,0,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,32,116,111,111,32,115,104,111,114,116,0,0,0,0,0,0,65,117,103,117,115,116,0,0,74,117,108,121,0,0,0,0,74,117,110,101,0,0,0,0,77,97,121,0,0,0,0,0,65,112,114,105,108,0,0,0,77,97,114,99,104,0,0,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,97,76,104,115,46,114,111,119,115,40,41,32,61,61,32,97,82,104,115,46,114,111,119,115,40,41,32,38,38,32,97,76,104,115,46,99,111,108,115,40,41,32,61,61,32,97,82,104,115,46,99,111,108,115,40,41,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,41,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,40,33,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,82,111,119,115,61,61,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,67,111,108,115,61,61,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,38,38,32,77,97,120,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,82,111,119,115,60,61,77,97,120,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,38,38,32,77,97,120,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,67,111,108,115,60,61,77,97,120,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,110,98,82,111,119,115,62,61,48,32,38,38,32,110,98,67,111,108,115,62,61,48,32,38,38,32,34,73,110,118,97,108,105,100,32,115,105,122,101,115,32,119,104,101,110,32,114,101,115,105,122,105,110,103,32,97,32,109,97,116,114,105,120,32,111,114,32,97,114,114,97,121,46,34,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,112,114,111,100,117,99,116,115,47,71,101,110,101,114,97,108,66,108,111,99,107,80,97,110,101,108,75,101,114,110,101,108,46,104,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,40,40,33,80,97,110,101,108,77,111,100,101,41,32,38,38,32,115,116,114,105,100,101,61,61,48,32,38,38,32,111,102,102,115,101,116,61,61,48,41,32,124,124,32,40,80,97,110,101,108,77,111,100,101,32,38,38,32,115,116,114,105,100,101,62,61,100,101,112,116,104,32,38,38,32,111,102,102,115,101,116,60,61,115,116,114,105,100,101,41,0,0,0,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,80,108,97,105,110,79,98,106,101,99,116,66,97,115,101,46,104,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,112,114,111,100,117,99,116,115,47,71,101,110,101,114,97,108,77,97,116,114,105,120,77,97,116,114,105,120,46,104,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,100,115,116,46,114,111,119,115,40,41,61,61,109,95,108,104,115,46,114,111,119,115,40,41,32,38,38,32,100,115,116,46,99,111,108,115,40,41,61,61,109,95,114,104,115,46,99,111,108,115,40,41,0,0,0,0,104,97,109,109,105,110,103,95,100,101,99,95,98,108,111,99,107,58,32,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,84,114,97,110,115,112,111,115,101,46,104,0,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,40,33,99,104,101,99,107,95,116,114,97,110,115,112,111,115,101,95,97,108,105,97,115,105,110,103,95,114,117,110,95,116,105,109,101,95,115,101,108,101,99,116,111,114,32,60,116,121,112,101,110,97,109,101,32,68,101,114,105,118,101,100,58,58,83,99,97,108,97,114,44,98,108,97,115,95,116,114,97,105,116,115,60,68,101,114,105,118,101,100,62,58,58,73,115,84,114,97,110,115,112,111,115,101,100,44,79,116,104,101,114,68,101,114,105,118,101,100,62,32,58,58,114,117,110,40,101,120,116,114,97,99,116,95,100,97,116,97,40,100,115,116,41,44,32,111,116,104,101,114,41,41,32,38,38,32,34,97,108,105,97,115,105,110,103,32,100,101,116,101,99,116,101,100,32,100,117,114,105,110,103,32,116,114,97,110,115,112,111,115,105,116,105,111,110,44,32,117,115,101,32,116,114,97,110,115,112,111,115,101,73,110,80,108,97,99,101,40,41,32,34,32,34,111,114,32,101,118,97,108,117,97,116,101,32,116,104,101,32,114,104,115,32,105,110,116,111,32,97,32,116,101,109,112,111,114,97,114,121,32,117,115,105,110,103,32,46,101,118,97,108,40,41,34,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,80,77,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,93,0,0,0,0,0,0,0,111,116,104,101,114,46,114,111,119,115,40,41,32,61,61,32,49,32,124,124,32,111,116,104,101,114,46,99,111,108,115,40,41,32,61,61,32,49,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,32,98,108,111,99,107,95,108,101,110,58,32,0,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,77,97,116,114,105,120,46,104,0,0,0,100,105,109,32,62,61,32,48,0,0,0,0,0,0,0,0,40,40,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,38,38,32,40,77,97,120,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,124,124,32,115,105,122,101,60,61,77,97,120,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,124,124,32,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,115,105,122,101,41,32,38,38,32,115,105,122,101,62,61,48,0,0,0,0,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,68,105,97,103,111,110,97,108,80,114,111,100,117,99,116,46,104,0,0,100,105,97,103,111,110,97,108,46,100,105,97,103,111,110,97,108,40,41,46,115,105,122,101,40,41,32,61,61,32,40,80,114,111,100,117,99,116,79,114,100,101,114,32,61,61,32,79,110,84,104,101,76,101,102,116,32,63,32,109,97,116,114,105,120,46,114,111,119,115,40,41,32,58,32,109,97,116,114,105,120,46,99,111,108,115,40,41,41,0,0,0,0,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,71,101,110,101,114,97,108,80,114,111,100,117,99,116,46,104,0,0,0,44,0,0,0,0,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,65,115,115,105,103,110,46,104,0,0,0,109,95,108,104,115,46,114,111,119,115,40,41,32,61,61,32,100,115,116,46,114,111,119,115,40,41,32,38,38,32,109,95,114,104,115,46,99,111,108,115,40,41,32,61,61,32,100,115,116,46,99,111,108,115,40,41,0,0,0,0,0,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,80,114,111,100,117,99,116,66,97,115,101,46,104,0,0,0,0,0,0,32,45,62,32,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,97,95,108,104,115,46,99,111,108,115,40,41,32,61,61,32,97,95,114,104,115,46,114,111,119,115,40,41,32,38,38,32,34,105,110,118,97,108,105,100,32,109,97,116,114,105,120,32,112,114,111,100,117,99,116,34,32,38,38,32,34,105,102,32,121,111,117,32,119,97,110,116,101,100,32,97,32,99,111,101,102,102,45,119,105,115,101,32,111,114,32,97,32,100,111,116,32,112,114,111,100,117,99,116,32,117,115,101,32,116,104,101,32,114,101,115,112,101,99,116,105,118,101,32,101,120,112,108,105,99,105,116,32,102,117,110,99,116,105,111,110,115,34,0,109,97,116,46,114,111,119,115,40,41,61,61,109,97,116,46,99,111,108,115,40,41,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,97,46,114,111,119,115,40,41,61,61,97,46,99,111,108,115,40,41,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,109,95,109,97,116,114,105,120,46,114,111,119,115,40,41,61,61,98,46,114,111,119,115,40,41,32,38,38,32,34,76,68,76,84,58,58,115,111,108,118,101,40,41,58,32,105,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,114,111,119,115,32,111,102,32,116,104,101,32,114,105,103,104,116,32,104,97,110,100,32,115,105,100,101,32,109,97,116,114,105,120,32,98,34,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,68,101,110,115,101,67,111,101,102,102,115,66,97,115,101,46,104,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,37,112,0,0,0,0,0,0,105,110,100,101,120,32,62,61,32,48,32,38,38,32,105,110,100,101,120,32,60,32,115,105,122,101,40,41,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,114,111,119,115,40,41,32,61,61,32,111,116,104,101,114,46,114,111,119,115,40,41,32,38,38,32,99,111,108,115,40,41,32,61,61,32,111,116,104,101,114,46,99,111,108,115,40,41,0,0,0,0,0,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,67,119,105,115,101,78,117,108,108,97,114,121,79,112,46,104,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,110,98,82,111,119,115,32,62,61,32,48,32,38,38,32,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,82,111,119,115,41,32,38,38,32,110,98,67,111,108,115,32,62,61,32,48,32,38,38,32,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,67,111,108,115,41,0,0,0,0,112,0,0,0,0,0,0,0,109,95,105,115,73,110,105,116,105,97,108,105,122,101,100,32,38,38,32,34,76,68,76,84,32,105,115,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,46,34,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,83,116,114,105,100,101,46,104,0,0,0,58,32,0,0,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,105,110,110,101,114,83,116,114,105,100,101,62,61,48,32,38,38,32,111,117,116,101,114,83,116,114,105,100,101,62,61,48,0,0,0,0,0,0,0,0,116,114,117,101,0,0,0,0,114,111,119,32,62,61,32,48,32,38,38,32,114,111,119,32,60,32,114,111,119,115,40,41,32,38,38,32,99,111,108,32,62,61,32,48,32,38,38,32,99,111,108,32,60,32,99,111,108,115,40,41,0,0,0,0,40,105,62,61,48,41,32,38,38,32,40,32,40,40,66,108,111,99,107,82,111,119,115,61,61,49,41,32,38,38,32,40,66,108,111,99,107,67,111,108,115,61,61,88,112,114,84,121,112,101,58,58,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,32,38,38,32,105,60,120,112,114,46,114,111,119,115,40,41,41,32,124,124,40,40,66,108,111,99,107,82,111,119,115,61,61,88,112,114,84,121,112,101,58,58,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,32,38,38,32,40,66,108,111,99,107,67,111,108,115,61,61,49,41,32,38,38,32,105,60,120,112,114,46,99,111,108,115,40,41,41,41,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,74,32,115,105,122,101,32,101,114,114,111,114,33,0,0,0,93,125,0,0,0,0,0,0,44,34,116,114,97,110,115,102,111,114,109,34,58,91,0,0,104,97,109,109,105,110,103,95,101,110,99,95,98,108,111,99,107,58,32,0,0,0,0,0,34,0,0,0,0,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,82,101,100,117,120,46,104,0,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,44,34,116,121,112,101,34,58,34,0,0,0,0,0,0,0,109,97,116,46,114,111,119,115,40,41,62,48,32,38,38,32,109,97,116,46,99,111,108,115,40,41,62,48,32,38,38,32,34,121,111,117,32,97,114,101,32,117,115,105,110,103,32,97,110,32,101,109,112,116,121,32,109,97,116,114,105,120,34,0,91,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,97,108,118,97,114,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,83,111,108,118,101,84,114,105,97,110,103,117,108,97,114,46,104,0,0,118,101,99,116,111,114,0,0,97,114,116,111,111,108,107,105,116,0,0,0,0,0,0,0,99,111,108,115,40,41,32,61,61,32,114,111,119,115,40,41,32,38,38,32,40,40,83,105,100,101,61,61,79,110,84,104,101,76,101,102,116,32,38,38,32,99,111,108,115,40,41,32,61,61,32,111,116,104,101,114,46,114,111,119,115,40,41,41,32,124,124,32,40,83,105,100,101,61,61,79,110,84,104,101,82,105,103,104,116,32,38,38,32,99,111,108,115,40,41,32,61,61,32,111,116,104,101,114,46,99,111,108,115,40,41,41,41,0,0,0,0,0,0,0,37,46,48,76,102,0,0,0,105,109,97,103,101,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,104,111,108,101,115,107,121,47,76,68,76,84,46,104,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,123,34,105,100,34,58,0,0,114,104,115,40,41,46,114,111,119,115,40,41,32,61,61,32,100,101,99,40,41,46,109,97,116,114,105,120,76,68,76,84,40,41,46,114,111,119,115,40,41,0,0,0,0,0,0,0,32,111,107,0,0,0,0,0,83,97,116,0,0,0,0,0,37,76,102,0,0,0,0,0,70,114,105,0,0,0,0,0,84,104,117,0,0,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,77,97,112,66,97,115,101,46,104,0,0,87,101,100,0,0,0,0,0,84,117,101,0,0,0,0,0,32,99,111,114,114,101,99,116,101,100,0,0,0,0,0,0,77,111,110,0,0,0,0,0,83,117,110,0,0,0,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,117,101,115,100,97,121,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,77,111,110,100,97,121,0,0,119,114,95,112,116,32,115,105,122,101,32,101,114,114,111,114,33,0,0,0,0,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,68,101,110,115,101,67,111,101,102,102,115,66,97,115,101,46,104,0,0,40,100,97,116,97,80,116,114,32,61,61,32,48,41,32,124,124,32,40,32,110,98,82,111,119,115,32,62,61,32,48,32,38,38,32,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,82,111,119,115,41,32,38,38,32,110,98,67,111,108,115,32,62,61,32,48,32,38,38,32,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,110,98,67,111,108,115,41,41,0,0,0,0,0,0,0,83,117,110,100,97,121,0,0,32,112,97,114,105,116,121,32,98,105,116,32,101,114,114,111,114,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,105,109,95,112,116,32,115,105,122,101,32,101,114,114,111,114,33,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,46,46,47,46,46,47,69,99,108,105,112,115,101,47,97,108,118,97,114,45,109,111,98,105,108,101,45,101,109,115,99,114,105,112,116,101,110,47,105,110,99,108,117,100,101,47,101,105,103,101,110,45,51,46,50,47,101,105,103,101,110,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,66,108,111,99,107,46,104,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,32,100,111,117,98,108,101,32,101,114,114,111,114,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,68,101,99,0,0,0,0,0,78,111,118,0,0,0,0,0,79,99,116,0,0,0,0,0,40,33,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,82,111,119,115,61,61,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,67,111,108,115,61,61,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,38,38,32,77,97,120,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,82,111,119,115,60,61,77,97,120,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,38,38,32,77,97,120,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,110,98,67,111,108,115,60,61,77,97,120,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,110,98,82,111,119,115,62,61,48,32,38,38,32,110,98,67,111,108,115,62,61,48,32,38,38,32,34,73,110,118,97,108,105,100,32,115,105,122,101,115,32,119,104,101,110,32,114,101,115,105,122,105,110,103,32,97,32,109,97,116,114,105,120,32,111,114,32,97,114,114,97,121,46,34,0,0,0,0,0,0,83,101,112,0,0,0,0,0,97,95,115,116,97,114,116,82,111,119,32,62,61,32,48,32,38,38,32,98,108,111,99,107,82,111,119,115,32,62,61,32,48,32,38,38,32,97,95,115,116,97,114,116,82,111,119,32,60,61,32,120,112,114,46,114,111,119,115,40,41,32,45,32,98,108,111,99,107,82,111,119,115,32,38,38,32,97,95,115,116,97,114,116,67,111,108,32,62,61,32,48,32,38,38,32,98,108,111,99,107,67,111,108,115,32,62,61,32,48,32,38,38,32,97,95,115,116,97,114,116,67,111,108,32,60,61,32,120,112,114,46,99,111,108,115,40,41,32,45,32,98,108,111,99,107,67,111,108,115,0,0,65,117,103,0,0,0,0,0,32,112,97,114,105,116,121,58,32,0,0,0,0,0,0,0,101,118,97,108,84,111,0,0,118,101,99,116,111,114,68,0,109,97,116,114,105,120,85,0,109,97,116,114,105,120,76,0,115,111,108,118,101,0,0,0,116,114,97,110,115,112,111,115,105,116,105,111,110,115,80,0,109,97,116,114,105,120,76,68,76,84,0,0,0,0,0,0,111,112,101,114,97,116,111,114,40,41,0,0,0,0,0,0,115,111,108,118,101,73,110,80,108,97,99,101,0,0,0,0,115,99,97,108,101,65,110,100,65,100,100,84,111,0,0,0,108,97,122,121,65,115,115,105,103,110,0,0,0,0,0,0,117,110,98,108,111,99,107,101,100,0,0,0,0,0,0,0,114,117,110,0,0,0,0,0,77,97,112,66,97,115,101,0,83,116,114,105,100,101,0,0,77,97,116,114,105,120,0,0,66,108,111,99,107,0,0,0,99,111,109,112,117,116,101,0,114,101,115,105,122,101,0,0,114,101,115,105,122,101,76,105,107,101,0,0,0,0,0,0,114,101,115,105,122,101,0,0,68,105,97,103,111,110,97,108,80,114,111,100,117,99,116,0,111,112,101,114,97,116,111,114,40,41,0,0,0,0,0,0,67,119,105,115,101,78,117,108,108,97,114,121,79,112,0,0,67,119,105,115,101,66,105,110,97,114,121,79,112,0,0,0,80,114,111,100,117,99,116,66,97,115,101,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,72,58,37,77,58,37,83,37,72,58,37,77,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,89,45,37,109,45,37,100,37,109,47,37,100,47,37,121,37,72,58,37,77,58,37,83,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,58,0,0,184,0,0,0,142,0,0,0,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,58,0,0,250,0,0,0,206,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,58,0,0,84,0,0,0,72,1,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,58,0,0,112,0,0,0,10,0,0,0,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,58,0,0,112,0,0,0,26,0,0,0,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,58,0,0,212,0,0,0,100,0,0,0,64,0,0,0,2,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,58,0,0,62,1,0,0,234,0,0,0,64,0,0,0,4,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,58,0,0,204,0,0,0,236,0,0,0,64,0,0,0,8,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,59,0,0,64,1,0,0,176,0,0,0,64,0,0,0,6,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,59,0,0,60,1,0,0,108,0,0,0,64,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,59,0,0,202,0,0,0,134,0,0,0,64,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,59,0,0,52,0,0,0,136,0,0,0,64,0,0,0,126,0,0,0,4,0,0,0,30,0,0,0,6,0,0,0,20,0,0,0,54,0,0,0,2,0,0,0,248,255,255,255,240,59,0,0,22,0,0,0,8,0,0,0,34,0,0,0,16,0,0,0,10,0,0,0,32,0,0,0,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,60,0,0,50,1,0,0,36,1,0,0,64,0,0,0,20,0,0,0,16,0,0,0,58,0,0,0,26,0,0,0,18,0,0,0,2,0,0,0,4,0,0,0,248,255,255,255,24,60,0,0,68,0,0,0,106,0,0,0,120,0,0,0,130,0,0,0,94,0,0,0,44,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,60,0,0,90,0,0,0,238,0,0,0,64,0,0,0,46,0,0,0,40,0,0,0,12,0,0,0,50,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,60,0,0,120,0,0,0,146,0,0,0,64,0,0,0,42,0,0,0,82,0,0,0,16,0,0,0,66,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,60,0,0,54,1,0,0,2,0,0,0,64,0,0,0,28,0,0,0,32,0,0,0,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,60,0,0,60,0,0,0,6,0,0,0,64,0,0,0,12,0,0,0,12,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,60,0,0,22,1,0,0,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,60,0,0,36,0,0,0,174,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,60,0,0,8,0,0,0,218,0,0,0,64,0,0,0,26,0,0,0,6,0,0,0,12,0,0,0,4,0,0,0,10,0,0,0,4,0,0,0,2,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,60,0,0,118,0,0,0,24,0,0,0,64,0,0,0,18,0,0,0,22,0,0,0,32,0,0,0,20,0,0,0,22,0,0,0,8,0,0,0,6,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,60,0,0,54,0,0,0,32,0,0,0,64,0,0,0,46,0,0,0,44,0,0,0,36,0,0,0,38,0,0,0,28,0,0,0,42,0,0,0,34,0,0,0,52,0,0,0,50,0,0,0,48,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,61,0,0,70,0,0,0,4,0,0,0,64,0,0,0,76,0,0,0,68,0,0,0,62,0,0,0,64,0,0,0,56,0,0,0,66,0,0,0,60,0,0,0,74,0,0,0,72,0,0,0,70,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,61,0,0,86,0,0,0,106,0,0,0,64,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,61,0,0,34,0,0,0,220,0,0,0,64,0,0,0,16,0,0,0,16,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,61,0,0,16,0,0,0,232,0,0,0,64,0,0,0,2,0,0,0,10,0,0,0,14,0,0,0,124,0,0,0,100,0,0,0,24,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,61,0,0,226,0,0,0,166,0,0,0,64,0,0,0,14,0,0,0,16,0,0,0,18,0,0,0,50,0,0,0,6,0,0,0,20,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,61,0,0,226,0,0,0,28,0,0,0,64,0,0,0,6,0,0,0,4,0,0,0,4,0,0,0,98,0,0,0,62,0,0,0,12,0,0,0,136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,61,0,0,226,0,0,0,122,0,0,0,64,0,0,0,12,0,0,0,8,0,0,0,22,0,0,0,30,0,0,0,14,0,0,0,10,0,0,0,140,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,61,0,0,226,0,0,0,48,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,61,0,0,74,0,0,0,196,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,61,0,0,226,0,0,0,94,0,0,0,64,0,0,0,24,0,0,0,2,0,0,0,4,0,0,0,10,0,0,0,16,0,0,0,32,0,0,0,28,0,0,0,8,0,0,0,2,0,0,0,8,0,0,0,14,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,62,0,0,70,1,0,0,50,0,0,0,64,0,0,0,8,0,0,0,6,0,0,0,22,0,0,0,40,0,0,0,6,0,0,0,6,0,0,0,30,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,72,62,0,0,14,1,0,0,248,0,0,0,200,255,255,255,200,255,255,255,72,62,0,0,40,0,0,0,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,62,0,0,82,0,0,0,32,1,0,0,76,0,0,0,12,0,0,0,18,0,0,0,38,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,104,62,0,0,2,1,0,0,66,1,0,0,56,0,0,0,248,255,255,255,104,62,0,0,62,0,0,0,76,0,0,0,192,255,255,255,192,255,255,255,104,62,0,0,0,1,0,0,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,62,0,0,226,0,0,0,102,0,0,0,64,0,0,0,12,0,0,0,8,0,0,0,22,0,0,0,30,0,0,0,14,0,0,0,10,0,0,0,140,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,62,0,0,226,0,0,0,208,0,0,0,64,0,0,0,12,0,0,0,8,0,0,0,22,0,0,0,30,0,0,0,14,0,0,0,10,0,0,0,140,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,62,0,0,66,0,0,0,20,1,0,0,70,0,0,0,42,0,0,0,24,0,0,0,2,0,0,0,48,0,0,0,84,0,0,0,22,0,0,0,128,0,0,0,12,0,0,0,30,0,0,0,20,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,62], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([162,0,0,0,44,1,0,0,24,0,0,0,26,0,0,0,14,0,0,0,14,0,0,0,86,0,0,0,102,0,0,0,36,0,0,0,28,0,0,0,26,0,0,0,4,0,0,0,2,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,62,0,0,12,0,0,0,144,0,0,0,70,0,0,0,42,0,0,0,30,0,0,0,10,0,0,0,48,0,0,0,84,0,0,0,22,0,0,0,4,0,0,0,12,0,0,0,32,0,0,0,20,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,63,0,0,58,0,0,0,16,1,0,0,252,255,255,255,252,255,255,255,0,63,0,0,182,0,0,0,158,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,24,63,0,0,24,1,0,0,46,1,0,0,252,255,255,255,252,255,255,255,24,63,0,0,132,0,0,0,254,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,48,63,0,0,104,0,0,0,74,1,0,0,248,255,255,255,248,255,255,255,48,63,0,0,228,0,0,0,42,1,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,72,63,0,0,130,0,0,0,12,1,0,0,248,255,255,255,248,255,255,255,72,63,0,0,170,0,0,0,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,63,0,0,8,1,0,0,230,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,63,0,0,56,1,0,0,40,1,0,0,20,0,0,0,26,0,0,0,14,0,0,0,14,0,0,0,58,0,0,0,102,0,0,0,36,0,0,0,28,0,0,0,26,0,0,0,4,0,0,0,34,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,63,0,0,192,0,0,0,222,0,0,0,44,0,0,0,42,0,0,0,30,0,0,0,10,0,0,0,88,0,0,0,84,0,0,0,22,0,0,0,4,0,0,0,12,0,0,0,32,0,0,0,44,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,63,0,0,34,1,0,0,180,0,0,0,64,0,0,0,66,0,0,0,122,0,0,0,52,0,0,0,88,0,0,0,6,0,0,0,38,0,0,0,52,0,0,0,28,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,63,0,0,128,0,0,0,72,0,0,0,64,0,0,0,112,0,0,0,118,0,0,0,76,0,0,0,84,0,0,0,86,0,0,0,32,0,0,0,116,0,0,0,60,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,64,0,0,38,1,0,0,140,0,0,0,64,0,0,0,18,0,0,0,60,0,0,0,8,0,0,0,54,0,0,0,90,0,0,0,62,0,0,0,92,0,0,0,68,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,64,0,0,88,0,0,0,216,0,0,0,64,0,0,0,104,0,0,0,108,0,0,0,36,0,0,0,82,0,0,0,34,0,0,0,26,0,0,0,78,0,0,0,80,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,64,0,0,246,0,0,0,22,0,0,0,10,0,0,0,26,0,0,0,14,0,0,0,14,0,0,0,86,0,0,0,102,0,0,0,36,0,0,0,70,0,0,0,80,0,0,0,10,0,0,0,2,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,64,0,0,20,0,0,0,26,1,0,0,74,0,0,0,42,0,0,0,30,0,0,0,10,0,0,0,48,0,0,0,84,0,0,0,22,0,0,0,56,0,0,0,24,0,0,0,12,0,0,0,20,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,64,0,0,148,0,0,0,114,0,0,0,8,0,0,0,142,0,0,0,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,64,0,0,30,1,0,0,154,0,0,0,14,0,0,0,64,0,0,0,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,64,0,0,38,0,0,0,172,0,0,0,4,0,0,0,134,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,64,0,0,190,0,0,0,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,64,0,0,126,0,0,0,42,0,0,0,2,0,0,0,2,0,0,0,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,64,0,0,2,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,64,0,0,58,1,0,0,252,0,0,0,80,0,0,0,188,0,0,0,10,0,0,0,2,0,0,0,8,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,65,0,0,242,0,0,0,224,0,0,0,0,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,98,97,115,105,99,95,111,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,78,49,50,97,108,118,97,114,95,109,111,98,105,108,101,55,84,114,97,99,107,101,114,69,0,0,0,0,0,0,0,0,78,49,50,97,108,118,97,114,95,109,111,98,105,108,101,54,77,97,114,107,101,114,69,0,78,49,50,97,108,118,97,114,95,109,111,98,105,108,101,49,53,77,97,114,107,101,114,65,114,116,111,111,108,107,105,116,69,0,0,0,0,0,0,0,78,49,50,97,108,118,97,114,95,109,111,98,105,108,101,49,52,77,97,114,107,101,114,68,101,116,101,99,116,111,114,69,0,0,0,0,0,0,0,0,78,49,50,97,108,118,97,114,95,109,111,98,105,108,101,49,50,66,108,111,98,68,101,116,101,99,116,111,114,69,0,0,78,49,50,97,108,118,97,114,95,109,111,98,105,108,101,49,49,77,97,114,107,101,114,65,108,118,97,114,69,0,0,0,78,49,50,97,108,118,97,114,95,109,111,98,105,108,101,49,48,84,114,97,99,107,101,114,80,115,97,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,54,65,114,86,105,101,119,0,0,0,0,0,168,44,0,0,0,0,0,0,184,44,0,0,0,0,0,0,200,44,0,0,80,58,0,0,0,0,0,0,0,0,0,0,216,44,0,0,80,58,0,0,0,0,0,0,0,0,0,0,232,44,0,0,80,58,0,0,0,0,0,0,0,0,0,0,0,45,0,0,152,58,0,0,0,0,0,0,0,0,0,0,24,45,0,0,80,58,0,0,0,0,0,0,0,0,0,0,40,45,0,0,104,44,0,0,64,45,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,168,63,0,0,0,0,0,0,104,44,0,0,136,45,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,176,63,0,0,0,0,0,0,104,44,0,0,208,45,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,184,63,0,0,0,0,0,0,104,44,0,0,24,46,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,192,63,0,0,0,0,0,0,0,0,0,0,96,46,0,0,160,60,0,0,0,0,0,0,0,0,0,0,144,46,0,0,160,60,0,0,0,0,0,0,104,44,0,0,192,46,0,0,0,0,0,0,1,0,0,0,232,62,0,0,0,0,0,0,104,44,0,0,216,46,0,0,0,0,0,0,1,0,0,0,232,62,0,0,0,0,0,0,104,44,0,0,240,46,0,0,0,0,0,0,1,0,0,0,240,62,0,0,0,0,0,0,104,44,0,0,8,47,0,0,0,0,0,0,1,0,0,0,240,62,0,0,0,0,0,0,104,44,0,0,32,47,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,88,64,0,0,0,8,0,0,104,44,0,0,104,47,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,88,64,0,0,0,8,0,0,104,44,0,0,176,47,0,0,0,0,0,0,3,0,0,0,216,61,0,0,2,0,0,0,168,58,0,0,2,0,0,0,56,62,0,0,0,8,0,0,104,44,0,0,248,47,0,0,0,0,0,0,3,0,0,0,216,61,0,0,2,0,0,0,168,58,0,0,2,0,0,0,64,62,0,0,0,8,0,0,0,0,0,0,64,48,0,0,216,61,0,0,0,0,0,0,0,0,0,0,88,48,0,0,216,61,0,0,0,0,0,0,104,44,0,0,112,48,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,248,62,0,0,2,0,0,0,104,44,0,0,136,48,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,248,62,0,0,2,0,0,0,0,0,0,0,160,48,0,0,0,0,0,0,184,48,0,0,96,63,0,0,0,0,0,0,104,44,0,0,216,48,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,80,59,0,0,0,0,0,0,104,44,0,0,32,49,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,104,59,0,0,0,0,0,0,104,44,0,0,104,49,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,128,59,0,0,0,0,0,0,104,44,0,0,176,49,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,152,59,0,0,0,0,0,0,0,0,0,0,248,49,0,0,216,61,0,0,0,0,0,0,0,0,0,0,16,50,0,0,216,61,0,0,0,0,0,0,104,44,0,0,40,50,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,112,63,0,0,2,0,0,0,104,44,0,0,80,50,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,112,63,0,0,2,0,0,0,104,44,0,0,120,50,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,112,63,0,0,2,0,0,0,104,44,0,0,160,50,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,112,63,0,0,2,0,0,0,0,0,0,0,200,50,0,0,224,62,0,0,0,0,0,0,0,0,0,0,224,50,0,0,216,61,0,0,0,0,0,0,104,44,0,0,248,50,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,80,64,0,0,2,0,0,0,104,44,0,0,16,51,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,80,64,0,0,2,0,0,0,0,0,0,0,40,51,0,0,0,0,0,0,80,51,0,0,0,0,0,0,120,51,0,0,24,63,0,0,0,0,0,0,0,0,0,0,192,51,0,0,120,63,0,0,0,0,0,0,0,0,0,0,224,51,0,0,192,62,0,0,0,0,0,0,0,0,0,0,40,52,0,0,184,61,0,0,0,0,0,0,0,0,0,0,80,52,0,0,184,61,0,0,0,0,0,0,0,0,0,0,120,52,0,0,176,62,0,0,0,0,0,0,0,0,0,0,192,52,0,0,0,0,0,0,248,52,0,0,0,0,0,0,48,53,0,0,104,44,0,0,80,53,0,0,3,0,0,0,2,0,0,0,72,63,0,0,2,0,0,0,24,63,0,0,2,8,0,0,0,0,0,0,128,53,0,0,0,0,0,0,160,53,0,0,0,0,0,0,192,53,0,0,0,0,0,0,224,53,0,0,104,44,0,0,248,53,0,0,0,0,0,0,1,0,0,0,48,59,0,0,3,244,255,255,104,44,0,0,40,54,0,0,0,0,0,0,1,0,0,0,64,59,0,0,3,244,255,255,104,44,0,0,88,54,0,0,0,0,0,0,1,0,0,0,48,59,0,0,3,244,255,255,104,44,0,0,136,54,0,0,0,0,0,0,1,0,0,0,64,59,0,0,3,244,255,255,0,0,0,0,184,54,0,0,120,58,0,0,0,0,0,0,0,0,0,0,208,54,0,0,0,0,0,0,232,54,0,0,184,62,0,0,0,0,0,0,0,0,0,0,0,55,0,0,168,62,0,0,0,0,0,0,0,0,0,0,32,55,0,0,176,62,0,0,0,0,0,0,0,0,0,0,64,55,0,0,0,0,0,0,96,55,0,0,0,0,0,0,128,55,0,0,0,0,0,0,160,55,0,0,104,44,0,0,192,55,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,72,64,0,0,2,0,0,0,104,44,0,0,224,55,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,72,64,0,0,2,0,0,0,104,44,0,0,0,56,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,72,64,0,0,2,0,0,0,104,44,0,0,32,56,0,0,0,0,0,0,2,0,0,0,216,61,0,0,2,0,0,0,72,64,0,0,2,0,0,0,0,0,0,0,64,56,0,0,0,0,0,0,88,56,0,0,0,0,0,0,112,56,0,0,0,0,0,0,136,56,0,0,168,62,0,0,0,0,0,0,0,0,0,0,160,56,0,0,176,62,0,0,0,0,0,0,0,0,0,0,184,56,0,0,0,0,0,0,216,56,0,0,0,0,0,0,240,56,0,0,136,64,0,0,0,0,0,0,0,0,0,0,24,57,0,0,0,0,0,0,64,57,0,0,0,0,0,0,96,57,0,0,136,64,0,0,0,0,0,0,0,0,0,0,128,57,0,0,128,64,0,0,0,0,0,0,0,0,0,0,160,57,0,0,240,64,0,0,0,0,0,0,0,0,0,0,200,57,0,0,240,64,0,0,0,0,0,0,0,0,0,0,240,57,0,0,0,65,0,0,0,0,0,0,0,0,0,0,24,58,0,0,72,58,0,0,0,0,0,0,0,0,0,0,64,58,0,0,56,0,0,0,0,0,0,0,24,63,0,0,24,1,0,0,46,1,0,0,200,255,255,255,200,255,255,255,24,63,0,0,132,0,0,0,254,0,0,0,64,0,0,0,0,0,0,0,72,63,0,0,130,0,0,0,12,1,0,0,192,255,255,255,192,255,255,255,72,63,0,0,170,0,0,0,68,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,58,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,48,49,50,51,52,53,54,55,56,57,43,45,42,47,40,41,36,61,32,44,46,35,91,93,37,34,95,33,38,39,63,60,62,64,92,94,59,0,0,0,0,0,0,0,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,45,54,52,48,43,51,55,56,41,42,39,37,46,38,47,40,27,28,29,30,31,32,33,34,35,36,0,63,58,44,59,57,60,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,49,61,50,62,53,63,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,63,63,63,63,63], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);



var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  
  
  
  var ___cxa_last_thrown_exception=0;function ___resumeException(ptr) {
      if (!___cxa_last_thrown_exception) { ___cxa_last_thrown_exception = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }
  
  var ___cxa_exception_header_size=8;function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = ___cxa_last_thrown_exception;
      header = thrown - ___cxa_exception_header_size;
      if (throwntype == -1) throwntype = HEAP32[((header)>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
  
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___gxx_personality_v0() {
    }

  
  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }

  
  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

  
   
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;

  
  var ___cxa_caught_exceptions=[];function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      ___cxa_caught_exceptions.push(___cxa_last_thrown_exception);
      return ptr;
    }

  
  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr - ___cxa_exception_header_size);
      } catch(e) { // XXX FIXME
      }
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = ___cxa_caught_exceptions.pop();
      if (ptr) {
        header = ptr - ___cxa_exception_header_size;
        var destructor = HEAP32[(((header)+(4))>>2)];
        if (destructor) {
          Runtime.dynCall('vi', destructor, [ptr]);
          HEAP32[(((header)+(4))>>2)]=0;
        }
        ___cxa_free_exception(ptr);
        ___cxa_last_thrown_exception = 0;
      }
    }


  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = ___cxa_caught_exceptions.pop();
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  
   
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i32=_memset;

  function ___cxa_allocate_exception(size) {
      var ptr = _malloc(size + ___cxa_exception_header_size);
      return ptr + ___cxa_exception_header_size;
    }


  function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      var header = ptr - ___cxa_exception_header_size;
      HEAP32[((header)>>2)]=type;
      HEAP32[(((header)+(4))>>2)]=destructor;
      ___cxa_last_thrown_exception = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

   
  Module["_strlen"] = _strlen;

  function _llvm_lifetime_start() {}

  function _llvm_lifetime_end() {}

  var _llvm_memset_p0i8_i64=_memset;

  var _fabs=Math_abs;

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }

  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function() { done(this.error); };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          stream.position = position;
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        if (stream.__proto__) {
          // reuse the object
          stream.__proto__ = FS.FSStream.prototype;
        } else {
          var newStream = new FS.FSStream();
          for (var p in stream) {
            newStream[p] = stream[p];
          }
          stream = newStream;
        }
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          function LazyUint8Array() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
  
              if (!hasByteServing) chunkSize = datalength;
  
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
  
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
  
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
  
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};
  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              var url = 'ws://' + addr + ':' + port;
              // the node ws library API is slightly different than the browser's
              var opts = ENVIRONMENT_IS_NODE ? {headers: {'websocket-protocol': ['binary']}} : ['binary'];
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      return FS.getStreamFromPtr(stream).fd;
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }


  var _sqrt=Math_sqrt;

   
  Module["_strcpy"] = _strcpy;

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  function _llvm_umul_with_overflow_i32(x, y) {
      x = x>>>0;
      y = y>>>0;
      return ((asm["setTempRet0"](x*y > 4294967295),(x*y)>>>0)|0);
    }

  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;

  var _atan2=Math_atan2;

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[(variable)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[(variable)]=1;
        return 1;
      }
      return 0;
    }

  function ___cxa_guard_abort() {}

  function ___cxa_guard_release() {}

  var _cos=Math_cos;

  var _sin=Math_sin;

  function _pthread_mutex_lock() {}

  function _pthread_mutex_unlock() {}

  function _pthread_cond_broadcast() {
      return 0;
    }

  function _pthread_cond_wait() {
      return 0;
    }

  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }

  
  
  
  
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }var _getc=_fgetc;

  function __ZNSt9exceptionD2Ev() {}

  function ___errno_location() {
      return ___errno_state;
    }

  
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _abort() {
      Module['abort']();
    }

  
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
  
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  
  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }function _isxdigit_l(chr) {
      return _isxdigit(chr); // no locale support yet
    }

  
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }function _isdigit_l(chr) {
      return _isdigit(chr); // no locale support yet
    }

  
  
  function __getFloat(text) {
      return /^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?/.exec(text);
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function get() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function unget() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
  
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
  
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)|0)]=next;
                if (next === 0) return i > 0 ? fields : fields-1; // we failed to read the full length of this field
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
  
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
  
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
  
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
  
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
  
            // write out null-terminating character
            HEAP8[((argPtr++)|0)]=0;
            formatIndex += match[0].length;
            
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
  
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            next = get();
            while (next > 0 && (!(next in __scanString.whiteSpace)))  {
              buffer.push(String.fromCharCode(next));
              next = get();
            }
            var m = __getFloat(buffer.join(''));
            var last = m ? m[0].length : 0;
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
  
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,(tempDouble=parseInt(text, 10),(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16);
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text);
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text);
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j];
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      function get() { return HEAP8[(((s)+(index++))|0)]; };
      function unget() { index--; };
      return __scanString(format, get, unget, varargs);
    }

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _newlocale(mask, locale, base) {
      return _malloc(4);
    }

  function _freelocale(locale) {
      _free(locale);
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
      
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)]
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls(Math.floor(year/100),2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ),
          // or by no characters if no timezone is determinable. 
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich). 
          // If tm_isdst is zero, the standard time offset is used. 
          // If tm_isdst is greater than zero, the daylight savings time offset is used. 
          // If tm_isdst is negative, no characters are returned. 
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%Z': function(date) {
          // Replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists. [ tm_isdst]
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  
  
  
  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }
  function __parseInt64(str, endptr, base, min, max, unsign) {
      var isNegative = false;
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
  
      // Check for a plus/minus sign.
      if (HEAP8[(str)] == 45) {
        str++;
        isNegative = true;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
  
      // Find base.
      var ok = false;
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            ok = true; // we saw an initial zero, perhaps the entire thing is just "0"
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      var start = str;
  
      // Get digits.
      var chr;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          str++;
          ok = true;
        }
      }
  
      if (!ok) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return ((asm["setTempRet0"](0),0)|0);
      }
  
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str;
      }
  
      try {
        var numberString = isNegative ? '-'+Pointer_stringify(start, str - start) : Pointer_stringify(start, str - start);
        i64Math.fromString(numberString, finalBase, min, max, unsign);
      } catch(e) {
        ___setErrNo(ERRNO_CODES.ERANGE); // not quite correct
      }
  
      return ((asm["setTempRet0"](((HEAP32[(((tempDoublePtr)+(4))>>2)])|0)),((HEAP32[((tempDoublePtr)>>2)])|0))|0);
    }function _strtoull(str, endptr, base) {
      return __parseInt64(str, endptr, base, 0, '18446744073709551615', true);  // ULONG_MAX.
    }function _strtoull_l(str, endptr, base) {
      return _strtoull(str, endptr, base); // no locale support yet
    }

  
  function _strtoll(str, endptr, base) {
      return __parseInt64(str, endptr, base, '-9223372036854775808', '9223372036854775807');  // LLONG_MIN, LLONG_MAX.
    }function _strtoll_l(str, endptr, base) {
      return _strtoll(str, endptr, base); // no locale support yet
    }

  function _uselocale(locale) {
      return 0;
    }

  var _llvm_va_start=undefined;

  
  
  function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }function _asprintf(s, format, varargs) {
      return _sprintf(-s, format, varargs);
    }function _vasprintf(s, format, va_arg) {
      return _asprintf(s, format, HEAP32[((va_arg)>>2)]);
    }

  function _llvm_va_end() {}

  function _vsnprintf(s, n, format, va_arg) {
      return _snprintf(s, n, format, HEAP32[((va_arg)>>2)]);
    }

  function _vsscanf(s, format, va_arg) {
      return _sscanf(s, format, HEAP32[((va_arg)>>2)]);
    }


  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  
  function _copysign(a, b) {
      return __reallyNegative(a) === __reallyNegative(b) ? a : -a;
    }var _copysignl=_copysign;

  
  function _fmod(x, y) {
      return x % y;
    }var _fmodl=_fmod;






  var Browser={mainLoop:{scheduler:null,method:"",shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
  
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
  
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
  
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
  
  
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
  
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        return Math.max(-1, Math.min(1, event.type === 'DOMMouseScroll' ? event.detail : -event.wheelDelta));
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (scrollX + rect.left);
              y = t.pageY - (scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (scrollX + rect.left);
            y = event.pageY - (scrollY + rect.top);
          }
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + 5242880;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);

var Math_min = Math.min;
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_dii(index,a1,a2) {
  try {
    return Module["dynCall_dii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiid(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiid"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vidiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_vidiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env._stdin|0;var p=env.__ZTVN10__cxxabiv117__class_type_infoE|0;var q=env.__ZTVN10__cxxabiv120__si_class_type_infoE|0;var r=env._stderr|0;var s=env._stdout|0;var t=env.___dso_handle|0;var u=+env.NaN;var v=+env.Infinity;var w=0;var x=0;var y=0;var z=0;var A=0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0,I=0.0;var J=0;var K=0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=0;var S=0;var T=global.Math.floor;var U=global.Math.abs;var V=global.Math.sqrt;var W=global.Math.pow;var X=global.Math.cos;var Y=global.Math.sin;var Z=global.Math.tan;var _=global.Math.acos;var $=global.Math.asin;var aa=global.Math.atan;var ba=global.Math.atan2;var ca=global.Math.exp;var da=global.Math.log;var ea=global.Math.ceil;var fa=global.Math.imul;var ga=env.abort;var ha=env.assert;var ia=env.asmPrintInt;var ja=env.asmPrintFloat;var ka=env.min;var la=env.invoke_viiiii;var ma=env.invoke_vi;var na=env.invoke_vii;var oa=env.invoke_ii;var pa=env.invoke_iiiiii;var qa=env.invoke_iiii;var ra=env.invoke_viiiiid;var sa=env.invoke_viiiiiiii;var ta=env.invoke_viiiiii;var ua=env.invoke_viiiiiii;var va=env.invoke_viiiiiid;var wa=env.invoke_viiiiiiiii;var xa=env.invoke_iii;var ya=env.invoke_dii;var za=env.invoke_iiiii;var Aa=env.invoke_viiid;var Ba=env.invoke_viii;var Ca=env.invoke_v;var Da=env.invoke_iiiiiiiii;var Ea=env.invoke_vidiii;var Fa=env.invoke_viiii;var Ga=env._llvm_lifetime_end;var Ha=env.__scanString;var Ia=env._pthread_mutex_lock;var Ja=env.___cxa_end_catch;var Ka=env._strtoull;var La=env._fflush;var Ma=env.__isLeapYear;var Na=env._fwrite;var Oa=env._send;var Pa=env._llvm_umul_with_overflow_i32;var Qa=env._isspace;var Ra=env._read;var Sa=env._isxdigit_l;var Ta=env._fileno;var Ua=env.___cxa_guard_abort;var Va=env._newlocale;var Wa=env.___gxx_personality_v0;var Xa=env._pthread_cond_wait;var Ya=env.___cxa_rethrow;var Za=env._fmod;var _a=env.___resumeException;var $a=env._llvm_va_end;var ab=env._vsscanf;var bb=env._snprintf;var cb=env._fgetc;var db=env.__getFloat;var eb=env._atexit;var fb=env.___cxa_free_exception;var gb=env._isdigit_l;var hb=env.___setErrNo;var ib=env._isxdigit;var jb=env._exit;var kb=env._sprintf;var lb=env.___ctype_b_loc;var mb=env._freelocale;var nb=env._catgets;var ob=env._asprintf;var pb=env.___cxa_is_number_type;var qb=env.___cxa_does_inherit;var rb=env.___cxa_guard_acquire;var sb=env.___cxa_begin_catch;var tb=env._emscripten_memcpy_big;var ub=env._recv;var vb=env.__parseInt64;var wb=env.__ZSt18uncaught_exceptionv;var xb=env._cos;var yb=env.__ZNSt9exceptionD2Ev;var zb=env._copysign;var Ab=env.__exit;var Bb=env._strftime;var Cb=env.___cxa_throw;var Db=env._pread;var Eb=env._strtoull_l;var Fb=env.__arraySum;var Gb=env._sysconf;var Hb=env._strtoll_l;var Ib=env.___cxa_find_matching_catch;var Jb=env.__formatString;var Kb=env._pthread_cond_broadcast;var Lb=env.__ZSt9terminatev;var Mb=env._pthread_mutex_unlock;var Nb=env.___cxa_call_unexpected;var Ob=env._sbrk;var Pb=env.___errno_location;var Qb=env._strerror;var Rb=env._catclose;var Sb=env._llvm_lifetime_start;var Tb=env.___cxa_guard_release;var Ub=env._ungetc;var Vb=env._uselocale;var Wb=env._vsnprintf;var Xb=env._sscanf;var Yb=env.___assert_fail;var Zb=env._fread;var _b=env._strftime_l;var $b=env._abort;var ac=env._isdigit;var bc=env._strtoll;var cc=env.__addDays;var dc=env._fabs;var ec=env.__reallyNegative;var fc=env._sqrt;var gc=env._write;var hc=env._mkport;var ic=env.___cxa_allocate_exception;var jc=env._sin;var kc=env._vasprintf;var lc=env._catopen;var mc=env.___ctype_toupper_loc;var nc=env.___ctype_tolower_loc;var oc=env._pwrite;var pc=env._strerror_r;var qc=env._atan2;var rc=env._time;var sc=0.0;
// EMSCRIPTEN_START_FUNCS
function of(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0,O=0,P=0,Q=0;e=i;i=i+288|0;f=e|0;g=e+72|0;j=e+144|0;k=e+160|0;l=+h[b>>3];m=+h[b+24>>3];n=+h[b+32>>3];o=l*n;p=+h[b+56>>3];q=+h[b+48>>3];b=g|0;h[b>>3]=1.0/l;r=g+24|0;h[r>>3]=(-0.0-m)/o;s=g+48|0;h[s>>3]=(m*p-n*q)/o;t=g+8|0;h[t>>3]=0.0;u=g+32|0;h[u>>3]=1.0/n;h[g+56>>3]=(-0.0-p)/n;h[g+16>>3]=0.0;h[g+40>>3]=0.0;h[g+64>>3]=1.0;n=+h[b>>3];p=+h[a>>3];o=+h[r>>3];q=+h[a+8>>3];m=+h[s>>3];l=+h[a+16>>3];v=n*p+o*q+m*l;w=+h[t>>3];x=+h[u>>3];y=+h[g+56>>3];z=p*w+q*x+l*y;A=+h[g+16>>3];B=+h[g+40>>3];C=+h[g+64>>3];D=p*A+q*B+l*C;l=+h[a+24>>3];q=+h[a+32>>3];p=+h[a+40>>3];E=n*l+o*q+m*p;F=w*l+x*q+y*p;G=A*l+B*q+C*p;p=+h[a+48>>3];q=+h[a+56>>3];l=+h[a+64>>3];a=j|0;c[a>>2]=0;g=j+4|0;c[g>>2]=0;u=j+8|0;c[u>>2]=0;Mf(j|0,3,4);H=z*G-D*F;I=D*E-v*G;J=v*F-z*E;j=c[g>>2]|0;g=c[a>>2]|0;a=(j|0)>-1;if(!((g|0)==0|a)){Yb(5976,5632,148,7504)}t=c[u>>2]|0;if((t|0)<=0){Yb(4712,6408,118,7528)}K=+V(v*v+(z*z+D*D));if((j|0)!=3){Yb(4072,3072,498,7464)}h[g>>3]=v/K;h[g+8>>3]=z/K;h[g+16>>3]=D/K;j=g+24|0;if(!((j|0)==0|a)){Yb(5976,5632,148,7504)}if((t|0)<=1){Yb(4712,6408,118,7528)}L=D*I-z*J;M=v*J-D*H;D=z*H-v*I;v=+V(L*L+(M*M+D*D));h[j>>3]=L/v;h[g+32>>3]=M/v;h[g+40>>3]=D/v;u=g+48|0;if(!((u|0)==0|a)){Yb(5976,5632,148,7504)}if((t|0)<=2){Yb(4712,6408,118,7528)}v=+V(H*H+(I*I+J*J));h[u>>3]=H/v;h[g+56>>3]=I/v;h[g+64>>3]=J/v;s=g+72|0;if(!((s|0)==0|a)){Yb(5976,5632,148,7504)}if((t|0)<=3){Yb(4712,6408,118,7528)}v=K+ +V(E*E+(F*F+G*G));h[s>>3]=(n*p+o*q+m*l)*2.0/v;h[g+80>>3]=(w*p+x*q+y*l)*2.0/v;h[g+88>>3]=(A*p+B*q+C*l)*2.0/v;a=k|0;h[a>>3]=1.0;r=k+40|0;b=k+8|0;Kq(b|0,0,32)|0;h[r>>3]=1.0;N=k+80|0;O=k+48|0;Kq(O|0,0,32)|0;h[N>>3]=1.0;Kq(k+88|0,0,32)|0;h[k+120>>3]=1.0;if((t|0)==4){t=k;P=g;c[t>>2]=c[P>>2];c[t+4>>2]=c[P+4>>2];c[t+8>>2]=c[P+8>>2];c[t+12>>2]=c[P+12>>2];c[t+16>>2]=c[P+16>>2];c[t+20>>2]=c[P+20>>2];t=k+32|0;g=t;Q=j;c[g>>2]=c[Q>>2];c[g+4>>2]=c[Q+4>>2];c[g+8>>2]=c[Q+8>>2];c[g+12>>2]=c[Q+12>>2];c[g+16>>2]=c[Q+16>>2];c[g+20>>2]=c[Q+20>>2];Q=k+64|0;g=Q;j=u;c[g>>2]=c[j>>2];c[g+4>>2]=c[j+4>>2];c[g+8>>2]=c[j+8>>2];c[g+12>>2]=c[j+12>>2];c[g+16>>2]=c[j+16>>2];c[g+20>>2]=c[j+20>>2];j=k+96|0;g=j;u=s;c[g>>2]=c[u>>2];c[g+4>>2]=c[u+4>>2];c[g+8>>2]=c[u+8>>2];c[g+12>>2]=c[u+12>>2];c[g+16>>2]=c[u+16>>2];c[g+20>>2]=c[u+20>>2];h[d>>3]=+h[j>>3];h[d+8>>3]=+h[k+104>>3];h[d+16>>3]=+h[k+112>>3];h[f>>3]=+h[a>>3];h[f+8>>3]=+h[b>>3];h[f+16>>3]=+h[k+16>>3];h[f+24>>3]=+h[t>>3];h[f+32>>3]=+h[r>>3];h[f+40>>3]=+h[O>>3];h[f+48>>3]=+h[Q>>3];h[f+56>>3]=+h[k+72>>3];h[f+64>>3]=+h[N>>3];mf(d+24|0,f);kq(P);i=e;return}else{Yb(4072,3072,498,7464)}}function pf(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0;d=i;i=i+72|0;e=d|0;f=+h[a>>3];g=+h[a+8>>3];j=+h[a+16>>3];k=+h[a+24>>3];l=+h[a+32>>3];m=+h[a+40>>3];n=+h[a+48>>3];o=+h[a+56>>3];p=f-j+l-n;q=g-k+m-o;r=j-l;s=n-l;l=k-m;t=o-m;m=r*t-l*s;u=(p*t-s*q)/m;s=(r*q-l*p)/m;h[e>>3]=j-f+j*u;h[e+24>>3]=n-f+n*s;h[e+48>>3]=f;h[e+8>>3]=k-g+k*u;h[e+32>>3]=o-g+o*s;h[e+56>>3]=g;h[e+16>>3]=u;h[e+40>>3]=s;h[e+64>>3]=1.0;of(e,b,c);i=d;return}function qf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;h=i;i=i+304|0;j=h|0;k=h+8|0;l=h+16|0;m=h+24|0;n=h+248|0;o=h+264|0;p=h+280|0;q=h+288|0;r=q|0;s=i;i=i+16|0;t=i;i=i+16|0;u=i;i=i+1|0;i=i+7&-8;v=i;i=i+12|0;i=i+7&-8;w=v|0;x=i;i=i+16|0;y=i;i=i+16|0;z=i;i=i+1|0;i=i+7&-8;jf(m,a,b);b=(d|0)==0;if(b){a=ed(21704,5856)|0;gi(l,a+(c[(c[a>>2]|0)-12>>2]|0)|0);A=yn(l,21432)|0;B=Fc[c[(c[A>>2]|0)+28>>2]&63](A,10)|0;xn(l);ej(a,B)|0;Pi(a)|0}a=(e|0)==0;if(a){B=ed(21704,6344)|0;gi(k,B+(c[(c[B>>2]|0)-12>>2]|0)|0);l=yn(k,21432)|0;A=Fc[c[(c[l>>2]|0)+28>>2]&63](l,10)|0;xn(k);ej(B,A)|0;Pi(B)|0}if((g|0)==0){c[n>>2]=d;c[n+8>>2]=f;B=(f|0)>-1;if(!(b|B)){Yb(5976,5632,148,7504)}c[o>>2]=e;c[o+8>>2]=f;if(!(a|B)){Yb(5976,5632,148,7504)}rf(m,n,o,f,0,p);i=h;return}p=c[g+8>>2]|0;do{if((p|0)==3){o=f<<1;if((c[g+4>>2]|0)<(o|0)){break}n=c[g>>2]|0;c[r>>2]=n;c[q+4>>2]=o;if(!((n|0)==0|(o|0)>-1)){Yb(5976,5632,148,7504)}c[s>>2]=d;c[s+8>>2]=f;o=(f|0)>-1;if(!(b|o)){Yb(5976,5632,148,7504)}c[t>>2]=e;c[t+8>>2]=f;if(!(a|o)){Yb(5976,5632,148,7504)}sf(m,s,t,f,q,u);i=h;return}else if((p|0)==6){o=f<<1;if((c[g+4>>2]|0)<(o|0)){break}n=c[g>>2]|0;c[w>>2]=n;c[v+4>>2]=o;if(!((n|0)==0|(o|0)>-1)){Yb(5976,5632,148,7504)}c[x>>2]=d;c[x+8>>2]=f;o=(f|0)>-1;if(!(b|o)){Yb(5976,5632,148,7504)}c[y>>2]=e;c[y+8>>2]=f;if(!(a|o)){Yb(5976,5632,148,7504)}tf(m,x,y,f,v,z);i=h;return}}while(0);z=ed(21704,4896)|0;gi(j,z+(c[(c[z>>2]|0)-12>>2]|0)|0);v=yn(j,21432)|0;f=Fc[c[(c[v>>2]|0)+28>>2]&63](v,10)|0;xn(j);ej(z,f)|0;Pi(z)|0;i=h;return}function rf(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;g=i;i=i+128|0;k=j;j=i;i=i+1|0;i=i+7&-8;a[j]=a[k]|0;k=g|0;j=g+8|0;l=g+16|0;m=g+40|0;n=g+88|0;o=g+104|0;p=k|0;c[p>>2]=0;q=k+4|0;c[q>>2]=0;r=c[d>>2]|0;s=(f|0)>-1;if(!((r|0)==0|s)){Yb(5976,5632,148,7504)}t=c[d+8>>2]|0;do{if(s){if((t-f|0)<0){break}c[m>>2]=b+128;c[m+4>>2]=r;c[m+12>>2]=f;c[m+16>>2]=r;c[m+24>>2]=t;c[m+32>>2]=3;d=m+36|0;c[d>>2]=0;c[m+40>>2]=0;c[n>>2]=b+200;c[n+4>>2]=1;c[n+8>>2]=f;Wf(l,m,n);Zf(j,l);kq(c[l>>2]|0);kq(c[d>>2]|0);d=j|0;u=(c[d>>2]|0)+16|0;v=j+4|0;w=c[v>>2]|0;if(!((u|0)==0|(w|0)>-1)){Yb(5976,5632,148,7504)}x=o|0;c[x>>2]=u;u=o+8|0;c[u>>2]=w;c[o+12>>2]=j;c[o+16>>2]=1;Vf(k|0,o);w=c[q>>2]|0;if((w|0)!=(c[u>>2]|0)){Yb(4072,3072,498,7464)}if((w|0)>0){u=c[x>>2]|0;x=c[p>>2]|0;y=0;do{h[x+(y<<3)>>3]=1.0/+h[u+((y*3|0)<<3)>>3];y=y+1|0;}while((y|0)<(w|0))}y=c[e>>2]|0;if(((c[e+8>>2]|0)-f|0)<0){Yb(7168,6408,141,7528)}u=c[v>>2]|0;x=c[d>>2]|0;z=(u|0)>-1;if(!((x|0)==0|z)){Yb(5976,5632,148,7504)}if(!z){Yb(7168,6408,141,7528)}if((w|0)!=(u|0)){Yb(2872,2776,55,7576)}if((w|0)!=(f|0)){Yb(4072,3072,498,7464)}u=c[p>>2]|0;if((f|0)>0){A=0}else{B=x;kq(B);C=u;kq(C);i=g;return}do{z=u+(A<<3)|0;D=A*3|0;E=A<<1;h[y+(E<<3)>>3]=+h[z>>3]*+h[x+(D<<3)>>3];h[y+((E|1)<<3)>>3]=+h[z>>3]*+h[x+(D+1<<3)>>3];A=A+1|0;}while((A|0)<(f|0));B=x;kq(B);C=u;kq(C);i=g;return}}while(0);Yb(7168,6408,141,7528)}function sf(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;k=i;i=i+256|0;l=j;j=i;i=i+1|0;i=i+7&-8;a[j]=a[l]|0;l=k|0;j=k+8|0;m=k+16|0;n=k+40|0;o=k+88|0;p=k+104|0;q=k+128|0;r=k+136|0;s=k+184|0;t=l|0;c[t>>2]=0;u=l+4|0;c[u>>2]=0;v=d;w=c[v>>2]|0;x=(f|0)>-1;if(!((w|0)==0|x)){Yb(5976,5632,148,7504)}y=d+8|0;d=c[y>>2]|0;do{if(x){if((d-f|0)<0){break}c[n>>2]=b+128;c[n+4>>2]=w;c[n+12>>2]=f;c[n+16>>2]=w;c[n+24>>2]=d;c[n+32>>2]=3;z=n+36|0;c[z>>2]=0;c[n+40>>2]=0;c[o>>2]=b+200;c[o+4>>2]=1;c[o+8>>2]=f;Wf(m,n,o);Zf(j,m);kq(c[m>>2]|0);kq(c[z>>2]|0);z=j|0;A=(c[z>>2]|0)+16|0;B=j+4|0;C=c[B>>2]|0;if(!((A|0)==0|(C|0)>-1)){Yb(5976,5632,148,7504)}D=p|0;c[D>>2]=A;A=p+8|0;c[A>>2]=C;c[p+12>>2]=j;c[p+16>>2]=1;Vf(l|0,p);C=c[u>>2]|0;if((C|0)!=(c[A>>2]|0)){Yb(4072,3072,498,7464)}if((C|0)>0){A=c[D>>2]|0;D=c[t>>2]|0;E=0;do{h[D+(E<<3)>>3]=1.0/+h[A+((E*3|0)<<3)>>3];E=E+1|0;}while((E|0)<(C|0))}E=e;A=c[E>>2]|0;D=e+8|0;if(((c[D>>2]|0)-f|0)<0){Yb(7168,6408,141,7528)}F=c[B>>2]|0;G=c[z>>2]|0;H=(F|0)>-1;if(!((G|0)==0|H)){Yb(5976,5632,148,7504)}if(!H){Yb(7168,6408,141,7528)}if((C|0)!=(F|0)){Yb(2872,2776,55,7576)}if((C|0)!=(f|0)){Yb(4072,3072,498,7464)}F=(f|0)>0;if(F){H=c[t>>2]|0;I=0;do{J=H+(I<<3)|0;K=I*3|0;L=I<<1;h[A+(L<<3)>>3]=+h[J>>3]*+h[G+(K<<3)>>3];h[A+((L|1)<<3)>>3]=+h[J>>3]*+h[G+(K+1<<3)>>3];I=I+1|0;}while((I|0)<(f|0))}kq(G);I=q|0;c[I>>2]=0;A=q+4|0;c[A>>2]=0;M=+h[b+96>>3];N=+h[b+104>>3];O=+h[b+112>>3];P=+h[b+120>>3];Q=+h[b>>3];R=+h[b+24>>3];S=+h[b+48>>3];T=+h[b+32>>3];U=+h[b+56>>3];V=M*2.0;W=N*2.0;X=O*2.0;Y=V*P;Z=W*P;_=X*P;P=M*V;V=M*W;$=M*X;M=N*W;W=N*X;N=O*X;h[s>>3]=1.0-(M+N);h[s+24>>3]=V-_;h[s+48>>3]=$+Z;h[s+8>>3]=V+_;h[s+32>>3]=1.0-(P+N);h[s+56>>3]=W-Y;h[s+16>>3]=$-Z;h[s+40>>3]=W+Y;h[s+64>>3]=1.0-(P+M);H=c[v>>2]|0;C=c[y>>2]|0;if((C-f|0)<0){Yb(7168,6408,141,7528)}c[r>>2]=s;c[r+4>>2]=H;c[r+12>>2]=f;c[r+16>>2]=H;c[r+24>>2]=C;c[r+32>>2]=3;C=r+36|0;c[C>>2]=0;c[r+40>>2]=0;Xf(q,r)|0;kq(c[C>>2]|0);C=c[g>>2]|0;H=c[g+4>>2]|0;z=H-f|0;if((z|0)<0){Yb(7168,6408,141,7528)}B=c[I>>2]|0;I=c[A>>2]|0;A=(I|0)>-1;if(!((B+8|0)==0|A)){Yb(5976,5632,148,7504)}K=c[E>>2]|0;J=c[D>>2]|0;L=(J|0)>-1;if(!((K|0)==0|L)){Yb(5976,5632,148,7504)}if((J-f|0)<0){Yb(7168,6408,141,7528)}if((I|0)!=(f|0)){Yb(472,272,131,7624)}M=R*2.0;if(!((B+16|0)==0|A)){Yb(5976,5632,148,7504)}if(F){I=c[t>>2]|0;J=0;do{aa=J*3|0;h[C+(J<<3)>>3]=(+h[B+(aa+1<<3)>>3]*2.0*(S- +h[K+(J<<1<<3)>>3])-M*+h[B+(aa+2<<3)>>3])*+h[I+(J<<3)>>3];J=J+1|0;}while((J|0)<(f|0))}if(!((B|0)==0|A)){Yb(5976,5632,148,7504)}R=Q*2.0;do{if(F){J=c[t>>2]|0;I=0;do{D=I*3|0;h[C+(I+H<<3)>>3]=(+h[B+(D<<3)>>3]*-2.0*(S- +h[K+(I<<1<<3)>>3])+R*+h[B+(D+2<<3)>>3])*+h[J+(I<<3)>>3];I=I+1|0;}while((I|0)<(f|0));I=H<<1;if(!F){ba=I;break}J=c[t>>2]|0;D=0;while(1){E=D*3|0;h[C+(D+I<<3)>>3]=(M*+h[B+(E<<3)>>3]-R*+h[B+(E+1<<3)>>3])*+h[J+(D<<3)>>3];E=D+1|0;if((E|0)<(f|0)){D=E}else{ba=I;break}}}else{ba=H<<1}}while(0);if(!((z|f|0)>-1)){Yb(7168,6408,141,7528)}if(!((K+8|0)==0|L)){Yb(5976,5632,148,7504)}R=T*2.0;A=c[t>>2]|0;if(F){ca=0}else{da=B;kq(da);ea=A;kq(ea);i=k;return}do{I=ca*3|0;h[C+(ca+z<<3)>>3]=+h[A+(ca<<3)>>3]*(+h[B+(I+1<<3)>>3]*2.0*(U- +h[K+((ca<<1|1)<<3)>>3])-R*+h[B+(I+2<<3)>>3]);ca=ca+1|0;}while((ca|0)<(f|0));L=z+H|0;if(F){fa=0}else{da=B;kq(da);ea=A;kq(ea);i=k;return}do{h[C+(fa+L<<3)>>3]=+h[A+(fa<<3)>>3]*+h[B+((fa*3|0)<<3)>>3]*-2.0*(U- +h[K+((fa<<1|1)<<3)>>3]);fa=fa+1|0;}while((fa|0)<(f|0));K=z+ba|0;if(F){ga=0}else{da=B;kq(da);ea=A;kq(ea);i=k;return}do{h[C+(ga+K<<3)>>3]=R*+h[B+((ga*3|0)<<3)>>3]*+h[A+(ga<<3)>>3];ga=ga+1|0;}while((ga|0)<(f|0));da=B;kq(da);ea=A;kq(ea);i=k;return}}while(0);Yb(7168,6408,141,7528)}function tf(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0;k=i;i=i+256|0;l=j;j=i;i=i+1|0;i=i+7&-8;a[j]=a[l]|0;l=k|0;j=k+8|0;m=k+16|0;n=k+40|0;o=k+88|0;p=k+104|0;q=k+128|0;r=k+136|0;s=k+184|0;t=l|0;c[t>>2]=0;u=l+4|0;c[u>>2]=0;v=d;w=c[v>>2]|0;x=(f|0)>-1;if(!((w|0)==0|x)){Yb(5976,5632,148,7504)}y=d+8|0;d=c[y>>2]|0;do{if(x){if((d-f|0)<0){break}c[n>>2]=b+128;c[n+4>>2]=w;c[n+12>>2]=f;c[n+16>>2]=w;c[n+24>>2]=d;c[n+32>>2]=3;z=n+36|0;c[z>>2]=0;c[n+40>>2]=0;c[o>>2]=b+200;c[o+4>>2]=1;c[o+8>>2]=f;Wf(m,n,o);Zf(j,m);kq(c[m>>2]|0);kq(c[z>>2]|0);z=j|0;A=(c[z>>2]|0)+16|0;B=j+4|0;C=c[B>>2]|0;if(!((A|0)==0|(C|0)>-1)){Yb(5976,5632,148,7504)}D=p|0;c[D>>2]=A;A=p+8|0;c[A>>2]=C;c[p+12>>2]=j;c[p+16>>2]=1;Vf(l|0,p);C=c[u>>2]|0;if((C|0)!=(c[A>>2]|0)){Yb(4072,3072,498,7464)}if((C|0)>0){A=c[D>>2]|0;D=c[t>>2]|0;E=0;do{h[D+(E<<3)>>3]=1.0/+h[A+((E*3|0)<<3)>>3];E=E+1|0;}while((E|0)<(C|0))}E=e;A=c[E>>2]|0;D=e+8|0;if(((c[D>>2]|0)-f|0)<0){Yb(7168,6408,141,7528)}F=c[B>>2]|0;G=c[z>>2]|0;H=(F|0)>-1;if(!((G|0)==0|H)){Yb(5976,5632,148,7504)}if(!H){Yb(7168,6408,141,7528)}if((C|0)!=(F|0)){Yb(2872,2776,55,7576)}if((C|0)!=(f|0)){Yb(4072,3072,498,7464)}F=(f|0)>0;if(F){H=c[t>>2]|0;I=0;do{J=H+(I<<3)|0;K=I*3|0;L=I<<1;h[A+(L<<3)>>3]=+h[J>>3]*+h[G+(K<<3)>>3];h[A+((L|1)<<3)>>3]=+h[J>>3]*+h[G+(K+1<<3)>>3];I=I+1|0;}while((I|0)<(f|0))}kq(G);I=q|0;c[I>>2]=0;A=q+4|0;c[A>>2]=0;M=+h[b+96>>3];N=+h[b+104>>3];O=+h[b+112>>3];P=+h[b+120>>3];Q=+h[b>>3];R=+h[b+24>>3];S=+h[b+48>>3];T=+h[b+32>>3];U=+h[b+56>>3];V=M*2.0;W=N*2.0;X=O*2.0;Y=V*P;Z=W*P;_=X*P;P=M*V;V=M*W;$=M*X;M=N*W;W=N*X;N=O*X;h[s>>3]=1.0-(M+N);h[s+24>>3]=V-_;h[s+48>>3]=$+Z;h[s+8>>3]=V+_;h[s+32>>3]=1.0-(P+N);h[s+56>>3]=W-Y;h[s+16>>3]=$-Z;h[s+40>>3]=W+Y;h[s+64>>3]=1.0-(P+M);H=c[v>>2]|0;C=c[y>>2]|0;if((C-f|0)<0){Yb(7168,6408,141,7528)}c[r>>2]=s;c[r+4>>2]=H;c[r+12>>2]=f;c[r+16>>2]=H;c[r+24>>2]=C;c[r+32>>2]=3;C=r+36|0;c[C>>2]=0;c[r+40>>2]=0;Xf(q,r)|0;kq(c[C>>2]|0);C=g;H=c[C>>2]|0;z=c[g+4>>2]|0;B=z-f|0;if((B|0)<0){Yb(7168,6408,141,7528)}K=c[I>>2]|0;J=c[A>>2]|0;A=(J|0)>-1;if(!((K+8|0)==0|A)){Yb(5976,5632,148,7504)}L=c[E>>2]|0;aa=c[D>>2]|0;ba=(aa|0)>-1;if(!((L|0)==0|ba)){Yb(5976,5632,148,7504)}if((aa-f|0)<0){Yb(7168,6408,141,7528)}if((J|0)!=(f|0)){Yb(472,272,131,7624)}M=R*2.0;if(!((K+16|0)==0|A)){Yb(5976,5632,148,7504)}if(F){J=c[t>>2]|0;aa=0;do{ca=aa*3|0;h[H+(aa<<3)>>3]=(+h[K+(ca+1<<3)>>3]*2.0*(S- +h[L+(aa<<1<<3)>>3])-M*+h[K+(ca+2<<3)>>3])*+h[J+(aa<<3)>>3];aa=aa+1|0;}while((aa|0)<(f|0))}if(!((K|0)==0|A)){Yb(5976,5632,148,7504)}P=Q*2.0;do{if(F){aa=c[t>>2]|0;J=0;do{G=J*3|0;h[H+(J+z<<3)>>3]=(+h[K+(G<<3)>>3]*-2.0*(S- +h[L+(J<<1<<3)>>3])+P*+h[K+(G+2<<3)>>3])*+h[aa+(J<<3)>>3];J=J+1|0;}while((J|0)<(f|0));J=z<<1;if(!F){da=J;break}aa=c[t>>2]|0;G=0;while(1){ca=G*3|0;h[H+(G+J<<3)>>3]=(M*+h[K+(ca<<3)>>3]-P*+h[K+(ca+1<<3)>>3])*+h[aa+(G<<3)>>3];ca=G+1|0;if((ca|0)<(f|0)){G=ca}else{da=J;break}}}else{da=z<<1}}while(0);A=g+4|0;J=H+(B<<3)|0;if(!((B|f|0)>-1)){Yb(7168,6408,141,7528)}if(!((L+8|0)==0|ba)){Yb(5976,5632,148,7504)}P=T*2.0;G=c[t>>2]|0;a:do{if(F){aa=0;do{ca=aa*3|0;h[H+(aa+B<<3)>>3]=+h[G+(aa<<3)>>3]*(+h[K+(ca+1<<3)>>3]*2.0*(U- +h[L+((aa<<1|1)<<3)>>3])-P*+h[K+(ca+2<<3)>>3]);aa=aa+1|0;}while((aa|0)<(f|0));aa=B+z|0;if(F){ea=0}else{fa=87;break}do{h[H+(ea+aa<<3)>>3]=+h[G+(ea<<3)>>3]*+h[K+((ea*3|0)<<3)>>3]*-2.0*(U- +h[L+((ea<<1|1)<<3)>>3]);ea=ea+1|0;}while((ea|0)<(f|0));aa=B+da|0;if(F){ga=0}else{ca=z*3|0;ha=H+(ca<<3)|0;if((ha|0)!=0){ia=ca;ja=ha;fa=92;break}ha=H+(z<<2<<3)|0;if((ha|0)==0){ka=z;la=B;ma=J;na=H;break}else{oa=ca;pa=ha;fa=99;break}}do{h[H+(ga+aa<<3)>>3]=P*+h[K+((ga*3|0)<<3)>>3]*+h[G+(ga<<3)>>3];ga=ga+1|0;}while((ga|0)<(f|0));aa=z*3|0;ha=H+(aa<<3)|0;ca=(ha|0)==0;do{if(F){h[ha>>3]=Q*+h[G>>3];if((f|0)>1){qa=1}else{break}while(1){h[H+(qa+aa<<3)>>3]=Q*+h[G+(qa<<3)>>3];ra=qa+1|0;if((ra|0)<(f|0)){qa=ra}else{ia=aa;ja=ha;fa=92;break a}}}}while(0);if(ca){sa=aa;fa=95}else{ia=aa;ja=ha;fa=92}}else{fa=87}}while(0);if((fa|0)==87){K=z*3|0;ba=H+(K<<3)|0;if((ba|0)==0){sa=K;fa=95}else{ia=K;ja=ba;fa=92}}do{if((fa|0)==92){if((G|0)!=(ja|0)){sa=ia;fa=95;break}Yb(2088,1952,392,7496)}}while(0);b:do{if((fa|0)==95){ba=z<<2;K=H+(ba<<3)|0;ra=(K|0)==0;do{if(F){h[K>>3]=R*+h[G>>3];if((f|0)>1){ta=1}else{break}while(1){h[H+(ta+ba<<3)>>3]=R*+h[G+(ta<<3)>>3];ua=ta+1|0;if((ua|0)<(f|0)){ta=ua}else{oa=sa;pa=K;fa=99;break b}}}}while(0);if(ra){va=sa;fa=102}else{oa=sa;pa=K;fa=99}}}while(0);do{if((fa|0)==99){if((G|0)!=(pa|0)){va=oa;fa=102;break}Yb(2088,1952,392,7496)}}while(0);do{if((fa|0)==102){ba=z*5|0;if(F){wa=0}else{ka=z;la=B;ma=J;na=H;break}do{h[H+(wa+ba<<3)>>3]=(S- +h[L+(wa<<1<<3)>>3])*+h[G+(wa<<3)>>3];wa=wa+1|0;}while((wa|0)<(f|0));if(!F){ka=z;la=B;ma=J;na=H;break}Kq(H+(B+va<<3)|0,0,f<<3|0)|0;ba=c[A>>2]|0;K=ba-f|0;ra=c[C>>2]|0;ka=ba;la=K;ma=ra+(K<<3)|0;na=ra}}while(0);if(!((la|f|0)>-1)){Yb(7168,6408,141,7528)}C=ka<<2;A=ma+(C<<3)|0;if(F){B=0;do{h[ma+(B+C<<3)>>3]=T*+h[G+(B<<3)>>3];B=B+1|0;}while((B|0)<(f|0));if((G|0)==(A|0)){fa=113}}else{if((G|0)==(A|0)&(A|0)!=0){fa=113}}if((fa|0)==113){Yb(2088,1952,392,7496)}B=ka-f|0;if(!((B|f|0)>-1)){Yb(7168,6408,141,7528)}C=B+(ka*5|0)|0;B=c[E>>2]|0;H=c[D>>2]|0;if(!((B+8|0)==0|(H|0)>-1)){Yb(5976,5632,148,7504)}if((H-f|0)<0){Yb(7168,6408,141,7528)}if(F){xa=0}else{ya=c[I>>2]|0;za=ya;kq(za);Aa=G;kq(Aa);i=k;return}do{h[na+(xa+C<<3)>>3]=(U- +h[B+((xa<<1|1)<<3)>>3])*+h[G+(xa<<3)>>3];xa=xa+1|0;}while((xa|0)<(f|0));ya=c[I>>2]|0;za=ya;kq(za);Aa=G;kq(Aa);i=k;return}}while(0);Yb(7168,6408,141,7528)}function uf(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,g=0.0,i=0.0;d=+h[b>>3];e=+h[b+8>>3];f=+h[a>>3]*d+ +h[a+24>>3]*e+ +h[a+48>>3];g=d*+h[a+8>>3]+e*+h[a+32>>3]+ +h[a+56>>3];i=d*+h[a+16>>3]+e*+h[a+40>>3]+ +h[a+64>>3];a=c|0;h[a>>3]=f;b=c+8|0;h[b>>3]=g;if(!(i!=0.0)){return}h[a>>3]=f/i;h[b>>3]=g/i;return}function vf(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0.0,Ea=0.0,Fa=0.0,Ga=0.0,Ha=0.0,Ia=0.0,Ja=0.0,Ka=0.0,La=0,Ma=0;g=i;i=i+432|0;j=g|0;k=g+8|0;l=g+16|0;m=g+24|0;n=g+32|0;o=g+40|0;p=g+48|0;q=g+56|0;r=g+152|0;s=g+216|0;t=g+272|0;u=g+288|0;v=g+296|0;w=g+312|0;x=g+336|0;y=g+344|0;z=g+360|0;A=g+384|0;B=g+392|0;Kq(q|0,0,24)|0;h[q+24>>3]=1.0;Kq(q+32|0,0,16)|0;h[q+48>>3]=1.0;h[q+56>>3]=1.0;Kq(q+64|0,0,16)|0;h[q+80>>3]=1.0;h[q+88>>3]=0.0;C=r|0;D=q|0;lf(s,d);q=t|0;E=t|0;F=t+4|0;G=t+8|0;H=u|0;I=u+4|0;J=w|0;K=w+8|0;L=w+12|0;M=w+16|0;N=v|0;O=v|0;P=v+4|0;Q=v+8|0;R=v;S=x|0;T=x+4|0;U=z|0;W=z+4|0;X=z+8|0;Y=z+12|0;Z=z+16|0;_=z+8|0;$=_|0;aa=_;ba=B+32|0;ca=B+4|0;da=A|0;ea=A+4|0;fa=x|0;ga=B+20|0;ha=B+12|0;ia=B|0;ja=d+24|0;ka=d+32|0;la=d+40|0;ma=d+48|0;na=d|0;oa=d+8|0;pa=d+16|0;qa=y|0;ra=s|0;sa=s+8|0;ta=s+16|0;ua=s+24|0;va=s+32|0;wa=s+40|0;xa=s+48|0;s=0;while(1){if((s|0)>=(f|0)){ya=2;za=90;break}c[E>>2]=0;c[F>>2]=0;c[G>>2]=0;Mf(q,8,6);qf(b,d,D,C,4,t);if((oq(p,16,64)|0)!=0){za=8;break}Aa=c[p>>2]|0;if((Aa|0)==0){za=10;break}Ba=Aa;c[H>>2]=Ba;c[I>>2]=8;h[Ba>>3]=+h[r>>3]- +h[e>>3];h[Aa+32>>3]=+h[r+8>>3]- +h[e+8>>3];h[Aa+8>>3]=+h[r+16>>3]- +h[e+16>>3];h[Aa+40>>3]=+h[r+24>>3]- +h[e+24>>3];h[Aa+16>>3]=+h[r+32>>3]- +h[e+32>>3];h[Aa+48>>3]=+h[r+40>>3]- +h[e+40>>3];h[Aa+24>>3]=+h[r+48>>3]- +h[e+48>>3];h[Aa+56>>3]=+h[r+56>>3]- +h[e+56>>3];c[J>>2]=t;c[K>>2]=u;c[L>>2]=0;c[M>>2]=0;if((c[F>>2]|0)!=8){za=16;break}Aa=c[G>>2]|0;if(Aa>>>0>536870911>>>0){za=19;break}Ba=Aa<<3;if((oq(o,16,Ba)|0)==0){Ca=c[o>>2]|0}else{c[o>>2]=0;Ca=0}if(!((Ca|0)!=0|(Ba|0)==0)){za=26;break}c[O>>2]=Ca;c[P>>2]=Aa;c[Q>>2]=1;Mf(N,c[G>>2]|0,1);h[m>>3]=0.0;Of(R,m)|0;h[n>>3]=1.0;if((c[G>>2]|0)!=(c[P>>2]|0)){za=32;break}if((c[Q>>2]|0)!=1){za=32;break}Nf(w,v,n);kq(c[L>>2]|0);if((oq(l,16,48)|0)!=0){za=40;break}Aa=c[l>>2]|0;if((Aa|0)==0){za=42;break}c[S>>2]=Aa;c[T>>2]=6;c[U>>2]=t;c[W>>2]=t;c[X>>2]=0;c[Y>>2]=0;c[Z>>2]=0;Aa=c[G>>2]|0;Mf($,Aa,Aa);h[j>>3]=0.0;Of(aa,j)|0;h[k>>3]=1.0;_f(z,_,k);bg(y,_);kq(c[X>>2]|0);If(B,y);if((a[ba]|0)==0){za=50;break}if((c[ca>>2]|0)!=(c[P>>2]|0)){za=53;break}c[da>>2]=B;c[ea>>2]=v;xf(fa,c[B+8>>2]|0,c[Q>>2]|0);yf(A,x);kq(c[ga>>2]|0);kq(c[ha>>2]|0);kq(c[ia>>2]|0);Aa=c[T>>2]|0;if((Aa|0)<=0){za=58;break}Ba=c[S>>2]|0;Da=+h[Ba>>3];if((Aa|0)<=1){za=61;break}Ea=+h[Ba+8>>3];if((Aa|0)<=2){za=64;break}Fa=+h[Ba+16>>3];Ga=1.0-Da*Da-Ea*Ea-Fa*Fa;if(Ga>0.0){Ha=+V(Ga);Ga=+h[ja>>3];Ia=+h[ka>>3];Ja=+h[la>>3];Ka=+h[ma>>3];h[ja>>3]=Ea*Ja+(Ha*Ga+Da*Ka)-Fa*Ia;h[ka>>3]=Fa*Ga+(Ha*Ia+Ea*Ka)-Da*Ja;h[la>>3]=Da*Ia+(Ha*Ja+Fa*Ka)-Ea*Ga;h[ma>>3]=Ha*Ka-Da*Ga-Ea*Ia-Fa*Ja;La=Aa-3|0;if(!((La|0)>-1)){za=82;break}Ja=+h[oa>>3]+ +h[Ba+(Aa-2<<3)>>3];Fa=+h[pa>>3]+ +h[Ba+(Aa-1<<3)>>3];h[na>>3]=+h[na>>3]+ +h[Ba+(La<<3)>>3];h[oa>>3]=Ja;h[pa>>3]=Fa;Ma=0}else{h[na>>3]=+h[ra>>3];h[oa>>3]=+h[sa>>3];h[pa>>3]=+h[ta>>3];h[ja>>3]=+h[ua>>3];h[ka>>3]=+h[va>>3];h[la>>3]=+h[wa>>3];h[ma>>3]=+h[xa>>3];Ma=1}kq(c[qa>>2]|0);kq(c[S>>2]|0);kq(c[O>>2]|0);kq(c[H>>2]|0);kq(c[E>>2]|0);if(Ma){ya=1;za=90;break}else{s=s+1|0}}if((za|0)==8){c[p>>2]=0;za=10}else if((za|0)==16){Yb(3352,3224,95,7640);return 0}else if((za|0)==19){Be();return 0}else if((za|0)==26){Be();return 0}else if((za|0)==32){Yb(3160,2968,347,7448);return 0}else if((za|0)==40){c[l>>2]=0;za=42}else if((za|0)==50){Yb(4408,5432,178,7376);return 0}else if((za|0)==53){Yb(3624,5432,180,7376);return 0}else if((za|0)==58){Yb(3944,3816,394,7416);return 0}else if((za|0)==61){Yb(3944,3816,394,7416);return 0}else if((za|0)==64){Yb(3944,3816,394,7416);return 0}else if((za|0)==82){Yb(7168,6408,141,7528);return 0}else if((za|0)==90){i=g;return ya|0}if((za|0)==10){Be();return 0}else if((za|0)==42){Be();return 0}return 0}function wf(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0.0,U=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0;k=i;i=i+928|0;l=k|0;m=k+8|0;n=k+16|0;o=k+24|0;p=k+32|0;q=k+40|0;r=k+48|0;s=k+56|0;t=k+280|0;u=k+296|0;v=k+320|0;w=k+488|0;x=k+600|0;y=k+656|0;z=k+768|0;A=k+784|0;B=k+792|0;C=k+808|0;D=k+832|0;E=k+840|0;F=k+856|0;G=k+880|0;H=k+888|0;I=j*4.0;Kq(v|0,0,24)|0;h[v+24>>3]=1.0;Kq(v+32|0,0,16)|0;h[v+48>>3]=1.0;h[v+56>>3]=1.0;Kq(v+64|0,0,16)|0;h[v+80>>3]=1.0;h[v+88>>3]=0.0;h[v+96>>3]=1.25;h[v+104>>3]=.5;h[v+112>>3]=0.0;h[v+120>>3]=.5;h[v+128>>3]=1.25;h[v+136>>3]=0.0;h[v+144>>3]=.5;h[v+152>>3]=.5;h[v+160>>3]=.75;J=w|0;K=v|0;lf(x,d);L=y|0;h[L>>3]=+h[e>>3];M=y+8|0;h[M>>3]=+h[e+8>>3];N=y+16|0;h[N>>3]=+h[e+16>>3];O=y+24|0;h[O>>3]=+h[e+24>>3];P=y+32|0;h[P>>3]=+h[e+32>>3];Q=y+40|0;h[Q>>3]=+h[e+40>>3];R=y+48|0;h[R>>3]=+h[e+48>>3];S=y+56|0;h[S>>3]=+h[e+56>>3];jf(s,b,g);c[t>>2]=v;c[t+8>>2]=7;v=w|0;c[u>>2]=v;c[u+8>>2]=7;rf(s,t,u,7,0,k+312|0);j=+h[L>>3];T=+h[M>>3];U=+h[v>>3];W=+h[w+8>>3];X=+h[N>>3];Y=+h[O>>3];Z=+h[w+16>>3];_=+h[w+24>>3];$=+h[P>>3];aa=+h[Q>>3];ba=+h[w+32>>3];ca=+h[w+40>>3];da=+h[R>>3];ea=+h[S>>3];fa=+h[w+48>>3];ga=+h[w+56>>3];ha=(j+0.0+X+$+da-(U+0.0+Z+ba+fa))*.25;ia=(T+0.0+Y+aa+ea-(W+0.0+_+ca+ga))*.25;h[y+64>>3]=ha+ +h[w+64>>3];h[y+72>>3]=ia+ +h[w+72>>3];h[y+80>>3]=ha+ +h[w+80>>3];h[y+88>>3]=ia+ +h[w+88>>3];h[y+96>>3]=ha+ +h[w+96>>3];h[y+104>>3]=ia+ +h[w+104>>3];ia=U-j;U=W-T;W=+V(ia*ia+U*U)+0.0;U=X<j?X:j;ia=X>j?X:j;j=Y<T?Y:T;ha=Y>T?Y:T;T=Z-X;X=_-Y;Y=W+ +V(T*T+X*X);X=$<U?$:U;U=$>ia?$:ia;ia=aa<j?aa:j;j=aa>ha?aa:ha;ha=ba-$;$=ca-aa;aa=fa-da;fa=ga-ea;ga=Y+ +V(ha*ha+$*$)+ +V(aa*aa+fa*fa);if(ga<I){h[d>>3]=+h[g>>3];h[d+8>>3]=+h[g+8>>3];h[d+16>>3]=+h[g+16>>3];h[d+24>>3]=+h[g+24>>3];h[d+32>>3]=+h[g+32>>3];h[d+40>>3]=+h[g+40>>3];h[d+48>>3]=+h[g+48>>3];ja=3;i=k;return ja|0}fa=(da>U?da:U)-(da<X?da:X);X=(ea>j?ea:j)-(ea<ia?ea:ia);g=z|0;S=z|0;R=z+4|0;Q=z+8|0;P=A|0;O=A+4|0;N=x|0;v=d|0;M=x+8|0;L=d+8|0;u=x+16|0;t=d+16|0;s=x+24|0;e=d+24|0;ka=x+32|0;la=d+32|0;ma=x+40|0;na=d+40|0;oa=x+48|0;x=d+48|0;pa=C|0;qa=C+8|0;ra=C+12|0;sa=C+16|0;ta=B|0;ua=B|0;va=B+4|0;wa=B+8|0;xa=B;ya=D|0;za=D+4|0;Aa=F|0;Ba=F+4|0;Ca=F+8|0;Da=F+12|0;Ea=F+16|0;Fa=F+8|0;Ga=Fa|0;Ha=Fa;Ia=H+32|0;Ja=H+4|0;Ka=G|0;La=G+4|0;Ma=D|0;Na=H+20|0;Oa=H+12|0;Pa=H|0;Qa=E|0;Ra=f;f=0;Sa=ga*.25>(X<fa?X:fa)?4:7;a:while(1){if((f|0)>=(Ra|0)){Ta=137;break}Ua=Sa<<1;c[S>>2]=0;c[R>>2]=0;c[Q>>2]=0;Mf(g,Ua,6);qf(b,d,K,J,Sa,z);if(Ua>>>0>536870911>>>0){Ta=9;break}Va=Sa<<4;if((oq(l,16,Va)|0)==0){Wa=c[l>>2]|0}else{c[l>>2]=0;Wa=0}if(!((Wa|0)!=0|(Va|0)==0)){Ta=16;break}Va=Wa;c[P>>2]=Va;c[O>>2]=Ua;if(!((Ua|0)>-1)){Ta=20;break}do{if((Sa|0)>0){Xa=0;do{if((Ua|0)<=(Xa|0)){Ta=24;break a}h[Va+(Xa<<3)>>3]=+h[w+(Xa<<4)>>3]- +h[y+(Xa<<4)>>3];Ya=Xa+Sa|0;if(!((Ya|0)>-1&(Ua|0)>(Ya|0))){Ta=27;break a}h[Va+(Ya<<3)>>3]=+h[w+(Xa<<4)+8>>3]- +h[y+(Xa<<4)+8>>3];Xa=Xa+1|0;}while((Xa|0)<(Sa|0));if(!((f|0)==(Ra-1|0)&(Sa|0)>4)){Ta=61;break}if((Ua|0)<=0){Ta=36;break a}fa=+h[Va>>3];if((Ua|0)<=1){Ta=39;break a}X=+h[Wa+8>>3];ga=+V(fa*fa+X*X);if((Ua|0)<=2){Ta=42;break a}X=+h[Wa+16>>3];if((Ua|0)<=3){Ta=45;break a}fa=+h[Wa+24>>3];ia=ga+ +V(X*X+fa*fa);if((Ua|0)<=4){Ta=48;break a}fa=+h[Wa+32>>3];if((Ua|0)<=5){Ta=51;break a}X=+h[Wa+40>>3];ga=ia+ +V(fa*fa+X*X);if((Ua|0)<=6){Ta=54;break a}X=+h[Wa+48>>3];if((Ua|0)<=7){Ta=57;break a}fa=+h[Wa+56>>3];if(!(ga+ +V(X*X+fa*fa)>I)){Ta=61;break}h[v>>3]=+h[N>>3];h[L>>3]=+h[M>>3];h[t>>3]=+h[u>>3];h[e>>3]=+h[s>>3];h[la>>3]=+h[ka>>3];h[na>>3]=+h[ma>>3];h[x>>3]=+h[oa>>3];Za=Ra+f|0;_a=10;$a=4;ab=Va}else{Ta=61}}while(0);if((Ta|0)==61){Ta=0;c[pa>>2]=z;c[qa>>2]=A;c[ra>>2]=0;c[sa>>2]=0;if((c[R>>2]|0)!=(Ua|0)){Ta=62;break}Va=c[Q>>2]|0;if(Va>>>0>536870911>>>0){Ta=65;break}Xa=Va<<3;if((oq(o,16,Xa)|0)==0){bb=c[o>>2]|0}else{c[o>>2]=0;bb=0}if(!((bb|0)!=0|(Xa|0)==0)){Ta=72;break}c[ua>>2]=bb;c[va>>2]=Va;c[wa>>2]=1;Mf(ta,c[Q>>2]|0,1);h[m>>3]=0.0;Of(xa,m)|0;h[n>>3]=1.0;if((c[Q>>2]|0)!=(c[va>>2]|0)){Ta=78;break}if((c[wa>>2]|0)!=1){Ta=78;break}Nf(C,B,n);kq(c[ra>>2]|0);if((oq(p,16,48)|0)!=0){Ta=86;break}Va=c[p>>2]|0;if((Va|0)==0){break}c[ya>>2]=Va;c[za>>2]=6;c[Aa>>2]=z;c[Ba>>2]=z;c[Ca>>2]=0;c[Da>>2]=0;c[Ea>>2]=0;Va=c[Q>>2]|0;Mf(Ga,Va,Va);h[q>>3]=0.0;Of(Ha,q)|0;h[r>>3]=1.0;_f(F,Fa,r);bg(E,Fa);kq(c[Ca>>2]|0);If(H,E);if((a[Ia]|0)==0){Ta=96;break}if((c[Ja>>2]|0)!=(c[va>>2]|0)){Ta=99;break}c[Ka>>2]=H;c[La>>2]=B;xf(Ma,c[H+8>>2]|0,c[wa>>2]|0);yf(G,D);kq(c[Na>>2]|0);kq(c[Oa>>2]|0);kq(c[Pa>>2]|0);Va=c[za>>2]|0;if((Va|0)<=0){Ta=104;break}Xa=c[ya>>2]|0;fa=+h[Xa>>3];if((Va|0)<=1){Ta=107;break}X=+h[Xa+8>>3];if((Va|0)<=2){Ta=110;break}ga=+h[Xa+16>>3];ia=1.0-fa*fa-X*X-ga*ga;if(ia>0.0){ea=+V(ia);ia=+h[e>>3];j=+h[la>>3];da=+h[na>>3];U=+h[x>>3];h[e>>3]=X*da+(ea*ia+fa*U)-ga*j;h[la>>3]=ga*ia+(ea*j+X*U)-fa*da;h[na>>3]=fa*j+(ea*da+ga*U)-X*ia;h[x>>3]=ea*U-fa*ia-X*j-ga*da;Ya=Va-3|0;if(!((Ya|0)>-1)){Ta=128;break}da=+h[L>>3]+ +h[Xa+(Va-2<<3)>>3];ga=+h[t>>3]+ +h[Xa+(Va-1<<3)>>3];h[v>>3]=+h[v>>3]+ +h[Xa+(Ya<<3)>>3];h[L>>3]=da;h[t>>3]=ga;cb=0}else{h[v>>3]=+h[N>>3];h[L>>3]=+h[M>>3];h[t>>3]=+h[u>>3];h[e>>3]=+h[s>>3];h[la>>3]=+h[ka>>3];h[na>>3]=+h[ma>>3];h[x>>3]=+h[oa>>3];cb=1}kq(c[Qa>>2]|0);kq(c[ya>>2]|0);kq(c[ua>>2]|0);Za=Ra;_a=cb;$a=Sa;ab=c[P>>2]|0}kq(ab);kq(c[S>>2]|0);if((_a|0)==1){ja=1;Ta=138;break}else{Ra=Za;f=f+1|0;Sa=$a}}if((Ta|0)==9){Be();return 0}else if((Ta|0)==16){Be();return 0}else if((Ta|0)==20){Yb(2616,2528,225,7520);return 0}else if((Ta|0)==24){Yb(3944,3816,394,7416);return 0}else if((Ta|0)==27){Yb(3944,3816,394,7416);return 0}else if((Ta|0)==36){Yb(3944,3816,394,7416);return 0}else if((Ta|0)==39){Yb(3944,3816,394,7416);return 0}else if((Ta|0)==42){Yb(3944,3816,394,7416);return 0}else if((Ta|0)==45){Yb(3944,3816,394,7416);return 0}else if((Ta|0)==48){Yb(3944,3816,394,7416);return 0}else if((Ta|0)==51){Yb(3944,3816,394,7416);return 0}else if((Ta|0)==54){Yb(3944,3816,394,7416);return 0}else if((Ta|0)==57){Yb(3944,3816,394,7416);return 0}else if((Ta|0)==62){Yb(3352,3224,95,7640);return 0}else if((Ta|0)==65){Be();return 0}else if((Ta|0)==72){Be();return 0}else if((Ta|0)==78){Yb(3160,2968,347,7448);return 0}else if((Ta|0)==86){c[p>>2]=0}else if((Ta|0)==96){Yb(4408,5432,178,7376);return 0}else if((Ta|0)==99){Yb(3624,5432,180,7376);return 0}else if((Ta|0)==104){Yb(3944,3816,394,7416);return 0}else if((Ta|0)==107){Yb(3944,3816,394,7416);return 0}else if((Ta|0)==110){Yb(3944,3816,394,7416);return 0}else if((Ta|0)==128){Yb(7168,6408,141,7528);return 0}else if((Ta|0)==137){ja=(Sa|0)==7?4:2;i=k;return ja|0}else if((Ta|0)==138){i=k;return ja|0}Be();return 0}function xf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+8|0;f=e|0;if(!((d|0)==1&(b|0)>-1&(d|0)>-1)){Yb(704,1616,238,7544)}d=a+4|0;if((c[d>>2]|0)==(b|0)){c[d>>2]=b;i=e;return}g=a|0;kq(c[g>>2]|0);if((b|0)==0){c[g>>2]=0;c[d>>2]=b;i=e;return}if(b>>>0>536870911>>>0){Be()}a=b<<3;if((oq(f,16,a)|0)==0){h=c[f>>2]|0}else{c[f>>2]=0;h=0}if(!((h|0)!=0|(a|0)==0)){Be()}c[g>>2]=h;c[d>>2]=b;i=e;return}function yf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0.0,t=0,u=0.0,v=0.0,w=0,x=0.0,y=0,z=0,A=0.0;e=i;i=i+24|0;f=e|0;g=e+8|0;j=e+16|0;k=c[b+4>>2]|0;l=b|0;b=c[l>>2]|0;if((a[b+32|0]|0)==0){Yb(4408,5432,207,7400)}m=c[k+4>>2]|0;if((m|0)!=(c[b+4>>2]|0)){Yb(5544,5432,495,7344)}c[f>>2]=b+12;c[f+4>>2]=k;b=d|0;xf(b,m,c[k+8>>2]|0);Gf(d,f)|0;f=c[l>>2]|0;if((a[f+32|0]|0)==0){Yb(4408,5432,119,7368)}k=c[f+8>>2]|0;if((k|0)!=(c[f+4>>2]|0)){Yb(5296,5176,177,7432)}m=d+4|0;if((k|0)!=(c[m>>2]|0)){Yb(5296,5176,177,7432)}Df(f|0,d);f=c[l>>2]|0;if((a[f+32|0]|0)==0){Yb(4408,5432,134,7352)}k=f+4|0;n=c[k>>2]|0;o=f+8|0;p=c[o>>2]|0;q=(p|0)<(n|0)?p:n;if((q|0)<=0){Yb(5088,4968,175,7496)}p=f|0;f=c[p>>2]|0;r=+U(+(+h[f>>3]));if((q|0)>1){s=r;t=1;while(1){u=+U(+(+h[f+((fa(t,n)|0)+t<<3)>>3]));v=s<u?u:s;w=t+1|0;if((w|0)<(q|0)){s=v;t=w}else{x=v;break}}}else{x=r}r=x*2.220446049250313e-16;x=r<1.390671161567001e-308?1.390671161567001e-308:r;t=d|0;q=0;f=n;while(1){n=(fa(f,q)|0)+q|0;r=+h[(c[p>>2]|0)+(n<<3)>>3];n=+U(+r)>x;w=(c[t>>2]|0)+(q<<3)|0;y=(c[m>>2]|0)>(q|0);if(n){if(!y){z=19;break}A=1.0/r*+h[w>>3]}else{if(y){A=0.0}else{z=22;break}}h[w>>3]=A;w=q+1|0;y=c[k>>2]|0;n=c[o>>2]|0;if((w|0)<(((n|0)<(y|0)?n:y)|0)){q=w;f=y}else{z=24;break}}if((z|0)==19){Yb(4712,6408,118,7528)}else if((z|0)==22){Yb(4712,6408,118,7528)}else if((z|0)==24){z=c[l>>2]|0;if((a[z+32|0]|0)==0){Yb(4408,5432,112,7360)}c[g>>2]=z;f=c[z+4>>2]|0;if((f|0)!=(c[z+8>>2]|0)){Yb(5296,5176,177,7432)}if((f|0)!=(c[m>>2]|0)){Yb(5296,5176,177,7432)}Af(g|0,d);g=c[l>>2]|0;if((a[g+32|0]|0)==0){Yb(4408,5432,127,7384)}else{c[j>>2]=g+12;c[j+4>>2]=d;xf(b,c[m>>2]|0,1);zf(j,d);i=e;return}}}function zf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0.0;d=a|0;e=c[(c[d>>2]|0)+4>>2]|0;f=b|0;g=c[a+4>>2]|0;a=g|0;do{if((c[f>>2]|0)!=(c[a>>2]|0)){i=g+4|0;xf(b|0,c[i>>2]|0,1);j=c[b+4>>2]|0;if((j|0)!=(c[i>>2]|0)){Yb(4072,3072,498,7464)}if((j|0)<=0){break}i=c[a>>2]|0;k=c[f>>2]|0;l=0;do{h[k+(l<<3)>>3]=+h[i+(l<<3)>>3];l=l+1|0;}while((l|0)<(j|0))}}while(0);if((e|0)<=0){return}a=b+4|0;b=e;while(1){e=b-1|0;g=c[(c[c[d>>2]>>2]|0)+(e<<2)>>2]|0;if((g|0)!=(e|0)){j=c[f>>2]|0;l=j+(e<<3)|0;i=c[a>>2]|0;if((i|0)<=(e|0)){m=12;break}k=j+(g<<3)|0;if(!((g|0)>-1&(i|0)>(g|0))){m=14;break}n=+h[l>>3];h[l>>3]=+h[k>>3];h[k>>3]=n}if((e|0)>0){b=e}else{m=16;break}}if((m|0)==12){Yb(4712,6408,118,7528)}else if((m|0)==14){Yb(4712,6408,118,7528)}else if((m|0)==16){return}}function Af(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+8|0;e=d|0;f=c[a>>2]|0;a=c[b+4>>2]|0;if(a>>>0>536870911>>>0){Be()}g=b|0;b=c[g>>2]|0;do{if((b|0)==0){h=a<<3;if((oq(e,16,h)|0)==0){j=c[e>>2]|0}else{c[e>>2]=0;j=0}if((j|0)!=0|(h|0)==0){k=j;l=c[g>>2]|0;break}else{Be()}}else{k=b;l=b}}while(0);b=c[f+4>>2]|0;Bf(b,c[f>>2]|0,b,k);kq((l|0)==0?k:0);i=d;return}function Bf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0;if(!((c|0)>-1)){Yb(4608,4488,64,7512)}e=(a|0)>-1;if(!((b|0)==0|e)){Yb(5976,5632,148,7504)}if((a|0)>0){f=a}else{return}a:while(1){g=(f|0)>8?8:f;i=a-f|0;if((i|0)>0){j=f-g|0;Cf(g,i,b+((fa(j,c)|0)+f<<3)|0,c,d+(f<<3)|0,0,d+(j<<3)|0,1,-1.0)}if((g|0)>0){j=0;do{i=f-j|0;k=i-1|0;if((j|0)>0){l=fa(k,c)|0;if(!((b+(l<<3)|0)==0|e)){m=11;break a}if(!((i|0)>0&(k|0)<(a|0))){m=13;break a}n=l+i|0;if(!((i|j|0)>-1)){m=16;break a}if((a-j|0)<(i|0)){m=16;break a}do{if((j|0)==0){o=0.0}else{p=+h[b+(n<<3)>>3]*+h[d+(i<<3)>>3];if((j|0)>1){q=p;r=1}else{o=p;break}while(1){p=q+ +h[b+(r+n<<3)>>3]*+h[d+(r+i<<3)>>3];l=r+1|0;if((l|0)<(j|0)){q=p;r=l}else{o=p;break}}}}while(0);i=d+(k<<3)|0;h[i>>3]=+h[i>>3]-o}j=j+1|0;}while((j|0)<(g|0))}g=f-8|0;if((g|0)>0){f=g}else{m=23;break}}if((m|0)==11){Yb(5976,5632,148,7504)}else if((m|0)==13){Yb(4712,6408,118,7528)}else if((m|0)==16){Yb(7168,6408,141,7528)}else if((m|0)==23){return}}function Cf(a,b,c,d,e,f,g,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;i=i|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0;f=((a|0)/4|0)<<2;if((f|0)>0){k=(b|0)>0;l=0;do{m=fa(l,d)|0;n=l|1;o=fa(n,d)|0;p=l|2;q=fa(p,d)|0;r=l|3;s=fa(r,d)|0;if(k){t=0.0;u=0.0;v=0.0;w=0.0;x=0;while(1){y=+h[e+(x<<3)>>3];z=w+y*+h[c+(x+m<<3)>>3];A=t+y*+h[c+(x+o<<3)>>3];B=u+y*+h[c+(x+q<<3)>>3];C=v+y*+h[c+(x+s<<3)>>3];D=x+1|0;if((D|0)<(b|0)){t=A;u=B;v=C;w=z;x=D}else{E=A;F=B;G=C;H=z;break}}}else{E=0.0;F=0.0;G=0.0;H=0.0}x=g+((fa(l,i)|0)<<3)|0;h[x>>3]=H*j+ +h[x>>3];x=g+((fa(n,i)|0)<<3)|0;h[x>>3]=E*j+ +h[x>>3];x=g+((fa(p,i)|0)<<3)|0;h[x>>3]=F*j+ +h[x>>3];x=g+((fa(r,i)|0)<<3)|0;h[x>>3]=G*j+ +h[x>>3];l=l+4|0;}while((l|0)<(f|0))}if((f|0)>=(a|0)){return}l=(b|0)>0;k=f;do{f=fa(k,d)|0;if(l){G=0.0;x=0;while(1){F=G+ +h[c+(x+f<<3)>>3]*+h[e+(x<<3)>>3];s=x+1|0;if((s|0)<(b|0)){G=F;x=s}else{I=F;break}}}else{I=0.0}x=g+((fa(k,i)|0)<<3)|0;h[x>>3]=I*j+ +h[x>>3];k=k+1|0;}while((k|0)<(a|0));return}function Df(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+8|0;e=d|0;f=c[b+4>>2]|0;if(f>>>0>536870911>>>0){Be()}g=b|0;b=c[g>>2]|0;do{if((b|0)==0){h=f<<3;if((oq(e,16,h)|0)==0){j=c[e>>2]|0}else{c[e>>2]=0;j=0}if((j|0)!=0|(h|0)==0){k=j;l=c[g>>2]|0;break}else{Be()}}else{k=b;l=b}}while(0);Ef(c[a+8>>2]|0,c[a>>2]|0,c[a+4>>2]|0,k);kq((l|0)==0?k:0);i=d;return}function Ef(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0.0,s=0;if(!((c|0)>-1)){Yb(4608,4488,64,7512)}e=(a|0)>-1;if(!((b|0)==0|e)){Yb(5976,5632,148,7504)}if((a|0)>0){f=0}else{return}a:while(1){g=a-f|0;i=(g|0)>8?8:g;g=i+f|0;if((i|0)>0){j=0;do{k=j+f|0;l=i-j-1|0;m=k+1|0;do{if((l|0)>0){n=d+(m<<3)|0;o=fa(k,c)|0;if(!((b+(o<<3)|0)==0|e)){p=9;break a}if(!((k|0)>-1&(k|0)<(a|0))){p=11;break a}q=o+m|0;if(!((l|m|0)>-1)){p=14;break a}if((a-l|0)<(m|0)){p=14;break a}r=+h[d+(k<<3)>>3];h[n>>3]=+h[n>>3]-r*+h[b+(q<<3)>>3];if((l|0)>1){s=1}else{break}do{n=d+(s+m<<3)|0;h[n>>3]=+h[n>>3]-r*+h[b+(s+q<<3)>>3];s=s+1|0;}while((s|0)<(l|0))}}while(0);j=j+1|0;}while((j|0)<(i|0))}j=a-g|0;if((j|0)>0){Ff(j,i,b+(g+(fa(f,c)|0)<<3)|0,c,d+(f<<3)|0,1,d+(g<<3)|0,0,-1.0)}j=f+8|0;if((j|0)<(a|0)){f=j}else{p=21;break}}if((p|0)==9){Yb(5976,5632,148,7504)}else if((p|0)==11){Yb(4712,6408,118,7528)}else if((p|0)==14){Yb(7168,6408,141,7528)}else if((p|0)==21){return}}function Ff(a,b,c,d,e,f,g,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;i=i|0;j=+j;var k=0,l=0,m=0.0,n=0,o=0.0,p=0,q=0.0,r=0,s=0.0,t=0,u=0,v=0,w=0.0,x=0.0;i=((b|0)/4|0)<<2;if((i|0)>0){k=(a|0)>0;l=0;do{m=+h[e+((fa(l,f)|0)<<3)>>3]*j;n=l|1;o=+h[e+((fa(n,f)|0)<<3)>>3]*j;p=l|2;q=+h[e+((fa(p,f)|0)<<3)>>3]*j;r=l|3;s=+h[e+((fa(r,f)|0)<<3)>>3]*j;t=fa(l,d)|0;u=fa(n,d)|0;n=fa(p,d)|0;p=fa(r,d)|0;if(k){r=0;do{v=g+(r<<3)|0;w=m*+h[c+(r+t<<3)>>3]+ +h[v>>3];h[v>>3]=w;x=w+o*+h[c+(r+u<<3)>>3];h[v>>3]=x;w=q*+h[c+(r+n<<3)>>3]+x;h[v>>3]=w;h[v>>3]=s*+h[c+(r+p<<3)>>3]+w;r=r+1|0;}while((r|0)<(a|0))}l=l+4|0;}while((l|0)<(i|0))}if((i|0)>=(b|0)){return}l=(a|0)>0;k=i;do{s=+h[e+((fa(k,f)|0)<<3)>>3]*j;i=fa(k,d)|0;if(l){r=0;do{p=g+(r<<3)|0;h[p>>3]=+h[p>>3]+s*+h[c+(r+i<<3)>>3];r=r+1|0;}while((r|0)<(a|0))}k=k+1|0;}while((k|0)<(b|0));return}function Gf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0.0;d=a;e=b;f=c[(c[e>>2]|0)+4>>2]|0;Hf(a,c[b+4>>2]|0)|0;if((f|0)<=0){return d|0}b=a;g=a+4|0;a=0;while(1){i=c[(c[c[e>>2]>>2]|0)+(a<<2)>>2]|0;if((i|0)!=(a|0)){j=c[b>>2]|0;k=j+(a<<3)|0;l=c[g>>2]|0;if((l|0)<=(a|0)){m=5;break}n=j+(i<<3)|0;if(!((i|0)>-1&(l|0)>(i|0))){m=7;break}o=+h[k>>3];h[k>>3]=+h[n>>3];h[n>>3]=o}n=a+1|0;if((n|0)<(f|0)){a=n}else{m=10;break}}if((m|0)==5){Yb(4712,6408,118,7528);return 0}else if((m|0)==7){Yb(4712,6408,118,7528);return 0}else if((m|0)==10){return d|0}return 0}function Hf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=b+4|0;e=c[d>>2]|0;f=b+8|0;g=c[f>>2]|0;do{if(!((e|0)==0|(g|0)==0)){if((2147483647/(g|0)|0|0)>=(e|0)){break}Be();return 0}}while(0);if(!((e|0)==1|(g|0)==1)){Yb(2456,1616,324,7552);return 0}xf(a,fa(g,e)|0,1);e=c[a+4>>2]|0;if((e|0)!=(c[d>>2]|0)){Yb(4072,3072,498,7464);return 0}if((c[f>>2]|0)!=1){Yb(4072,3072,498,7464);return 0}f=a;if((e|0)<=0){return f|0}d=c[b>>2]|0;b=c[a>>2]|0;a=0;do{h[b+(a<<3)>>3]=+h[d+(a<<3)>>3];a=a+1|0;}while((a|0)<(e|0));return f|0}function If(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+16|0;f=e|0;g=e+8|0;h=d+4|0;j=c[h>>2]|0;k=c[d+8>>2]|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;Mf(b|0,j,k);k=c[h>>2]|0;if(k>>>0>1073741823>>>0){Be()}j=k<<2;if((oq(g,16,j)|0)==0){l=c[g>>2]|0}else{c[g>>2]=0;l=0}if(!((l|0)!=0|(j|0)==0)){Be()}c[b+12>>2]=l;c[b+16>>2]=k;if(!((k|0)>-1)){Yb(2616,2528,225,7520)}k=c[h>>2]|0;if(k>>>0>536870911>>>0){Be()}h=k<<3;if((oq(f,16,h)|0)==0){m=c[f>>2]|0}else{c[f>>2]=0;m=0}if(!((m|0)!=0|(h|0)==0)){Be()}c[b+20>>2]=m;c[b+24>>2]=k;if((k|0)>-1){a[b+32|0]=0;Jf(b,d)|0;i=e;return}else{Yb(2616,2528,225,7520)}}function Jf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+8|0;f=e|0;g=d+4|0;j=c[g>>2]|0;k=d+8|0;if((j|0)!=(c[k>>2]|0)){Yb(3584,5432,439,7536);return 0}l=b|0;m=b|0;n=(j|0)==0;do{if(!n){if((2147483647/(j|0)|0|0)>=(j|0)){break}Be();return 0}}while(0);Mf(m,j,j);m=c[b+4>>2]|0;if((m|0)!=(c[g>>2]|0)){Yb(4072,3072,498,7464);return 0}g=c[b+8>>2]|0;if((g|0)!=(c[k>>2]|0)){Yb(4072,3072,498,7464);return 0}k=fa(g,m)|0;if((k|0)>0){m=c[d>>2]|0;d=c[b>>2]|0;g=0;do{h[d+(g<<3)>>3]=+h[m+(g<<3)>>3];g=g+1|0;}while((g|0)<(k|0))}k=b+12|0;if(!((j|0)>-1)){Yb(2632,1616,265,7544);return 0}g=b+16|0;do{if((c[g>>2]|0)!=(j|0)){m=k|0;kq(c[m>>2]|0);if(n){c[m>>2]=0;break}if(j>>>0>1073741823>>>0){Be();return 0}d=j<<2;if((oq(f,16,d)|0)==0){o=c[f>>2]|0}else{c[f>>2]=0;o=0}if((o|0)!=0|(d|0)==0){c[m>>2]=o;break}else{Be();return 0}}}while(0);c[g>>2]=j;g=b+32|0;a[g]=0;o=b+20|0;Kf(o|0,j);Lf(l,k,o,b+28|0)|0;a[g]=1;i=e;return b|0}function Kf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+8|0;e=d|0;if(!((b|0)>-1)){Yb(2632,1616,265,7544)}f=a+4|0;if((c[f>>2]|0)==(b|0)){c[f>>2]=b;i=d;return}g=a|0;kq(c[g>>2]|0);if((b|0)==0){c[g>>2]=0;c[f>>2]=b;i=d;return}if(b>>>0>536870911>>>0){Be()}a=b<<3;if((oq(e,16,a)|0)==0){h=c[e>>2]|0}else{c[e>>2]=0;h=0}if(!((h|0)!=0|(a|0)==0)){Be()}c[g>>2]=h;c[f>>2]=b;i=d;return}function Lf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0.0,A=0,B=0.0,C=0,D=0,E=0.0,F=0,G=0.0,H=0.0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,V=0.0,W=0.0,X=0,Y=0,Z=0,_=0;f=i;i=i+8|0;g=f|0;j=a+4|0;k=c[j>>2]|0;l=a+8|0;if((k|0)!=(c[l>>2]|0)){Yb(3496,5432,255,7480);return 0}if((k|0)<2){m=b+4|0;if((c[m>>2]|0)>0){n=c[b>>2]|0;o=0;do{c[n+(o<<2)>>2]=o;o=o+1|0;}while((o|0)<(c[m>>2]|0))}if((e|0)==0){i=f;return 1}c[e>>2]=+h[c[a>>2]>>3]>0.0?1:-1;i=f;return 1}m=a|0;a=b|0;b=d|0;o=d+4|0;d=(e|0)==0;n=0;p=0.0;q=k;r=k;a:while(1){s=k-n|0;t=((r|0)<(q|0)?r:q)-s|0;u=(fa(t,q)|0)+t|0;v=c[m>>2]|0;w=v+(u<<3)|0;if(!((w|0)==0|(s|0)>-1)){x=11;break}if(!((t|s|0)>-1)){x=13;break}y=+U(+(+h[w>>3]));if((s|0)>1){w=q+1|0;t=1;z=y;A=0;while(1){B=+U(+(+h[v+((fa(t,w)|0)+u<<3)>>3]));C=B>z;D=C?t:A;E=C?B:z;C=t+1|0;if((C|0)<(s|0)){t=C;z=E;A=D}else{F=D;G=E;break}}}else{F=0;G=y}A=F+n|0;t=(n|0)==0;if(t){H=+U(+(G*2.220446049250313e-16))}else{H=p}if(G<H){x=20;break}c[(c[a>>2]|0)+(n<<2)>>2]=A;do{if((F|0)==0){I=c[j>>2]|0;J=n+1|0}else{u=k-A|0;w=u-1|0;D=c[l>>2]|0;C=(D|0)>-1;if(!((v+(n<<3)|0)==0|C)){x=28;break a}K=c[j>>2]|0;if((K|0)<=(n|0)){x=30;break a}if((D-n|0)<0){x=32;break a}if(!((v+(A<<3)|0)==0|C)){x=34;break a}if(!((A|0)>-1&(K|0)>(A|0))){x=36;break a}if((n|0)>0){C=0;do{L=fa(K,C)|0;M=v+(L+n<<3)|0;z=+h[M>>3];N=v+(L+A<<3)|0;h[M>>3]=+h[N>>3];h[N>>3]=z;C=C+1|0;}while((C|0)<(n|0))}C=fa(K,n)|0;N=(K|0)>-1;if(!((v+(C<<3)|0)==0|N)){x=40;break a}if((D|0)<=(n|0)){x=42;break a}M=K-w|0;L=C+M|0;O=v+(L<<3)|0;P=(u|0)>0;if(!((O|0)==0|P)){x=44;break a}if(!((M|w|0)>-1)){x=46;break a}Q=fa(K,A)|0;if(!((v+(Q<<3)|0)==0|N)){x=48;break a}if((D|0)<=(A|0)){x=50;break a}N=Q+M|0;M=v+(N<<3)|0;if(!((M|0)==0|P)){x=52;break a}do{if((w|0)>0){z=+h[O>>3];h[O>>3]=+h[M>>3];h[M>>3]=z;if((w|0)>1){R=1}else{break}do{P=v+(R+L<<3)|0;z=+h[P>>3];S=v+(R+N<<3)|0;h[P>>3]=+h[S>>3];h[S>>3]=z;R=R+1|0;}while((R|0)<(w|0))}}while(0);w=v+(C+n<<3)|0;N=v+(Q+A<<3)|0;z=+h[w>>3];h[w>>3]=+h[N>>3];h[N>>3]=z;N=n+1|0;if((N|0)<(A|0)){T=N}else{I=K;J=N;break}while(1){w=v+(C+T<<3)|0;z=+h[w>>3];L=v+((fa(K,T)|0)+A<<3)|0;h[w>>3]=+h[L>>3];h[L>>3]=z;L=T+1|0;if((L|0)<(A|0)){T=L}else{I=K;J=N;break}}}}while(0);N=s-1|0;K=fa(I,n)|0;C=K+J|0;Q=v+(C<<3)|0;L=(Q|0)==0;w=(s|0)>0;if(!(L|w)){x=59;break}if(!((N|J|0)>-1)){x=63;break}if((I-N|0)<(J|0)){x=63;break}M=c[l>>2]|0;if((M-1|0)<(n|0)){x=63;break}O=v+(n<<3)|0;if((I-1|0)<(n|0)){x=66;break}if((M-n|0)<0){x=66;break}D=v+(J<<3)|0;if((D|0)!=0){if(!((N|n|0)>-1)){x=69;break}}do{if((n|0)>0){u=c[b>>2]|0;if(((c[o>>2]|0)-n|0)<0){x=72;break a}if((((M|0)<(I|0)?M:I)-n|0)<0){x=74;break a}S=I+1|0;P=0;do{y=+h[v+((fa(S,P)|0)<<3)>>3];h[u+(P<<3)>>3]=y*+h[v+((fa(I,P)|0)+n<<3)>>3];P=P+1|0;}while((P|0)<(n|0));do{if(t){V=0.0}else{y=+h[O>>3]*+h[u>>3];if((n|0)>1){W=y;X=1}else{V=y;break}while(1){y=+h[v+((fa(X,I)|0)+n<<3)>>3];z=W+y*+h[u+(X<<3)>>3];P=X+1|0;if((P|0)<(n|0)){W=z;X=P}else{V=z;break}}}}while(0);P=v+(K+n<<3)|0;h[P>>3]=+h[P>>3]-V;if((N|0)<=0){break}if(N>>>0>536870911>>>0){x=82;break a}if(L){P=N<<3;if((oq(g,16,P)|0)==0){Y=c[g>>2]|0}else{c[g>>2]=0;Y=0}if(!((Y|0)!=0|(P|0)==0)){x=88;break a}Z=Y}else{Z=Q}Ff(N,n,D,I,u,1,Z,0,-1.0);kq(L?Z:0);x=91}else{x=91}}while(0);do{if((x|0)==91){x=0;if((N|0)<=0){break}L=(fa(c[j>>2]|0,n)|0)+n|0;z=+h[(c[m>>2]|0)+(L<<3)>>3];if(!(+U(+z)>H)){break}y=1.0/z;if(!w){x=94;break a}h[Q>>3]=y*+h[Q>>3];if((N|0)>1){_=1}else{break}do{L=v+(_+C<<3)|0;h[L>>3]=y*+h[L>>3];_=_+1|0;}while((_|0)<(N|0))}}while(0);do{if(!d){N=(fa(c[j>>2]|0,A)|0)+A|0;C=+h[(c[m>>2]|0)+(N<<3)>>3]>0.0|0;if(t){c[e>>2]=C;break}if((c[e>>2]|0)==(C|0)){break}c[e>>2]=0}}while(0);if((J|0)>=(k|0)){x=104;break}n=J;p=H;q=c[j>>2]|0;r=c[l>>2]|0}if((x|0)==11){Yb(5976,5632,148,7504);return 0}else if((x|0)==13){Yb(7168,6408,141,7528);return 0}else if((x|0)==20){if((n|0)<(k|0)){l=c[a>>2]|0;a=n;do{c[l+(a<<2)>>2]=a;a=a+1|0;}while((a|0)<(k|0))}if(d){i=f;return 1}c[e>>2]=0;i=f;return 1}else if((x|0)==28){Yb(5976,5632,148,7504);return 0}else if((x|0)==30){Yb(4712,6408,118,7528);return 0}else if((x|0)==32){Yb(7168,6408,141,7528);return 0}else if((x|0)==34){Yb(5976,5632,148,7504);return 0}else if((x|0)==36){Yb(4712,6408,118,7528);return 0}else if((x|0)==40){Yb(5976,5632,148,7504);return 0}else if((x|0)==42){Yb(4712,6408,118,7528);return 0}else if((x|0)==44){Yb(5976,5632,148,7504);return 0}else if((x|0)==46){Yb(7168,6408,141,7528);return 0}else if((x|0)==48){Yb(5976,5632,148,7504);return 0}else if((x|0)==50){Yb(4712,6408,118,7528);return 0}else if((x|0)==52){Yb(5976,5632,148,7504);return 0}else if((x|0)==59){Yb(5976,5632,148,7504);return 0}else if((x|0)==63){Yb(7168,6408,141,7528);return 0}else if((x|0)==66){Yb(7168,6408,141,7528);return 0}else if((x|0)==69){Yb(5976,5632,148,7504);return 0}else if((x|0)==72){Yb(7168,6408,141,7528);return 0}else if((x|0)==74){Yb(7168,6408,141,7528);return 0}else if((x|0)==82){Be();return 0}else if((x|0)==88){Be();return 0}else if((x|0)==94){Yb(4240,4128,63,7608);return 0}else if((x|0)==104){i=f;return 1}return 0}function Mf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+8|0;f=e|0;if(!((d|b|0)>-1)){Yb(704,1616,238,7544)}do{if(!((b|0)==0|(d|0)==0)){if((2147483647/(d|0)|0|0)>=(b|0)){break}Be()}}while(0);g=fa(d,b)|0;h=a+4|0;j=a+8|0;if((fa(c[j>>2]|0,c[h>>2]|0)|0)==(g|0)){c[h>>2]=b;c[j>>2]=d;i=e;return}k=a|0;kq(c[k>>2]|0);if((g|0)==0){c[k>>2]=0;c[h>>2]=b;c[j>>2]=d;i=e;return}if(g>>>0>536870911>>>0){Be()}a=g<<3;if((oq(f,16,a)|0)==0){l=c[f>>2]|0}else{c[f>>2]=0;l=0}if(!((l|0)!=0|(a|0)==0)){Be()}c[k>>2]=l;c[h>>2]=b;c[j>>2]=d;i=e;return}function Nf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0.0,l=0,m=0,n=0,o=0;e=i;i=i+8|0;f=e|0;g=c[a>>2]|0;j=c[a+8>>2]|0;k=+h[d>>3]*-1.0;d=c[j+4>>2]|0;if(d>>>0>536870911>>>0){Be()}a=j|0;j=c[a>>2]|0;do{if((j|0)==0){l=d<<3;if((oq(f,16,l)|0)==0){m=c[f>>2]|0}else{c[f>>2]=0;m=0}if((m|0)!=0|(l|0)==0){n=m;o=c[a>>2]|0;break}else{Be()}}else{n=j;o=j}}while(0);j=c[g+4>>2]|0;Cf(c[g+8>>2]|0,j,c[g>>2]|0,j,n,0,c[b>>2]|0,1,k);kq((o|0)==0?n:0);i=e;return}function Of(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,i=0,j=0.0;d=a;e=a+4|0;f=c[e>>2]|0;g=a+8|0;i=c[g>>2]|0;j=+h[b>>3];if(!((i|f|0)>-1)){Yb(4240,4128,63,7608);return 0}b=a;do{if(!((f|0)==0|(i|0)==0)){if((2147483647/(i|0)|0|0)>=(f|0)){break}Be();return 0}}while(0);Mf(b,f,i);if((c[e>>2]|0)!=(f|0)){Yb(4072,3072,498,7464);return 0}if((c[g>>2]|0)!=(i|0)){Yb(4072,3072,498,7464);return 0}g=fa(i,f)|0;if((g|0)<=0){return d|0}f=c[a>>2]|0;a=0;do{h[f+(a<<3)>>3]=j;a=a+1|0;}while((a|0)<(g|0));return d|0}function Pf(a,b,d,e,f,g,h,j,k,l,m,n){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=+l;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;n=i;i=i+24|0;o=n|0;p=n+8|0;q=n+16|0;r=c[m+20>>2]|0;s=c[m+12>>2]|0;t=(s|0)<(a|0)?s:a;s=fa(t,r)|0;u=fa(r,b)|0;v=r<<1;if(s>>>0>536870911>>>0){Be()}w=m|0;x=c[w>>2]|0;do{if((x|0)==0){y=s<<3;if((oq(q,16,y)|0)==0){z=c[q>>2]|0}else{c[q>>2]=0;z=0}if((z|0)!=0|(y|0)==0){A=z;B=c[w>>2]|0;break}else{Be()}}else{A=x;B=x}}while(0);x=(B|0)==0?A:0;if(u>>>0>536870911>>>0){Be()}B=m+4|0;w=c[B>>2]|0;do{if((w|0)==0){z=u<<3;if((oq(o,16,z)|0)==0){C=c[o>>2]|0}else{c[o>>2]=0;C=0}if((C|0)!=0|(z|0)==0){D=C;E=c[B>>2]|0;break}Be()}else{D=w;E=w}}while(0);w=(E|0)==0?D:0;if(v>>>0>536870911>>>0){Be()}v=m+8|0;m=c[v>>2]|0;do{if((m|0)==0){E=r<<4;if((oq(p,16,E)|0)==0){F=c[p>>2]|0}else{c[p>>2]=0;F=0}if((F|0)!=0|(E|0)==0){G=F;H=c[v>>2]|0;break}Be()}else{G=m;H=m}}while(0);m=(H|0)==0?G:0;if((d|0)<=0){I=m;kq(I);J=w;kq(J);K=x;kq(K);i=n;return}H=(a|0)>0;v=0;while(1){F=v+r|0;p=((F|0)>(d|0)?d:F)-v|0;Qf(0,D,g+(v<<3)|0,h,p,b,0,0);if(H){E=fa(v,f)|0;B=0;while(1){C=B+t|0;o=((C|0)>(a|0)?a:C)-B|0;Rf(0,A,e+(B+E<<3)|0,f,p,o,0,0);Sf(0,j+(B<<3)|0,k,A,D,o,p,b,l,-1,-1,0,0,G);if((C|0)<(a|0)){B=C}else{break}}}if((F|0)<(d|0)){v=F}else{break}}I=m;kq(I);J=w;kq(J);K=x;kq(K);i=n;return}function Qf(a,b,c,d,e,f,g,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;if((i|g|0)!=0){Yb(1520,1384,1218,7416)}g=((f|0)/2|0)<<1;if((g|0)>0){i=(e|0)>0;a=e<<1;j=0;k=0;while(1){l=fa(j,d)|0;m=fa(j|1,d)|0;n=j+2|0;if(i){o=0;p=k;while(1){h[b+(p<<3)>>3]=+h[c+(o+l<<3)>>3];h[b+(p+1<<3)>>3]=+h[c+(o+m<<3)>>3];q=o+1|0;if((q|0)<(e|0)){o=q;p=p+2|0}else{break}}r=a+k|0}else{r=k}if((n|0)<(g|0)){j=n;k=r}else{s=r;break}}}else{s=0}if((g|0)>=(f|0)){return}r=(e|0)>0;k=g;g=s;while(1){s=fa(k,d)|0;if(r){j=g;a=0;while(1){h[b+(j<<3)>>3]=+h[c+(a+s<<3)>>3];i=a+1|0;if((i|0)<(e|0)){j=j+1|0;a=i}else{break}}t=g+e|0}else{t=g}a=k+1|0;if((a|0)<(f|0)){k=a;g=t}else{break}}return}function Rf(a,b,c,d,e,f,g,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0;if((i|g|0)!=0){Yb(1520,1384,1131,7416)}g=((f|0)/2|0)<<1;if((g|0)>0){i=(e|0)>0;a=e<<1;j=0;k=0;while(1){if(i){l=k|1;m=j;n=0;while(1){o=fa(n,d)|0;p=+h[c+(o+l<<3)>>3];h[b+(m<<3)>>3]=+h[c+(o+k<<3)>>3];h[b+(m+1<<3)>>3]=p;o=n+1|0;if((o|0)<(e|0)){m=m+2|0;n=o}else{break}}q=a+j|0}else{q=j}n=k+2|0;if((n|0)<(g|0)){j=q;k=n}else{r=q;break}}}else{r=0}if((f-g|0)>0){if((e|0)>0){q=r;k=0;while(1){h[b+(q<<3)>>3]=+h[c+((fa(k,d)|0)+g<<3)>>3];j=k+1|0;if((j|0)<(e|0)){q=q+1|0;k=j}else{break}}s=r+e|0}else{s=r}t=g|1;u=s}else{t=g;u=r}if((t|0)>=(f|0)){return}r=(e|0)>0;g=u;u=t;while(1){if(r){t=g;s=0;while(1){h[b+(t<<3)>>3]=+h[c+((fa(s,d)|0)+u<<3)>>3];k=s+1|0;if((k|0)<(e|0)){t=t+1|0;s=k}else{break}}v=g+e|0}else{v=g}s=u+1|0;if((s|0)<(f|0)){g=v;u=s}else{break}}return}function Sf(a,b,c,d,e,f,g,i,j,k,l,m,n,o){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;i=i|0;j=+j;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0.0,S=0.0,T=0.0,U=0.0,V=0,W=0,X=0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0.0,da=0.0,ea=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0,pa=0.0,qa=0.0,ra=0.0,sa=0.0,ta=0,ua=0,va=0.0,wa=0.0,xa=0.0,ya=0.0,za=0.0,Aa=0.0,Ba=0,Ca=0,Da=0.0,Ea=0.0,Fa=0.0,Ga=0.0,Ha=0.0,Ia=0.0,Ja=0.0,Ka=0.0;a=(k|0)==-1?g:k;k=(l|0)==-1?g:l;l=((i|0)/2|0)<<1;p=(f|0)/2|0;q=p<<1;r=(f-q|0)>0;s=r&1|q;t=(g|0)/4|0;u=t<<2;if((o|0)==0){v=e+(-(k<<1)<<3)|0}else{v=o}if((l|0)>0){o=g<<1;w=n<<1;x=(o|0)>0;y=(q|0)>0;z=d+((fa(q,a)|0)+m<<3)|0;A=(u|0)>0;B=(u|0)<(g|0);C=(s|0)<(f|0);D=(g|0)>0;E=m<<1;F=((t<<2)-1|0)>>>2;t=F<<3;G=d+(t+(m<<1)+8<<3)|0;H=a<<1;I=v+(t+8<<3)|0;t=d+((F<<2)+m+((fa(a,p)|0)<<1)+4<<3)|0;p=0;do{F=(fa(p,k)|0)+w|0;J=e+(F<<3)|0;if(x){K=0;do{h[v+(K<<3)>>3]=+h[e+(K+F<<3)>>3];K=K+1|0;}while((K|0)<(o|0))}if(y){K=fa(p,c)|0;F=0;L=G;while(1){M=d+((fa(F,a)|0)+E<<3)|0;N=F+K|0;O=b+(N<<3)|0;P=N+c|0;Q=b+(P<<3)|0;if(A){R=0.0;S=0.0;T=0.0;U=0.0;V=0;W=v;X=M;while(1){Y=+h[X>>3];Z=+h[X+8>>3];_=+h[W>>3];$=+h[W+8>>3];aa=+h[X+16>>3];ba=+h[X+24>>3];ca=+h[W+16>>3];da=+h[W+24>>3];ea=+h[X+32>>3];ga=+h[X+40>>3];ha=+h[W+32>>3];ia=+h[W+40>>3];ja=+h[X+48>>3];ka=+h[X+56>>3];la=+h[W+48>>3];ma=R+Y*_+aa*ca+ea*ha+ja*la;na=T+Z*_+ba*ca+ga*ha+ka*la;la=+h[W+56>>3];ha=S+Y*$+aa*da+ea*ia+ja*la;ja=U+Z*$+ba*da+ga*ia+ka*la;oa=V+4|0;if((oa|0)<(u|0)){R=ma;S=ha;T=na;U=ja;V=oa;W=W+64|0;X=X+64|0}else{pa=ma;qa=ha;ra=na;sa=ja;ta=I;ua=L;break}}}else{pa=0.0;qa=0.0;ra=0.0;sa=0.0;ta=v;ua=M}if(B){U=pa;T=qa;S=ra;R=sa;X=u;W=ta;V=ua;while(1){ja=+h[V>>3];na=+h[V+8>>3];ha=+h[W>>3];ma=U+ja*ha;la=S+na*ha;ha=+h[W+8>>3];ka=T+ja*ha;ja=R+na*ha;oa=X+1|0;if((oa|0)<(g|0)){U=ma;T=ka;S=la;R=ja;X=oa;W=W+16|0;V=V+16|0}else{va=ma;wa=ka;xa=la;ya=ja;break}}}else{va=pa;wa=qa;xa=ra;ya=sa}R=+h[Q>>3];V=b+((N|1)<<3)|0;S=+h[V>>3];h[O>>3]=va*j+ +h[O>>3];W=b+(P+1<<3)|0;T=ya*j+ +h[W>>3];h[Q>>3]=wa*j+R;h[V>>3]=xa*j+S;h[W>>3]=T;W=F+2|0;if((W|0)<(q|0)){F=W;L=L+(H<<3)|0}else{break}}}if(r){if(A){T=0.0;S=0.0;L=0;F=v;K=z;while(1){R=+h[K>>3];U=+h[K+8>>3];ja=+h[K+16>>3];la=+h[K+24>>3];ka=T+R*+h[F>>3]+ +h[F+16>>3]*U+ +h[F+32>>3]*ja+ +h[F+48>>3]*la;ma=S+R*+h[F+8>>3]+U*+h[F+24>>3]+ja*+h[F+40>>3]+la*+h[F+56>>3];W=L+4|0;if((W|0)<(u|0)){T=ka;S=ma;L=W;F=F+64|0;K=K+32|0}else{za=ka;Aa=ma;Ba=I;Ca=t;break}}}else{za=0.0;Aa=0.0;Ba=v;Ca=z}if(B){S=za;T=Aa;K=u;F=Ba;L=Ca;while(1){ma=+h[L>>3];ka=S+ma*+h[F>>3];la=T+ma*+h[F+8>>3];W=K+1|0;if((W|0)<(g|0)){S=ka;T=la;K=W;F=F+16|0;L=L+8|0}else{Da=ka;Ea=la;break}}}else{Da=za;Ea=Aa}L=(fa(p,c)|0)+q|0;F=b+(L<<3)|0;K=b+(L+c<<3)|0;T=Ea*j+ +h[K>>3];h[F>>3]=Da*j+ +h[F>>3];h[K>>3]=T}if(C){K=fa(p,c)|0;F=fa(p|1,c)|0;L=s;do{W=(fa(L,a)|0)+m|0;if(D){T=0.0;S=0.0;V=J;X=0;while(1){la=+h[d+(W+X<<3)>>3];ka=T+la*+h[V>>3];ma=S+la*+h[V+8>>3];M=X+1|0;if((M|0)<(g|0)){T=ka;S=ma;V=V+16|0;X=M}else{Fa=ka;Ga=ma;break}}}else{Fa=0.0;Ga=0.0}X=b+(L+K<<3)|0;h[X>>3]=Fa*j+ +h[X>>3];X=b+(L+F<<3)|0;h[X>>3]=Ga*j+ +h[X>>3];L=L+1|0;}while((L|0)<(f|0))}p=p+2|0;}while((p|0)<(l|0))}if((l|0)>=(i|0)){return}p=(g|0)>0;D=(q|0)>0;C=d+((fa(q,a)|0)+m<<3)|0;Ca=(s|0)<(f|0);Ba=m<<1;u=l;do{l=(fa(u,k)|0)+n|0;if(p){B=0;do{h[v+(B<<3)>>3]=+h[e+(B+l<<3)>>3];B=B+1|0;}while((B|0)<(g|0))}if(D){B=fa(u,c)|0;z=0;do{if(p){Ga=0.0;Fa=0.0;t=d+((fa(z,a)|0)+Ba<<3)|0;I=v;A=0;while(1){Da=+h[I>>3];Ea=Ga+ +h[t>>3]*Da;Aa=Fa+ +h[t+8>>3]*Da;H=A+1|0;if((H|0)<(g|0)){Ga=Ea;Fa=Aa;t=t+16|0;I=I+8|0;A=H}else{Ha=Ea;Ia=Aa;break}}}else{Ha=0.0;Ia=0.0}A=z+B|0;I=b+(A<<3)|0;t=b+(A+1<<3)|0;Fa=Ia*j+ +h[t>>3];h[I>>3]=Ha*j+ +h[I>>3];h[t>>3]=Fa;z=z+2|0;}while((z|0)<(q|0))}if(r){if(p){Fa=0.0;z=C;B=v;t=0;while(1){Ga=Fa+ +h[z>>3]*+h[B>>3];I=t+1|0;if((I|0)<(g|0)){Fa=Ga;z=z+8|0;B=B+8|0;t=I}else{Ja=Ga;break}}}else{Ja=0.0}t=b+((fa(u,c)|0)+q<<3)|0;h[t>>3]=Ja*j+ +h[t>>3]}if(Ca){t=fa(u,c)|0;B=s;do{z=(fa(B,a)|0)+m|0;if(p){Fa=0.0;I=0;while(1){Ga=Fa+ +h[d+(z+I<<3)>>3]*+h[e+(I+l<<3)>>3];A=I+1|0;if((A|0)<(g|0)){Fa=Ga;I=A}else{Ka=Ga;break}}}else{Ka=0.0}I=b+(B+t<<3)|0;h[I>>3]=Ka*j+ +h[I>>3];B=B+1|0;}while((B|0)<(f|0))}u=u+1|0;}while((u|0)<(i|0));return}function Tf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0.0;d=a;e=a+4|0;f=c[e>>2]|0;g=+h[b>>3];if(!((f|0)>-1)){Yb(4240,4128,63,7608);return 0}b=a;do{if((f|0)!=0){if((2147483647/(f|0)|0|0)>=3){break}Be();return 0}}while(0);Uf(b,3,f);if((c[e>>2]|0)!=(f|0)){Yb(4072,3072,498,7464);return 0}e=f*3|0;if((e|0)<=0){return d|0}f=c[a>>2]|0;a=0;do{h[f+(a<<3)>>3]=g;a=a+1|0;}while((a|0)<(e|0));return d|0}function Uf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+8|0;f=e|0;if(!((b|0)==3&(d|0)>-1)){Yb(704,1616,238,7544)}do{if((d|0)!=0){if((2147483647/(d|0)|0|0)>=3){break}Be()}}while(0);b=d*3|0;g=a+4|0;if(((c[g>>2]|0)*3|0|0)==(b|0)){c[g>>2]=d;i=e;return}h=a|0;kq(c[h>>2]|0);if((b|0)==0){c[h>>2]=0;c[g>>2]=d;i=e;return}if(b>>>0>536870911>>>0){Be()}b=d*24|0;if((oq(f,16,b)|0)==0){j=c[f>>2]|0}else{c[f>>2]=0;j=0}if(!((j|0)!=0|(b|0)==0)){Be()}c[h>>2]=j;c[g>>2]=d;i=e;return}function Vf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+8|0;e=d|0;f=c[b+8>>2]|0;do{if((f|0)==0){g=0;h=1}else{if((2147483647/(f|0)|0|0)<1){Be()}if((f|0)>-1){g=f;h=0;break}Yb(704,1616,238,7544)}}while(0);f=a+4|0;if((c[f>>2]|0)==(g|0)){c[f>>2]=g;i=d;return}b=a|0;kq(c[b>>2]|0);if(h){c[b>>2]=0;c[f>>2]=g;i=d;return}if(g>>>0>536870911>>>0){Be()}h=g<<3;if((oq(e,16,h)|0)==0){j=c[e>>2]|0}else{c[e>>2]=0;j=0}if(!((j|0)!=0|(h|0)==0)){Be()}c[b>>2]=j;c[f>>2]=g;i=d;return}function Wf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+24|0;f=e|0;g=e+8|0;j=e+16|0;k=a|0;l=a|0;m=b+12|0;n=c[m>>2]|0;if((n*3|0)>>>0>536870911>>>0){Be()}o=n*24|0;if((oq(f,16,o)|0)==0){p=c[f>>2]|0}else{c[f>>2]=0;p=0}if(!((p|0)!=0|(o|0)==0)){Be()}c[a>>2]=p;c[a+4>>2]=n;n=b;b=c[m>>2]|0;do{if((b|0)!=0){if((2147483647/(b|0)|0|0)>=3){break}Be()}}while(0);Uf(l,3,b);h[g>>3]=0.0;Tf(a,g)|0;h[j>>3]=1.0;Yf(n,k,j);j=a+8|0;a=d|0;c[j>>2]=c[a>>2];c[j+4>>2]=c[a+4>>2];c[j+8>>2]=c[a+8>>2];do{if(((c[d+4>>2]|0)*3|0|0)==3){if((c[m>>2]|0)!=(c[d+8>>2]|0)){break}i=e;return}}while(0);Yb(472,272,131,7624)}function Xf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+32|0;e=d|0;f=d+8|0;g=d+16|0;j=d+24|0;k=a|0;l=j|0;m=b+12|0;n=c[m>>2]|0;o=j|0;if((n*3|0)>>>0>536870911>>>0){Be();return 0}p=n*24|0;if((oq(e,16,p)|0)==0){q=c[e>>2]|0}else{c[e>>2]=0;q=0}if(!((q|0)!=0|(p|0)==0)){Be();return 0}c[o>>2]=q;q=j+4|0;c[q>>2]=n;n=b;b=c[m>>2]|0;do{if((b|0)!=0){if((2147483647/(b|0)|0|0)>=3){break}Be();return 0}}while(0);Uf(l,3,b);h[f>>3]=0.0;Tf(j,f)|0;h[g>>3]=1.0;Yf(n,j,g);g=c[q>>2]|0;do{if((g|0)!=0){if((2147483647/(g|0)|0|0)>=3){break}Be();return 0}}while(0);Uf(k,3,g);g=c[a+4>>2]|0;if((g|0)!=(c[q>>2]|0)){Yb(4072,3072,498,7464);return 0}q=g*3|0;g=c[o>>2]|0;if((q|0)<=0){r=g;kq(r);i=d;return a|0}o=c[a>>2]|0;k=0;do{h[o+(k<<3)>>3]=+h[g+(k<<3)>>3];k=k+1|0;}while((k|0)<(q|0));r=g;kq(r);i=d;return a|0}function Yf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+40|0;f=e|0;g=c[b+4>>2]|0;j=a+4|0;k=j|0;l=a+12|0;if((g|0)!=(c[l>>2]|0)){Yb(1848,1712,399,7448)}m=c[a>>2]|0;n=+h[d>>3];Kq(f|0,0,12)|0;d=f+12|0;c[d>>2]=3;c[f+16>>2]=g;a=f+20|0;c[a>>2]=3;o=c[5132]|0;if((o|0)==0){c[5134]=8192;c[5132]=1048576;c[a>>2]=3;p=1048576;q=3;r=6}else{s=(c[5134]|0)>>>5;t=s>>>0<3>>>0?s:3;c[a>>2]=t;if((t|0)==0){u=0;v=0;r=7}else{p=o;q=t;r=6}}if((r|0)==6){t=(p>>>0)/(q<<5>>>0)|0;if((t|0)<3){u=q;v=t;r=7}else{w=3;x=q}}if((r|0)==7){r=v&-2;c[d>>2]=r;w=r;x=u}c[f+24>>2]=fa(w,x)|0;c[f+28>>2]=fa(g,x)|0;c[f+32>>2]=x<<1;Pf(3,c[l>>2]|0,3,m|0,3,c[j>>2]|0,c[k+28>>2]|0,c[b>>2]|0,3,n,f|0,0);kq(c[f>>2]|0);kq(c[f+4>>2]|0);kq(c[f+8>>2]|0);i=e;return}function Zf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0;d=i;i=i+8|0;e=d|0;f=a|0;g=b+16|0;j=c[g>>2]|0;k=a|0;if((j*3|0)>>>0>536870911>>>0){Be()}l=j*24|0;if((oq(e,16,l)|0)==0){m=c[e>>2]|0}else{c[e>>2]=0;m=0}if(!((m|0)!=0|(l|0)==0)){Be()}c[k>>2]=m;m=a+4|0;c[m>>2]=j;j=c[g>>2]|0;do{if((j|0)!=0){if((2147483647/(j|0)|0|0)>=3){break}Be()}}while(0);Uf(f,3,j);j=c[m>>2]|0;if((j|0)!=(c[g>>2]|0)){Yb(4072,3072,498,7464)}if((j|0)<=0){i=d;return}g=b+8|0;m=c[b>>2]|0;b=c[k>>2]|0;k=0;do{f=k*3|0;h[b+(f<<3)>>3]=+h[c[g>>2]>>3]+ +h[m+(f<<3)>>3];a=f+1|0;h[b+(a<<3)>>3]=+h[(c[g>>2]|0)+8>>3]+ +h[m+(a<<3)>>3];a=f+2|0;h[b+(a<<3)>>3]=+h[(c[g>>2]|0)+16>>3]+ +h[m+(a<<3)>>3];k=k+1|0;}while((k|0)<(j|0));i=d;return}function _f(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+40|0;f=e|0;g=b+4|0;j=c[g>>2]|0;k=a|0;l=c[k>>2]|0;if((j|0)!=(c[l+8>>2]|0)){Yb(1848,1712,399,7448)}m=c[b+8>>2]|0;n=a+4|0;a=c[n>>2]|0;o=a+8|0;if((m|0)!=(c[o>>2]|0)){Yb(1848,1712,399,7448)}p=+h[d>>3];d=l+4|0;q=c[d>>2]|0;Kq(f|0,0,12)|0;r=f+12|0;c[r>>2]=j;c[f+16>>2]=m;s=f+20|0;c[s>>2]=q;t=c[5132]|0;if((t|0)==0){c[5134]=8192;c[5132]=1048576;u=1048576;v=256}else{u=t;v=(c[5134]|0)>>>5}t=(v|0)<(q|0)?v:q;c[s>>2]=t;if((t|0)>0){w=(u>>>0)/(t<<5>>>0)|0}else{w=0}if((w|0)<(j|0)){u=w&-2;c[r>>2]=u;x=u}else{x=j}c[f+24>>2]=fa(x,t)|0;c[f+28>>2]=fa(m,t)|0;c[f+32>>2]=t<<1;t=c[(c[n>>2]|0)+8>>2]|0;if((t|0)==-1){y=c[o>>2]|0}else{y=t}t=c[d>>2]|0;$f(c[(c[k>>2]|0)+8>>2]|0,y,t,c[l>>2]|0,t,c[a>>2]|0,c[a+4>>2]|0,c[b>>2]|0,c[g>>2]|0,p,f|0,0);kq(c[f>>2]|0);kq(c[f+4>>2]|0);kq(c[f+8>>2]|0);i=e;return}function $f(a,b,d,e,f,g,h,j,k,l,m,n){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=+l;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;n=i;i=i+24|0;o=n|0;p=n+8|0;q=n+16|0;r=c[m+20>>2]|0;s=c[m+12>>2]|0;t=(s|0)<(a|0)?s:a;s=fa(t,r)|0;u=fa(r,b)|0;v=r<<1;if(s>>>0>536870911>>>0){Be()}w=m|0;x=c[w>>2]|0;do{if((x|0)==0){y=s<<3;if((oq(q,16,y)|0)==0){z=c[q>>2]|0}else{c[q>>2]=0;z=0}if((z|0)!=0|(y|0)==0){A=z;B=c[w>>2]|0;break}else{Be()}}else{A=x;B=x}}while(0);x=(B|0)==0?A:0;if(u>>>0>536870911>>>0){Be()}B=m+4|0;w=c[B>>2]|0;do{if((w|0)==0){z=u<<3;if((oq(o,16,z)|0)==0){C=c[o>>2]|0}else{c[o>>2]=0;C=0}if((C|0)!=0|(z|0)==0){D=C;E=c[B>>2]|0;break}Be()}else{D=w;E=w}}while(0);w=(E|0)==0?D:0;if(v>>>0>536870911>>>0){Be()}v=m+8|0;m=c[v>>2]|0;do{if((m|0)==0){E=r<<4;if((oq(p,16,E)|0)==0){F=c[p>>2]|0}else{c[p>>2]=0;F=0}if((F|0)!=0|(E|0)==0){G=F;H=c[v>>2]|0;break}Be()}else{G=m;H=m}}while(0);m=(H|0)==0?G:0;if((d|0)<=0){I=m;kq(I);J=w;kq(J);K=x;kq(K);i=n;return}H=(a|0)>0;v=0;while(1){F=v+r|0;p=((F|0)>(d|0)?d:F)-v|0;Qf(0,D,g+(v<<3)|0,h,p,b,0,0);if(H){E=0;while(1){B=E+t|0;C=((B|0)>(a|0)?a:B)-E|0;ag(0,A,e+((fa(E,f)|0)+v<<3)|0,f,p,C,0,0);Sf(0,j+(E<<3)|0,k,A,D,C,p,b,l,-1,-1,0,0,G);if((B|0)<(a|0)){E=B}else{break}}}if((F|0)<(d|0)){v=F}else{break}}I=m;kq(I);J=w;kq(J);K=x;kq(K);i=n;return}function ag(a,b,c,d,e,f,g,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;if((i|g|0)!=0){Yb(1520,1384,1131,7416)}g=(f|0)/2|0;i=g<<1;if((i|0)>0){a=(e|0)>0;j=e<<1;k=0;l=0;while(1){if(a){m=fa(k,d)|0;n=0;o=l;while(1){h[b+(o<<3)>>3]=+h[c+(m+n<<3)>>3];h[b+(o+1<<3)>>3]=+h[c+((fa(k|1,d)|0)+n<<3)>>3];p=n+1|0;if((p|0)<(e|0)){n=p;o=o+2|0}else{break}}q=j+l|0}else{q=l}o=k+2|0;if((o|0)<(i|0)){k=o;l=q}else{r=q;break}}}else{r=0}if((f-i|0)>0){if((e|0)>0){Iq(b+(r<<3)|0,c+((fa(g,d)|0)<<1<<3)|0,e<<3)|0;s=r+e|0}else{s=r}t=i|1;u=s}else{t=i;u=r}if((t|0)>=(f|0)){return}r=(e|0)>0;i=e<<3;s=u;u=t;g=0;while(1){if(r){Iq(b+(s<<3)|0,c+((fa(t+g|0,d)|0)<<3)|0,i)|0;v=s+e|0}else{v=s}q=u+1|0;if((q|0)<(f|0)){s=v;u=q;g=g+1|0}else{break}}return}function bg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+8|0;e=d|0;f=a|0;g=b+4|0;j=c[g>>2]|0;k=b+8|0;l=c[k>>2]|0;m=fa(l,j)|0;n=a|0;if(m>>>0>536870911>>>0){Be()}o=m<<3;if((oq(e,16,o)|0)==0){p=c[e>>2]|0}else{c[e>>2]=0;p=0}if(!((p|0)!=0|(o|0)==0)){Be()}c[n>>2]=p;p=a+4|0;c[p>>2]=j;j=a+8|0;c[j>>2]=l;l=c[g>>2]|0;a=c[k>>2]|0;do{if(!((l|0)==0|(a|0)==0)){if((2147483647/(a|0)|0|0)>=(l|0)){break}Be()}}while(0);Mf(f,l,a);a=c[p>>2]|0;do{if((a|0)==(c[g>>2]|0)){p=c[j>>2]|0;if((p|0)!=(c[k>>2]|0)){break}l=fa(p,a)|0;if((l|0)<=0){i=d;return}p=c[b>>2]|0;f=c[n>>2]|0;o=0;do{h[f+(o<<3)>>3]=+h[p+(o<<3)>>3];o=o+1|0;}while((o|0)<(l|0));i=d;return}}while(0);Yb(4072,3072,498,7464)}function cg(a,b){a=a|0;b=b|0;c[a>>2]=11344;c[a+4>>2]=b;Kq(a+8|0,0,28)|0;return}function dg(a){a=a|0;var b=0;c[a>>2]=11344;b=c[a+16>>2]|0;if((b|0)!=0){tq(b)}b=c[a+20>>2]|0;if((b|0)!=0){tq(b)}b=c[a+24>>2]|0;if((b|0)!=0){tq(b)}b=c[a+28>>2]|0;if((b|0)==0){return}tq(b);return}function eg(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;e=a+8|0;f=c[e>>2]|0;g=c[b+4>>2]|0;do{if((f|0)==(g|0)){i=a+12|0;j=b+8|0;if((c[i>>2]|0)!=(c[j>>2]|0)){k=j;l=i;m=5;break}n=f;o=(c[a+32>>2]|0)+1|0;p=c[a+16>>2]|0;q=a+24|0}else{k=b+8|0;l=a+12|0;m=5}}while(0);if((m|0)==5){c[e>>2]=g;c[l>>2]=c[k>>2];k=a+16|0;g=c[k>>2]|0;if((g|0)!=0){tq(g)}g=a+20|0;m=c[g>>2]|0;if((m|0)!=0){tq(m)}m=a+24|0;f=c[m>>2]|0;if((f|0)!=0){tq(f)}f=a+28|0;i=c[f>>2]|0;if((i|0)!=0){tq(i)}i=c[e>>2]|0;j=Pa(i|0,4)|0;r=J?-1:j;j=rq(r)|0;c[k>>2]=j;c[g>>2]=rq(r)|0;r=Pa(c[l>>2]|0,4)|0;l=J?-1:r;c[m>>2]=rq(l)|0;c[f>>2]=rq(l)|0;c[a+32>>2]=0;n=i;o=1;p=j;q=m}m=a+32|0;c[m>>2]=o;o=a+16|0;Kq(p|0,0,n<<2|0)|0;n=a+12|0;Kq(c[q>>2]|0,0,c[n>>2]<<2|0)|0;p=c[n>>2]|0;n=(p|0)>0;if(n){j=b|0;b=c[e>>2]|0;i=0;do{if((b|0)>0){l=c[j>>2]|0;f=c[o>>2]|0;r=c[q>>2]|0;g=0;do{k=d[l+((fa(b,i)|0)+g)|0]|0;s=f+(g<<2)|0;c[s>>2]=(c[s>>2]|0)+k;s=r+(i<<2)|0;c[s>>2]=(c[s>>2]|0)+k;g=g+1|0;}while((g|0)<(b|0))}i=i+1|0;}while((i|0)<(p|0))}if((c[m>>2]|0)==1){Kq(a+40|0,0,16)|0;t=0.0;u=c[o>>2]|0;v=a+20|0;w=c[v>>2]|0;c[o>>2]=w;c[v>>2]=u;x=c[q>>2]|0;y=a+28|0;z=c[y>>2]|0;c[q>>2]=z;c[y>>2]=x;return+t}m=c[a+4>>2]|0;i=(m|0)>0;a:do{if(i){b=c[e>>2]|0;j=a+40|0;g=a+20|0;if((b|0)>0){r=0;f=0;l=99999999;while(1){k=0;s=0;A=0;while(1){B=A+r|0;if((B|0)>0&(B|0)<(b|0)){C=(c[(c[o>>2]|0)+(B<<2)>>2]|0)-(c[(c[g>>2]|0)+(A<<2)>>2]|0)|0;D=s+1|0;E=((C|0)>-1?C:-C|0)+k|0}else{D=s;E=k}C=A+1|0;if((C|0)<(b|0)){k=E;s=D;A=C}else{break}}A=(E|0)/(D|0)|0;if((A|0)<(l|0)){h[j>>3]=+(r|0);F=A}else{F=l}s=(A|0)>(f|0)?A:f;A=((r|0)<1)-r|0;if((A|0)<(m|0)){r=A;f=s;l=F}else{G=s;H=F;break}}}else{l=0;while(1){f=((l|0)<1)-l|0;if((f|0)<(m|0)){l=f}else{G=0;H=99999999;break}}}if(!i){I=0;K=99999999;L=H;M=G;break}l=a+48|0;f=a+28|0;if(n){N=0;O=0;P=99999999}else{r=0;while(1){j=((r|0)<1)-r|0;if((j|0)<(m|0)){r=j}else{I=0;K=99999999;L=H;M=G;break a}}}while(1){r=0;j=0;b=0;while(1){g=b+O|0;if((g|0)>0&(g|0)<(p|0)){s=(c[(c[q>>2]|0)+(g<<2)>>2]|0)-(c[(c[f>>2]|0)+(b<<2)>>2]|0)|0;Q=j+1|0;R=((s|0)>-1?s:-s|0)+r|0}else{Q=j;R=r}s=b+1|0;if((s|0)<(p|0)){r=R;j=Q;b=s}else{break}}b=(R|0)/(Q|0)|0;if((b|0)<(P|0)){h[l>>3]=+(O|0);S=b}else{S=P}j=(b|0)>(N|0)?b:N;b=((O|0)<1)-O|0;if((b|0)<(m|0)){N=j;O=b;P=S}else{I=j;K=S;L=H;M=G;break}}}else{I=0;K=99999999;L=99999999;M=0}}while(0);G=(M-L|0)/(p|0)|0;p=(I-K|0)/(c[e>>2]|0)|0;t=+(((p|0)<(G|0)?p:G)|0);u=c[o>>2]|0;v=a+20|0;w=c[v>>2]|0;c[o>>2]=w;c[v>>2]=u;x=c[q>>2]|0;y=a+28|0;z=c[y>>2]|0;c[q>>2]=z;c[y>>2]=x;return+t}function fg(a,b,c){a=a|0;b=b|0;c=c|0;h[b>>3]=+h[a+40>>3]+ +h[b>>3];h[c>>3]=+h[a+48>>3]+ +h[c>>3];return}function gg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0,v=0.0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,W=0.0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0,ba=0.0,ca=0.0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0.0,la=0.0,ma=0.0;g=i;i=i+72|0;j=g|0;k=g+8|0;l=g+16|0;m=g+32|0;n=g+48|0;o=e-d|0;p=(o|0)<0?b:0;q=p+o|0;o=(q|0)>0;if(o){r=p+e|0;e=0;s=0.0;t=0.0;do{p=(e+d|0)%(b|0)|0;t=t+ +(c[a+(p<<3)>>2]|0);s=s+ +(c[a+(p<<3)+4>>2]|0);e=e+1|0;}while((e|0)<(q|0));u=r-d|0;v=s;w=t}else{u=0;v=0.0;w=0.0}r=(u|0)<1?1:u;t=+(r|0);s=w/t;w=v/t;u=l|0;c[u>>2]=0;e=l+4|0;c[e>>2]=0;p=l+8|0;c[p>>2]=0;Mf(l|0,r,2);a:do{if(o){r=c[e>>2]|0;x=c[p>>2]|0;y=c[u>>2]|0;z=(x|0)>1;A=0;while(1){B=(A+d|0)%(b|0)|0;if((r|0)<=(A|0)|(x|0)<1){C=11;break}h[y+(A<<3)>>3]=+(c[a+(B<<3)>>2]|0)-s;if(!z){C=14;break}h[y+(r+A<<3)>>3]=+(c[a+(B<<3)+4>>2]|0)-w;B=A+1|0;if((B|0)<(q|0)){A=B}else{D=x;break a}}if((C|0)==11){Yb(4656,5880,337,7592)}else if((C|0)==14){Yb(4656,5880,337,7592)}}else{D=c[p>>2]|0}}while(0);c[n>>2]=l;c[n+4>>2]=l;l=n+8|0;c[l>>2]=0;c[n+12>>2]=0;c[n+16>>2]=0;p=n+8|0;Mf(p|0,D,D);h[j>>3]=0.0;Of(p,j)|0;h[k>>3]=1.0;_f(n,p,k);bg(m,p);kq(c[l>>2]|0);l=c[m+4>>2]|0;p=c[m+8>>2]|0;if(!((l|0)==2&(p|0)==2&(l|0)>-1&(p|0)>-1)){Yb(6744,168,238,7568)}p=c[m>>2]|0;t=+h[p>>3];v=+h[p+8>>3];E=+h[p+16>>3];F=+h[p+24>>3];if(!(E!=0.0)){G=1.0;H=0.0;I=-0.0-H;J=t*G;K=v*I;L=J+K;M=t*H;N=v*G;O=M+N;P=E*G;Q=F*I;R=P+Q;S=E*H;T=F*G;U=S+T;W=G*L;X=R*I;Y=W+X;Z=H*O;_=G*U;$=Z+_;aa=Y<$;ba=aa?H:G;ca=aa?G:I;da=f|0;h[da>>3]=s;ea=f+8|0;h[ea>>3]=w;fa=f+16|0;h[fa>>3]=ba;ga=f+24|0;h[ga>>3]=ca;ha=p;kq(ha);ia=c[u>>2]|0;ja=ia;kq(ja);i=g;return}ka=(F-t)/(E*2.0);la=+V(ka*ka+1.0);if(ka<0.0){ma=-1.0/(la-ka)}else{ma=1.0/(ka+la)}ka=1.0/la;G=ka;H=ma*ka;I=-0.0-H;J=t*G;K=v*I;L=J+K;M=t*H;N=v*G;O=M+N;P=E*G;Q=F*I;R=P+Q;S=E*H;T=F*G;U=S+T;W=G*L;X=R*I;Y=W+X;Z=H*O;_=G*U;$=Z+_;aa=Y<$;ba=aa?H:G;ca=aa?G:I;da=f|0;h[da>>3]=s;ea=f+8|0;h[ea>>3]=w;fa=f+16|0;h[fa>>3]=ba;ga=f+24|0;h[ga>>3]=ca;ha=p;kq(ha);ia=c[u>>2]|0;ja=ia;kq(ja);i=g;return}function hg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0.0,Ca=0.0,Da=0.0,Ea=0.0,Fa=0.0,Ga=0.0,Ha=0.0,Ia=0.0,Ja=0.0,Ka=0.0,La=0.0,Ma=0.0,Na=0.0,Oa=0.0,Pa=0.0,Qa=0.0;g=i;i=i+152|0;j=g|0;k=g+8|0;l=g+24|0;Kq(k|0,0,16)|0;if((d|0)==0){m=-1;n=-1}else{o=-1;p=0;q=-1;while(1){r=c[a+(p<<3)>>2]|0;s=fa(r,r)|0;r=c[a+(p<<3)+4>>2]|0;t=(fa(r,r)|0)+s|0;s=(t|0)>(q|0);u=s?p:o;r=p+1|0;if(r>>>0<d>>>0){o=u;p=r;q=s?t:q}else{break}}q=c[a+(u<<3)>>2]|0;p=c[a+(u<<3)+4>>2]|0;o=0;t=-1;s=-1;while(1){r=(c[a+(o<<3)>>2]|0)-q|0;v=(c[a+(o<<3)+4>>2]|0)-p|0;w=(fa(v,v)|0)+(fa(r,r)|0)|0;r=(w|0)>(s|0);v=r?o:t;x=o+1|0;if(x>>>0<d>>>0){o=x;t=v;s=r?w:s}else{m=v;n=u;break}}}u=c[a+(n<<3)>>2]|0;s=c[a+(m<<3)>>2]|0;t=u-s|0;o=c[a+(n<<3)+4>>2]|0;p=c[a+(m<<3)+4>>2]|0;q=o-p|0;v=~~(+V(+((fa(q,q)|0)+(fa(t,t)|0)|0))*5.0);w=s-u|0;r=p-o|0;do{if((n|0)==(m|0)){y=-1;z=-1;A=-1;B=-1}else{x=((n+1|0)>>>0)%(d>>>0)|0;if((x|0)==(m|0)){C=0;D=n}else{E=0;F=n;G=x;while(1){x=(fa((c[a+(G<<3)>>2]|0)-u|0,r)|0)-(fa((c[a+(G<<3)+4>>2]|0)-o|0,w)|0)|0;H=(x|0)>-1?x:-x|0;x=(H|0)>(E|0);I=x?H:E;H=x?G:F;x=((G+1|0)>>>0)%(d>>>0)|0;if((x|0)==(m|0)){C=I;D=H;break}else{E=I;F=H;G=x}}}G=((m+1|0)>>>0)%(d>>>0)|0;if((G|0)==(n|0)){y=m;z=0;A=C;B=D;break}else{J=0;K=m;L=G}while(1){G=(fa((c[a+(L<<3)>>2]|0)-s|0,q)|0)-(fa((c[a+(L<<3)+4>>2]|0)-p|0,t)|0)|0;F=(G|0)>-1?G:-G|0;G=(F|0)>(J|0);E=G?F:J;F=G?L:K;G=((L+1|0)>>>0)%(d>>>0)|0;if((G|0)==(n|0)){y=F;z=E;A=C;B=D;break}else{J=E;K=F;L=G}}}}while(0);L=(z|0)>(v|0);do{if((A|0)>(v|0)){if(L){c[k>>2]=n;c[k+4>>2]=B;c[k+8>>2]=m;c[k+12>>2]=y;break}z=c[a+(B<<3)>>2]|0;K=z-u|0;J=c[a+(B<<3)+4>>2]|0;D=J-o|0;do{if((n|0)==(B|0)){M=-1;N=-1}else{C=((n+1|0)>>>0)%(d>>>0)|0;if((C|0)==(B|0)){M=n;N=0;break}else{O=0;P=n;Q=C}while(1){C=(fa((c[a+(Q<<3)>>2]|0)-u|0,D)|0)-(fa((c[a+(Q<<3)+4>>2]|0)-o|0,K)|0)|0;t=(C|0)>-1?C:-C|0;C=(t|0)>(O|0);q=C?t:O;t=C?Q:P;C=((Q+1|0)>>>0)%(d>>>0)|0;if((C|0)==(B|0)){M=t;N=q;break}else{O=q;P=t;Q=C}}}}while(0);K=s-z|0;D=p-J|0;do{if((B|0)==(m|0)){R=-1;S=-1}else{C=((B+1|0)>>>0)%(d>>>0)|0;if((C|0)==(m|0)){R=B;S=0;break}else{T=0;U=B;W=C}while(1){C=(fa((c[a+(W<<3)>>2]|0)-z|0,D)|0)-(fa((c[a+(W<<3)+4>>2]|0)-J|0,K)|0)|0;t=(C|0)>-1?C:-C|0;C=(t|0)>(T|0);q=C?t:T;t=C?W:U;C=((W+1|0)>>>0)%(d>>>0)|0;if((C|0)==(m|0)){R=t;S=q;break}else{T=q;U=t;W=C}}}}while(0);if((N|0)>(S|0)){K=c[a+(M<<3)>>2]|0;J=s-K|0;D=c[a+(M<<3)+4>>2]|0;z=p-D|0;do{if((M|0)==(m|0)){X=-1;Y=-1}else{C=((M+1|0)>>>0)%(d>>>0)|0;if((C|0)==(m|0)){X=M;Y=0;break}else{Z=0;_=M;$=C}while(1){C=(fa((c[a+($<<3)>>2]|0)-K|0,z)|0)-(fa((c[a+($<<3)+4>>2]|0)-D|0,J)|0)|0;t=(C|0)>-1?C:-C|0;C=(t|0)>(Z|0);q=C?t:Z;t=C?$:_;C=(($+1|0)>>>0)%(d>>>0)|0;if((C|0)==(m|0)){X=t;Y=q;break}else{Z=q;_=t;$=C}}}}while(0);if((Y|0)>(v|0)){c[k>>2]=n;c[k+4>>2]=M;c[k+8>>2]=X;c[k+12>>2]=m;break}else{aa=0;i=g;return aa|0}}else{J=(c[a+(R<<3)>>2]|0)-u|0;D=(c[a+(R<<3)+4>>2]|0)-o|0;do{if((n|0)==(R|0)){ba=-1;ca=-1}else{z=((n+1|0)>>>0)%(d>>>0)|0;if((z|0)==(R|0)){ba=n;ca=0;break}else{da=0;ea=n;ga=z}while(1){z=(fa((c[a+(ga<<3)>>2]|0)-u|0,D)|0)-(fa((c[a+(ga<<3)+4>>2]|0)-o|0,J)|0)|0;K=(z|0)>-1?z:-z|0;z=(K|0)>(da|0);C=z?K:da;K=z?ga:ea;z=((ga+1|0)>>>0)%(d>>>0)|0;if((z|0)==(R|0)){ba=K;ca=C;break}else{da=C;ea=K;ga=z}}}}while(0);if((ca|0)>(v|0)){c[k>>2]=n;c[k+4>>2]=ba;c[k+8>>2]=R;c[k+12>>2]=m;break}else{aa=0;i=g;return aa|0}}}else{if(!L){aa=0;i=g;return aa|0}J=c[a+(y<<3)>>2]|0;D=J-s|0;z=c[a+(y<<3)+4>>2]|0;K=z-p|0;do{if((m|0)==(y|0)){ha=-1;ia=-1}else{C=((m+1|0)>>>0)%(d>>>0)|0;if((C|0)==(y|0)){ha=m;ia=0;break}else{ja=0;ka=m;la=C}while(1){C=(fa((c[a+(la<<3)>>2]|0)-s|0,K)|0)-(fa((c[a+(la<<3)+4>>2]|0)-p|0,D)|0)|0;t=(C|0)>-1?C:-C|0;C=(t|0)>(ja|0);q=C?t:ja;t=C?la:ka;C=((la+1|0)>>>0)%(d>>>0)|0;if((C|0)==(y|0)){ha=t;ia=q;break}else{ja=q;ka=t;la=C}}}}while(0);D=u-J|0;K=o-z|0;do{if((y|0)==(n|0)){ma=-1;na=-1}else{C=((y+1|0)>>>0)%(d>>>0)|0;if((C|0)==(n|0)){ma=y;na=0;break}else{oa=0;pa=y;qa=C}while(1){C=(fa((c[a+(qa<<3)>>2]|0)-J|0,K)|0)-(fa((c[a+(qa<<3)+4>>2]|0)-z|0,D)|0)|0;t=(C|0)>-1?C:-C|0;C=(t|0)>(oa|0);q=C?t:oa;t=C?qa:pa;C=((qa+1|0)>>>0)%(d>>>0)|0;if((C|0)==(n|0)){ma=t;na=q;break}else{oa=q;pa=t;qa=C}}}}while(0);if((ia|0)>(na|0)){D=c[a+(ha<<3)>>2]|0;z=u-D|0;K=c[a+(ha<<3)+4>>2]|0;J=o-K|0;do{if((ha|0)==(n|0)){ra=-1;sa=-1}else{C=((ha+1|0)>>>0)%(d>>>0)|0;if((C|0)==(n|0)){ra=ha;sa=0;break}else{ta=0;ua=ha;va=C}while(1){C=(fa((c[a+(va<<3)>>2]|0)-D|0,J)|0)-(fa((c[a+(va<<3)+4>>2]|0)-K|0,z)|0)|0;t=(C|0)>-1?C:-C|0;C=(t|0)>(ta|0);q=C?t:ta;t=C?va:ua;C=((va+1|0)>>>0)%(d>>>0)|0;if((C|0)==(n|0)){ra=t;sa=q;break}else{ta=q;ua=t;va=C}}}}while(0);if((sa|0)>(v|0)){c[k>>2]=n;c[k+4>>2]=m;c[k+8>>2]=ha;c[k+12>>2]=ra;break}else{aa=0;i=g;return aa|0}}else{z=(c[a+(ma<<3)>>2]|0)-s|0;K=(c[a+(ma<<3)+4>>2]|0)-p|0;do{if((m|0)==(ma|0)){wa=-1;xa=-1}else{J=((m+1|0)>>>0)%(d>>>0)|0;if((J|0)==(ma|0)){wa=m;xa=0;break}else{ya=0;za=m;Aa=J}while(1){J=(fa((c[a+(Aa<<3)>>2]|0)-s|0,K)|0)-(fa((c[a+(Aa<<3)+4>>2]|0)-p|0,z)|0)|0;D=(J|0)>-1?J:-J|0;J=(D|0)>(ya|0);C=J?D:ya;D=J?Aa:za;J=((Aa+1|0)>>>0)%(d>>>0)|0;if((J|0)==(ma|0)){wa=D;xa=C;break}else{ya=C;za=D;Aa=J}}}}while(0);if((xa|0)>(v|0)){c[k>>2]=n;c[k+4>>2]=m;c[k+8>>2]=wa;c[k+12>>2]=ma;break}else{aa=0;i=g;return aa|0}}}}while(0);ma=k|0;Hg(ma,k+16|0,j);j=c[ma>>2]|0;wa=k+4|0;m=c[wa>>2]|0;n=k+8|0;v=c[n>>2]|0;xa=k+12|0;k=c[xa>>2]|0;if(e){e=l|0;je(e);je(l+32|0);je(l+64|0);je(l+96|0);gg(a,d,c[ma>>2]|0,c[wa>>2]|0,e);gg(a,d,c[wa>>2]|0,c[n>>2]|0,l+32|0);gg(a,d,c[n>>2]|0,c[xa>>2]|0,l+64|0);gg(a,d,c[xa>>2]|0,c[ma>>2]|0,l+96|0);ma=0;while(1){xa=ma+1|0;d=(xa|0)==4?0:xa;n=(ma+2|0)%4|0;Ba=+h[l+(ma<<5)+16>>3];Ca=+h[l+(ma<<5)+24>>3];Da=+h[l+(d<<5)+16>>3];Ea=+h[l+(d<<5)+24>>3];Fa=+h[l+(d<<5)>>3];Ga=+h[l+(d<<5)+8>>3];Ha=(Ca*(Fa- +h[l+(ma<<5)>>3])-Ba*(Ga- +h[l+(ma<<5)+8>>3]))/(Ba*Ea-Ca*Da);h[b+(n<<4)>>3]=Fa+Da*Ha;h[b+(n<<4)+8>>3]=Ga+Ea*Ha;if((xa|0)<4){ma=xa}else{break}}ma=b|0;Ha=+h[ma>>3];l=b+8|0;Ea=+h[l>>3];xa=b+16|0;Ga=+h[xa>>3];h[ma>>3]=Ga;ma=b+24|0;Da=+h[ma>>3];h[l>>3]=Da;l=b+32|0;Fa=+h[l>>3];h[xa>>3]=Fa;xa=b+40|0;Ca=+h[xa>>3];h[ma>>3]=Ca;ma=b+48|0;Ba=+h[ma>>3];h[l>>3]=Ba;l=b+56|0;Ia=+h[l>>3];h[xa>>3]=Ia;h[ma>>3]=Ha;h[l>>3]=Ea;Ja=Ga;Ka=Fa;La=Ba;Ma=Ha;Na=Da;Oa=Ca;Pa=Ia;Qa=Ea}else{l=c[a+(k<<3)+4>>2]|0;ma=c[a+(k<<3)>>2]|0;k=c[a+(v<<3)+4>>2]|0;xa=c[a+(v<<3)>>2]|0;v=c[a+(m<<3)+4>>2]|0;n=c[a+(m<<3)>>2]|0;m=c[a+(j<<3)+4>>2]|0;Ea=+(c[a+(j<<3)>>2]|0);h[b>>3]=Ea;Ia=+(m|0);h[b+8>>3]=Ia;Ca=+(n|0);h[b+16>>3]=Ca;Da=+(v|0);h[b+24>>3]=Da;Ha=+(xa|0);h[b+32>>3]=Ha;Ba=+(k|0);h[b+40>>3]=Ba;Fa=+(ma|0);h[b+48>>3]=Fa;Ga=+(l|0);h[b+56>>3]=Ga;Ja=Ea;Ka=Ca;La=Ha;Ma=Fa;Na=Ia;Oa=Da;Pa=Ba;Qa=Ga}if(!f){aa=1;i=g;return aa|0}Ga=(Ja+Ka+La+Ma)*.25;Ba=(Na+Oa+Pa+Qa)*.25;Da=Ja-Ga;Ia=Na-Ba;Fa=1.0/+V(Da*Da+Ia*Ia);h[b>>3]=Ja+Da*Fa;h[b+8>>3]=Ia*Fa+Na;Na=Ka-Ga;Fa=Oa-Ba;Ia=1.0/+V(Na*Na+Fa*Fa);h[b+16>>3]=Ka+Na*Ia;h[b+24>>3]=Fa*Ia+Oa;Oa=La-Ga;Ia=Pa-Ba;Fa=1.0/+V(Oa*Oa+Ia*Ia);h[b+32>>3]=La+Oa*Fa;h[b+40>>3]=Ia*Fa+Pa;Pa=Ma-Ga;Ga=Qa-Ba;Ba=1.0/+V(Pa*Pa+Ga*Ga);h[b+48>>3]=Ma+Pa*Ba;h[b+56>>3]=Ga*Ba+Qa;aa=1;i=g;return aa|0}function ig(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=c[b>>2]|0;h=c[a>>2]|0;i=c[d>>2]|0;j=(i|0)<(g|0);do{if((g|0)<(h|0)){if(j){c[a>>2]=i;c[d>>2]=h;k=1;l=h;break}c[a>>2]=g;c[b>>2]=h;m=c[d>>2]|0;if((m|0)>=(h|0)){k=1;l=m;break}c[b>>2]=m;c[d>>2]=h;k=2;l=h}else{if(!j){k=0;l=i;break}c[b>>2]=i;c[d>>2]=g;m=c[b>>2]|0;n=c[a>>2]|0;if((m|0)>=(n|0)){k=1;l=g;break}c[a>>2]=m;c[b>>2]=n;k=2;l=c[d>>2]|0}}while(0);g=c[e>>2]|0;do{if((g|0)<(l|0)){c[d>>2]=g;c[e>>2]=l;i=c[d>>2]|0;j=c[b>>2]|0;if((i|0)>=(j|0)){o=k+1|0;break}c[b>>2]=i;c[d>>2]=j;j=c[b>>2]|0;i=c[a>>2]|0;if((j|0)<(i|0)){c[a>>2]=j;c[b>>2]=i;o=k+3|0;break}else{o=k+2|0;break}}else{o=k}}while(0);k=c[f>>2]|0;l=c[e>>2]|0;if((k|0)>=(l|0)){p=o;return p|0}c[e>>2]=k;c[f>>2]=l;l=c[e>>2]|0;f=c[d>>2]|0;if((l|0)>=(f|0)){p=o+1|0;return p|0}c[d>>2]=l;c[e>>2]=f;f=c[d>>2]|0;e=c[b>>2]|0;if((f|0)>=(e|0)){p=o+2|0;return p|0}c[b>>2]=f;c[d>>2]=e;e=c[b>>2]|0;d=c[a>>2]|0;if((e|0)>=(d|0)){p=o+3|0;return p|0}c[a>>2]=e;c[b>>2]=d;p=o+4|0;return p|0}function jg(a){a=a|0;c[a>>2]=11416;Fg(a+560|0,c[a+564>>2]|0);Eg(a+548|0,c[a+552>>2]|0);cf(a+152|0);return}function kg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+456|0;g=f|0;j=f+16|0;k=f+144|0;l=f+160|0;m=f+176|0;n=f+304|0;o=f+440|0;c[4246]=b;c[4328]=d;c[4248]=e;h[k>>3]=+((b|0)/2|0|0);h[k+8>>3]=+((d|0)/2|0|0);h[l>>3]=+(b|0);h[l+8>>3]=+(d|0);de(j,400.0,k,l,0);h[2170]=+h[j>>3];h[2171]=+h[j+8>>3];h[2172]=+h[j+16>>3];h[2173]=+h[j+24>>3];h[2174]=+h[j+32>>3];h[2175]=+h[j+40>>3];h[2176]=+h[j+48>>3];h[2177]=+h[j+56>>3];h[2178]=+h[j+64>>3];h[2179]=+h[j+72>>3];h[2180]=+h[j+80>>3];h[2181]=+h[j+88>>3];h[2182]=+h[j+96>>3];h[2183]=+h[j+104>>3];h[2184]=+h[j+112>>3];h[2185]=+h[j+120>>3];ee(j,c[4246]|0,c[4328]|0,100.0,.1,m|0);j=n|0;l=n+4|0;c[j>>2]=16676;k=n+56|0;c[k>>2]=16696;d=n+56|0;hi(d,l);c[n+128>>2]=0;c[n+132>>2]=-1;c[j>>2]=9900;c[n+56>>2]=9920;b=g;e=l|0;c[e>>2]=10320;p=n+8|0;vn(p);Kq(n+12|0,0,24)|0;c[e>>2]=10176;e=n+36|0;Kq(e|0,0,16)|0;c[n+52>>2]=16;Kq(b|0,0,12)|0;Ud(l,g);if(!((a[b]&1)==0)){sq(c[g+8>>2]|0)}g=n;ed(g,5152)|0;b=0;q=0;while(1){r=q<<2;if((b|0)>0){ed(g,3064)|0}dj(g,+h[m+(r<<3)>>3])|0;if((b|1|0)>0){ed(g,3064)|0}dj(g,+h[m+((r|1)<<3)>>3])|0;if((b|2|0)>0){ed(g,3064)|0}dj(g,+h[m+((r|2)<<3)>>3])|0;if((b|3|0)>0){ed(g,3064)|0}dj(g,+h[m+((r|3)<<3)>>3])|0;r=q+1|0;if((r|0)<4){b=b+4|0;q=r}else{break}}ed(g,2448)|0;Hd(o,l);l=o;g=a[l]|0;q=(g&1)==0;if(q){s=(g&255)>>>1}else{s=c[o+4>>2]|0}g=rq(s+1|0)|0;if(q){t=o+1|0}else{t=c[o+8>>2]|0}Mq(g|0,t|0)|0;h[2145]=1.0;h[2149]=0.0;h[2153]=0.0;h[2157]=0.0;h[2146]=0.0;h[2150]=-1.0;h[2154]=0.0;h[2158]=0.0;h[2147]=0.0;h[2151]=0.0;h[2155]=-1.0;h[2159]=0.0;h[2148]=0.0;h[2152]=0.0;h[2156]=0.0;h[2160]=1.0;h[2125]=1.0;h[2129]=0.0;h[2133]=0.0;h[2137]=.5;h[2126]=0.0;h[2130]=1.0;h[2134]=0.0;h[2138]=.5;h[2127]=0.0;h[2131]=0.0;h[2135]=1.0;h[2139]=0.0;h[2128]=0.0;h[2132]=0.0;h[2136]=0.0;h[2140]=1.0;c[4326]=fa(c[4246]<<2,c[4328]|0)|0;if(!((a[l]&1)==0)){sq(c[o+8>>2]|0)}c[j>>2]=9900;c[k>>2]=9920;k=n+4|0;c[k>>2]=10176;if(!((a[e]&1)==0)){sq(c[n+44>>2]|0)}c[k>>2]=10320;xn(p);fi(d);i=f;return g|0}function lg(b){b=b|0;var d=0;c[b>>2]=9900;c[b+56>>2]=9920;d=b+4|0;c[d>>2]=10176;if(!((a[b+36|0]&1)==0)){sq(c[b+44>>2]|0)}c[d>>2]=10320;xn(b+8|0);fi(b+56|0);return}function mg(a){a=a|0;var b=0,c=0;b=i;i=i+2440|0;c=b|0;De(c,a);df(17504,c|0,1,0.0,-1);Ge(c);i=b;return}function ng(a){a=a|0;var b=0,c=0;b=i;i=i+104|0;c=b|0;We(c,a);df(17504,c|0,1,0.0,-1);Ye(c);i=b;return}function og(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;pg(17352,a,b,c,d,e);return}function pg(b,c,d,e,f,g){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=i;i=i+120|0;j=h|0;k=h+24|0;l=fa(d,c)|0;m=l<<2;n=rq((l|0)>-1?l:-1)|0;o=e;if((m|0)>1){e=0;p=1;while(1){a[n+e|0]=a[o+p|0]|0;q=p+4|0;if((q|0)<(m|0)){e=e+1|0;p=q}else{break}}}if((g|0)<0){r=~~(+(c|0)*.625)}else{r=g}ge(j,n,c,d,0);ke(k,10);ye(k,f,1);oe(k,j,0)|0;df(b+152|0,k,1,+(r*255|0|0)/+(l|0),-1);if((n|0)==0){ne(k);i=h;return}tq(n);ne(k);i=h;return}function qg(){var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;b=i;i=i+192|0;d=b|0;e=b+16|0;f=b+40|0;g=b+176|0;h=c[4326]|0;j=rq((h|0)<-3?-1:(h|0)/4|0)|0;c[4330]=j;if((h|0)>0){h=0;k=0;l=j;while(1){a[l+h|0]=a[(c[4248]|0)+(k|1)|0]|0;a[(c[4330]|0)+(h|1)|0]=a[(c[4248]|0)+(k|5)|0]|0;a[(c[4330]|0)+(h|2)|0]=a[(c[4248]|0)+(k|9)|0]|0;a[(c[4330]|0)+(h|3)|0]=a[(c[4248]|0)+(k|13)|0]|0;m=k+16|0;if((m|0)>=(c[4326]|0)){break}h=h+4|0;k=m;l=c[4330]|0}n=c[4330]|0}else{n=j}ge(e,n,c[4246]|0,c[4328]|0,0);n=e;c[4332]=c[n>>2];c[4333]=c[n+4>>2];c[4334]=c[n+8>>2];c[4335]=c[n+12>>2];a[17344]=a[n+16|0]|0;n=f|0;e=f+4|0;c[n>>2]=16676;j=f+56|0;c[j>>2]=16696;l=f+56|0;hi(l,e);c[f+128>>2]=0;c[f+132>>2]=-1;c[n>>2]=9900;c[f+56>>2]=9920;k=d;h=e|0;c[h>>2]=10320;m=f+8|0;vn(m);Kq(f+12|0,0,24)|0;c[h>>2]=10176;h=f+36|0;Kq(h|0,0,16)|0;c[f+52>>2]=16;Kq(k|0,0,12)|0;Ud(e,d);if(!((a[k]&1)==0)){sq(c[d+8>>2]|0)}rg(17352,17328,f)|0;d=c[4330]|0;if((d|0)!=0){tq(d)}d=c[4282]|0;if((d|0)!=0){tq(d);c[4282]=0}Hd(g,e);e=g;d=a[e]|0;k=(d&1)==0;if(k){o=(d&255)>>>1}else{o=c[g+4>>2]|0}d=rq(o+1|0)|0;c[4282]=d;if(k){p=g+1|0}else{p=c[g+8>>2]|0}Mq(d|0,p|0)|0;p=c[4282]|0;if(!((a[e]&1)==0)){sq(c[g+8>>2]|0)}c[n>>2]=9900;c[j>>2]=9920;j=f+4|0;c[j>>2]=10176;if(!((a[h]&1)==0)){sq(c[f+44>>2]|0)}c[j>>2]=10320;xn(m);fi(l);i=b;return p|0}function rg(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,Z=0,_=0,$=0,aa=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0.0,nb=0.0,ob=0.0,pb=0.0,qb=0.0,sb=0.0,tb=0.0,ub=0.0,vb=0.0,wb=0.0,xb=0.0,yb=0,zb=0,Ab=0,Bb=0;g=i;i=i+1232|0;j=g|0;k=g+128|0;l=g+200|0;m=g+256|0;n=g+264|0;o=g+272|0;p=g+280|0;q=g+408|0;r=g+536|0;s=g+672|0;u=g+808|0;v=g+824|0;w=g+832|0;x=g+840|0;y=g+968|0;z=g+1096|0;A=b+544|0;c[A>>2]=(c[A>>2]|0)+1;B=b+152|0;C=b+8|0;ef(B,e,C);D=f;ed(D,5152)|0;f=ff(B)|0;if((f|0)==0){E=0;F=0}else{G=b+136|0;H=b+548|0;I=l|0;J=l+8|0;K=l+16|0;L=l+24|0;M=l+32|0;N=l+40|0;O=l+48|0;P=b+560|0;Q=q|0;R=q+40|0;S=q+8|0;T=S;U=q+80|0;V=q+48|0;W=V;Z=q+120|0;_=q+88|0;$=q+96|0;aa=q+104|0;ca=q+112|0;da=q+16|0;ea=q+32|0;fa=q+64|0;ga=q+72|0;ha=r|0;ia=r+4|0;ja=s|0;ka=r+8|0;la=s+4|0;ma=s+8|0;na=ma|0;oa=p|0;pa=s+16|0;qa=p+8|0;ra=s+24|0;sa=p+16|0;ta=s+32|0;ua=p+24|0;va=s+40|0;wa=p+32|0;xa=s+48|0;ya=p+40|0;za=s+56|0;Aa=p+48|0;Ba=s+64|0;Ca=p+56|0;Da=s+72|0;Ea=p+64|0;Fa=s+80|0;Ga=p+72|0;Ha=s+88|0;Ia=p+80|0;Ja=s+96|0;Ka=p+88|0;La=s+104|0;Ma=p+96|0;Na=s+112|0;Oa=p+104|0;Pa=s+120|0;Qa=p+112|0;Ra=s+128|0;Sa=p+120|0;Ta=u;Ua=u;Va=Ua+1|0;Wa=Ua+6|0;Ua=u+8|0;Xa=b+552|0;Ya=b+552|0;Za=0;_a=0;$a=f;while(1){do{if(wc[c[(c[$a>>2]|0)+16>>2]&255]($a)|0){f=(d[$a+20|0]|0)+Za|0;ab=_a+1|0;kf(l);bb=$a+24|0;vg(bb,C,l);cb=$a+4|0;do{if((a[G]|0)==0){db=13}else{fb=c[cb>>2]|0;gb=c[Xa>>2]|0;if((gb|0)==0){db=13;break}else{hb=gb;ib=Ya}a:while(1){gb=hb;while(1){jb=gb;if((c[gb+16>>2]|0)>=(fb|0)){break}kb=c[gb+4>>2]|0;if((kb|0)==0){lb=ib;break a}else{gb=kb}}kb=c[gb>>2]|0;if((kb|0)==0){lb=jb;break}else{hb=kb;ib=jb}}if((lb|0)==(Ya|0)){db=13;break}if((fb|0)<(c[lb+16>>2]|0)){db=13;break}c[m>>2]=fb;wg(C,l,bb,10,xg(H,m)|0,1.0)|0}}while(0);if((db|0)==13){db=0;yg(C,l,bb,10)|0}c[n>>2]=c[cb>>2];kb=xg(H,n)|0;h[kb>>3]=+h[I>>3];h[kb+8>>3]=+h[J>>3];h[kb+16>>3]=+h[K>>3];h[kb+24>>3]=+h[L>>3];h[kb+32>>3]=+h[M>>3];h[kb+40>>3]=+h[N>>3];h[kb+48>>3]=+h[O>>3];kb=c[A>>2]|0;c[o>>2]=c[cb>>2];c[(zg(P,o)|0)>>2]=kb;Kq(T|0,0,24)|0;Kq(W|0,0,16)|0;Kq(_|0,0,16)|0;h[Z>>3]=1.0;h[$>>3]=+h[I>>3];h[aa>>3]=+h[J>>3];h[ca>>3]=+h[K>>3];mb=+h[L>>3];nb=mb*2.0;ob=+h[M>>3];pb=ob*2.0;qb=+h[N>>3];sb=qb*2.0;tb=+h[O>>3];ub=nb*tb;vb=pb*tb;wb=sb*tb;tb=mb*nb;nb=mb*pb;xb=mb*sb;mb=ob*pb;pb=ob*sb;ob=qb*sb;h[Q>>3]=1.0-(mb+ob);h[S>>3]=nb+wb;h[da>>3]=xb-vb;h[ea>>3]=nb-wb;h[R>>3]=1.0-(tb+ob);h[V>>3]=pb+ub;h[fa>>3]=xb+vb;h[ga>>3]=pb-ub;h[U>>3]=1.0-(tb+mb);c[ha>>2]=17160;c[ia>>2]=q;Ag(ka,r);c[ja>>2]=ka;c[la>>2]=17e3;Ag(ma,s);h[oa>>3]=+h[na>>3];h[qa>>3]=+h[pa>>3];h[sa>>3]=+h[ra>>3];h[ua>>3]=+h[ta>>3];h[wa>>3]=+h[va>>3];h[ya>>3]=+h[xa>>3];h[Aa>>3]=+h[za>>3];h[Ca>>3]=+h[Ba>>3];h[Ea>>3]=+h[Da>>3];h[Ga>>3]=+h[Fa>>3];h[Ia>>3]=+h[Ha>>3];h[Ka>>3]=+h[Ja>>3];h[Ma>>3]=+h[La>>3];h[Oa>>3]=+h[Na>>3];h[Qa>>3]=+h[Pa>>3];h[Sa>>3]=+h[Ra>>3];if((_a|0)>0){ed(D,3064)|0}kb=ed(D,5536)|0;bj(kb,c[cb>>2]|0)|0;a[Ta]=10;a[Va]=a[5424]|0;a[Va+1|0]=a[5425]|0;a[Va+2|0]=a[5426]|0;a[Va+3|0]=a[5427]|0;a[Va+4|0]=a[5428]|0;a[Wa]=0;kb=$a;do{if((cq(kb,16520,16528,-1)|0)==0){if((cq(kb,16520,16560,-1)|0)==0){break}Ph(u,5168)|0}else{Ph(u,5280)|0}}while(0);ed(od(ed(D,5072)|0,u)|0,4960)|0;ed(D,4920)|0;kb=0;cb=0;while(1){bb=cb<<2;if((kb|0)>0){ed(D,3064)|0}dj(D,+h[p+(bb<<3)>>3])|0;if((kb|1|0)>0){ed(D,3064)|0}dj(D,+h[p+((bb|1)<<3)>>3])|0;if((kb|2|0)>0){ed(D,3064)|0}dj(D,+h[p+((bb|2)<<3)>>3])|0;if((kb|3|0)>0){ed(D,3064)|0}dj(D,+h[p+((bb|3)<<3)>>3])|0;bb=cb+1|0;if((bb|0)<4){kb=kb+4|0;cb=bb}else{break}}ed(D,4912)|0;if((a[Ta]&1)==0){yb=ab;zb=f;break}sq(c[Ua>>2]|0);yb=ab;zb=f}else{yb=_a;zb=Za}}while(0);cb=ff(B)|0;if((cb|0)==0){E=zb;F=yb;break}else{Za=zb;_a=yb;$a=cb}}}ed(D,2448)|0;D=b+160|0;$a=c[D>>2]|0;if((F|0)>0){Ab=($a+E|0)/(F+1|0)|0}else{E=$a+32|0;Ab=(E|0)>255?0:E}c[D>>2]=Ab;if((a[b+144|0]|0)==0){i=g;return 1}if(+h[1036]==0.0){mb=+(c[e+4>>2]|0);tb=+ba(+(mb*.5),+(+h[b+48>>3]))*2.0/mb;h[1036]=tb;h[1035]=tb}do{if((a[22120]|0)==0){if((rb(22120)|0)==0){break}cg(20472,50);eb(194,20472,t|0)|0}}while(0);+eg(20472,e);if((F|0)!=0){i=g;return 1}F=c[b+560>>2]|0;e=b+564|0;if((F|0)==(e|0)){i=g;return 1}Ab=b+548|0;b=x|0;D=x+40|0;E=x+8|0;$a=E;yb=x+80|0;_a=x+48|0;zb=_a;Za=x+120|0;B=x+88|0;Ua=B;Ta=x+96|0;p=x+104|0;u=x+112|0;Wa=x+16|0;Va=x+32|0;Ra=x+64|0;Sa=x+72|0;Pa=y|0;Qa=y+40|0;Na=y+8|0;Oa=Na;La=y+80|0;Ma=y+48|0;Ja=Ma;Ka=y+120|0;Ha=y+88|0;Ia=y+16|0;Fa=y+32|0;Ga=y+64|0;Da=y+72|0;Ea=z|0;Ba=z+4|0;Ca=j|0;za=j+8|0;Aa=j+16|0;xa=j+24|0;ya=x+24|0;va=j+32|0;wa=j+40|0;ta=j+48|0;ua=j+56|0;ra=x+56|0;sa=j+64|0;pa=j+72|0;qa=j+80|0;na=j+88|0;oa=j+96|0;s=j+104|0;ma=j+112|0;la=j+120|0;ka=k|0;ja=k+8|0;r=k+16|0;q=k+24|0;ia=k+32|0;ha=k+40|0;U=k+48|0;ga=k+56|0;fa=k+64|0;V=F;while(1){if((c[A>>2]|0)>>>0<((c[V+20>>2]|0)+5e3|0)>>>0){h[v>>3]=0.0;h[w>>3]=0.0;fg(20472,v,w);F=V+16|0;R=xg(Ab,F)|0;Kq($a|0,0,24)|0;Kq(zb|0,0,24)|0;Kq(Ua|0,0,24)|0;h[Za>>3]=1.0;h[Ta>>3]=+h[R>>3];h[p>>3]=+h[R+8>>3];h[u>>3]=+h[R+16>>3];tb=+h[R+24>>3];mb=tb*2.0;ub=+h[R+32>>3];pb=ub*2.0;vb=+h[R+40>>3];xb=vb*2.0;ob=+h[R+48>>3];wb=mb*ob;nb=pb*ob;sb=xb*ob;ob=tb*mb;mb=tb*pb;qb=tb*xb;tb=ub*pb;pb=ub*xb;ub=vb*xb;h[b>>3]=1.0-(tb+ub);h[E>>3]=mb+sb;h[Wa>>3]=qb-nb;h[Va>>3]=mb-sb;h[D>>3]=1.0-(ob+ub);h[_a>>3]=pb+wb;h[Ra>>3]=qb+nb;h[Sa>>3]=pb-wb;h[yb>>3]=1.0-(ob+tb);tb=+h[1036]*+h[v>>3]*.5;ob=+X(tb);wb=+Y(tb);tb=wb*0.0;pb=+h[1035]*+h[w>>3]*.5;nb=+X(pb);qb=+Y(pb);pb=qb*0.0;ub=tb*qb;sb=wb*pb;mb=tb*pb;xb=ob*nb-ub-sb-mb;vb=tb*nb;tb=vb+ob*qb+sb-mb;sb=ob*pb;pb=ub+(wb*nb+sb)-mb;nb=mb+(vb+sb)-wb*qb;qb=tb*2.0;wb=pb*2.0;sb=nb*2.0;vb=xb*qb;mb=xb*wb;ub=xb*sb;xb=tb*qb;qb=tb*wb;ob=tb*sb;tb=pb*wb;wb=pb*sb;pb=nb*sb;Kq(Oa|0,0,24)|0;Kq(Ja|0,0,24)|0;Kq(Ha|0,0,32)|0;h[Ka>>3]=1.0;h[Pa>>3]=1.0-(tb+pb);h[Na>>3]=qb+ub;h[Ia>>3]=ob-mb;h[Fa>>3]=qb-ub;h[Qa>>3]=1.0-(xb+pb);h[Ma>>3]=vb+wb;h[Ga>>3]=ob+mb;h[Da>>3]=wb-vb;h[La>>3]=1.0-(xb+tb);c[Ea>>2]=y;c[Ba>>2]=x;Ag(j,z);h[b>>3]=+h[Ca>>3];h[E>>3]=+h[za>>3];h[Wa>>3]=+h[Aa>>3];h[ya>>3]=+h[xa>>3];h[Va>>3]=+h[va>>3];h[D>>3]=+h[wa>>3];h[_a>>3]=+h[ta>>3];h[ra>>3]=+h[ua>>3];h[Ra>>3]=+h[sa>>3];h[Sa>>3]=+h[pa>>3];h[yb>>3]=+h[qa>>3];h[B>>3]=+h[na>>3];h[Ta>>3]=+h[oa>>3];h[p>>3]=+h[s>>3];h[u>>3]=+h[ma>>3];h[Za>>3]=+h[la>>3];R=xg(Ab,F)|0;h[R>>3]=+h[Ta>>3];h[R+8>>3]=+h[p>>3];h[R+16>>3]=+h[u>>3];h[ka>>3]=+h[b>>3];h[ja>>3]=+h[E>>3];h[r>>3]=+h[Wa>>3];h[q>>3]=+h[Va>>3];h[ia>>3]=+h[D>>3];h[ha>>3]=+h[_a>>3];h[U>>3]=+h[Ra>>3];h[ga>>3]=+h[Sa>>3];h[fa>>3]=+h[yb>>3];mf(R+24|0,k)}R=c[V+4>>2]|0;if((R|0)==0){F=V|0;while(1){ea=c[F+8>>2]|0;if((c[ea>>2]|0)==(F|0)){Bb=ea;break}else{F=ea}}}else{F=R;while(1){ea=c[F>>2]|0;if((ea|0)==0){Bb=F;break}else{F=ea}}}if((Bb|0)==(e|0)){break}V=Bb}i=g;return 1}function sg(b){b=b|0;var d=0;c[b>>2]=9900;c[b+56>>2]=9920;d=b+4|0;c[d>>2]=10176;if(!((a[b+36|0]&1)==0)){sq(c[b+44>>2]|0)}c[d>>2]=10320;xn(b+8|0);fi(b+56|0);sq(b);return}function tg(b){b=b|0;var d=0,e=0,f=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;c[d+e>>2]=9900;b=d+(e+56)|0;c[b>>2]=9920;f=d+(e+4)|0;c[f>>2]=10176;if(!((a[d+(e+36)|0]&1)==0)){sq(c[d+(e+44)>>2]|0)}c[f>>2]=10320;xn(d+(e+8)|0);fi(b);return}function ug(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;b=d+e|0;c[b>>2]=9900;f=d+(e+56)|0;c[f>>2]=9920;g=d+(e+4)|0;c[g>>2]=10176;if(!((a[d+(e+36)|0]&1)==0)){sq(c[d+(e+44)>>2]|0)}c[g>>2]=10320;xn(d+(e+8)|0);fi(f);sq(b);return}function vg(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;d=i;i=i+208|0;e=d|0;f=d+72|0;g=d+136|0;j=+h[b+32>>3];if(j==0.0){h[e>>3]=+h[b+40>>3];h[e+8>>3]=+h[b+48>>3];h[e+16>>3]=+h[b+56>>3];h[e+24>>3]=+h[b+64>>3];h[e+32>>3]=+h[b+72>>3];h[e+40>>3]=+h[b+80>>3];h[e+48>>3]=+h[b+88>>3];h[e+56>>3]=+h[b+96>>3];h[e+64>>3]=+h[b+104>>3];pf(a,e,c);i=d;return}else{k=+h[b+16>>3];l=+h[b>>3];m=(+h[a>>3]-k)/l;n=+h[b+24>>3];o=+h[b+8>>3];p=(+h[a+8>>3]-n)/o;q=j*(m*m+p*p)+1.0;h[f>>3]=k+l*(m/q);h[f+8>>3]=n+p/q*o;q=(+h[a+16>>3]-k)/l;p=(+h[a+24>>3]-n)/o;m=j*(q*q+p*p)+1.0;h[f+16>>3]=k+l*(q/m);h[f+24>>3]=n+p/m*o;m=(+h[a+32>>3]-k)/l;p=(+h[a+40>>3]-n)/o;q=j*(m*m+p*p)+1.0;h[f+32>>3]=k+l*(m/q);h[f+40>>3]=n+p/q*o;q=(+h[a+48>>3]-k)/l;p=(+h[a+56>>3]-n)/o;m=j*(q*q+p*p)+1.0;h[f+48>>3]=k+l*(q/m);h[f+56>>3]=n+p/m*o;h[g>>3]=+h[b+40>>3];h[g+8>>3]=+h[b+48>>3];h[g+16>>3]=+h[b+56>>3];h[g+24>>3]=+h[b+64>>3];h[g+32>>3]=+h[b+72>>3];h[g+40>>3]=+h[b+80>>3];h[g+48>>3]=+h[b+88>>3];h[g+56>>3]=+h[b+96>>3];h[g+64>>3]=+h[b+104>>3];pf(f|0,g,c);i=d;return}}function wg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;var g=0,j=0,k=0,l=0,m=0.0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0;g=i;i=i+208|0;j=g|0;k=g+72|0;l=g+136|0;m=+h[a+32>>3];if(m==0.0){h[j>>3]=+h[a+40>>3];h[j+8>>3]=+h[a+48>>3];h[j+16>>3]=+h[a+56>>3];h[j+24>>3]=+h[a+64>>3];h[j+32>>3]=+h[a+72>>3];h[j+40>>3]=+h[a+80>>3];h[j+48>>3]=+h[a+88>>3];h[j+56>>3]=+h[a+96>>3];h[j+64>>3]=+h[a+104>>3];n=wf(j,b,c,d,e,f)|0;i=g;return n|0}else{o=+h[a+16>>3];p=+h[a>>3];q=(+h[c>>3]-o)/p;r=+h[a+24>>3];s=+h[a+8>>3];t=(+h[c+8>>3]-r)/s;u=m*(q*q+t*t)+1.0;h[k>>3]=o+p*(q/u);h[k+8>>3]=r+t/u*s;u=(+h[c+16>>3]-o)/p;t=(+h[c+24>>3]-r)/s;q=m*(u*u+t*t)+1.0;h[k+16>>3]=o+p*(u/q);h[k+24>>3]=r+t/q*s;q=(+h[c+32>>3]-o)/p;t=(+h[c+40>>3]-r)/s;u=m*(q*q+t*t)+1.0;h[k+32>>3]=o+p*(q/u);h[k+40>>3]=r+t/u*s;u=(+h[c+48>>3]-o)/p;t=(+h[c+56>>3]-r)/s;q=m*(u*u+t*t)+1.0;h[k+48>>3]=o+p*(u/q);h[k+56>>3]=r+t/q*s;h[l>>3]=+h[a+40>>3];h[l+8>>3]=+h[a+48>>3];h[l+16>>3]=+h[a+56>>3];h[l+24>>3]=+h[a+64>>3];h[l+32>>3]=+h[a+72>>3];h[l+40>>3]=+h[a+80>>3];h[l+48>>3]=+h[a+88>>3];h[l+56>>3]=+h[a+96>>3];h[l+64>>3]=+h[a+104>>3];n=wf(l,b,k|0,d,e,f)|0;i=g;return n|0}return 0}function xg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=i;i=i+16|0;e=d|0;f=d+8|0;g=a+4|0;h=c[g>>2]|0;do{if((h|0)==0){j=a+4|0;k=j;c[f>>2]=k;l=j|0;m=k}else{k=c[b>>2]|0;j=h;while(1){n=c[j+16>>2]|0;if((k|0)<(n|0)){o=j|0;p=c[o>>2]|0;if((p|0)==0){q=5;break}else{j=p;continue}}if((n|0)>=(k|0)){q=9;break}r=j+4|0;n=c[r>>2]|0;if((n|0)==0){q=8;break}else{j=n}}if((q|0)==5){c[f>>2]=j;l=o;m=j;break}else if((q|0)==8){c[f>>2]=j;l=r;m=j;break}else if((q|0)==9){c[f>>2]=j;l=f;m=j;break}}}while(0);f=c[l>>2]|0;if((f|0)!=0){s=f;t=s+24|0;i=d;return t|0}if((oq(e,16,80)|0)!=0){c[e>>2]=0;Be();return 0}f=c[e>>2]|0;if((f|0)==0){Be();return 0}e=f+16|0;if((e|0)!=0){c[e>>2]=c[b>>2]}b=f+24|0;if((b|0)!=0){kf(b)}b=f;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=m;c[l>>2]=b;m=a|0;e=c[c[m>>2]>>2]|0;if((e|0)==0){u=b}else{c[m>>2]=e;u=c[l>>2]|0}Cg(c[g>>2]|0,u);u=a+8|0;c[u>>2]=(c[u>>2]|0)+1;s=f;t=s+24|0;i=d;return t|0}function yg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,j=0,k=0.0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0;e=i;i=i+208|0;f=e|0;g=e+72|0;j=e+136|0;k=+h[a+32>>3];if(k==0.0){h[f>>3]=+h[a+40>>3];h[f+8>>3]=+h[a+48>>3];h[f+16>>3]=+h[a+56>>3];h[f+24>>3]=+h[a+64>>3];h[f+32>>3]=+h[a+72>>3];h[f+40>>3]=+h[a+80>>3];h[f+48>>3]=+h[a+88>>3];h[f+56>>3]=+h[a+96>>3];h[f+64>>3]=+h[a+104>>3];l=vf(f,b,c,d)|0;i=e;return l|0}else{m=+h[a+16>>3];n=+h[a>>3];o=(+h[c>>3]-m)/n;p=+h[a+24>>3];q=+h[a+8>>3];r=(+h[c+8>>3]-p)/q;s=k*(o*o+r*r)+1.0;h[g>>3]=m+n*(o/s);h[g+8>>3]=p+r/s*q;s=(+h[c+16>>3]-m)/n;r=(+h[c+24>>3]-p)/q;o=k*(s*s+r*r)+1.0;h[g+16>>3]=m+n*(s/o);h[g+24>>3]=p+r/o*q;o=(+h[c+32>>3]-m)/n;r=(+h[c+40>>3]-p)/q;s=k*(o*o+r*r)+1.0;h[g+32>>3]=m+n*(o/s);h[g+40>>3]=p+r/s*q;s=(+h[c+48>>3]-m)/n;r=(+h[c+56>>3]-p)/q;o=k*(s*s+r*r)+1.0;h[g+48>>3]=m+n*(s/o);h[g+56>>3]=p+r/o*q;h[j>>3]=+h[a+40>>3];h[j+8>>3]=+h[a+48>>3];h[j+16>>3]=+h[a+56>>3];h[j+24>>3]=+h[a+64>>3];h[j+32>>3]=+h[a+72>>3];h[j+40>>3]=+h[a+80>>3];h[j+48>>3]=+h[a+88>>3];h[j+56>>3]=+h[a+96>>3];h[j+64>>3]=+h[a+104>>3];l=vf(j,b,g|0,d)|0;i=e;return l|0}return 0}function zg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;i=i+8|0;e=d|0;f=a+4|0;g=c[f>>2]|0;do{if((g|0)==0){h=a+4|0;j=h;c[e>>2]=j;k=h|0;l=j}else{j=c[b>>2]|0;h=g;while(1){m=c[h+16>>2]|0;if((j|0)<(m|0)){n=h|0;o=c[n>>2]|0;if((o|0)==0){p=5;break}else{h=o;continue}}if((m|0)>=(j|0)){p=9;break}q=h+4|0;m=c[q>>2]|0;if((m|0)==0){p=8;break}else{h=m}}if((p|0)==5){c[e>>2]=h;k=n;l=h;break}else if((p|0)==8){c[e>>2]=h;k=q;l=h;break}else if((p|0)==9){c[e>>2]=h;k=e;l=h;break}}}while(0);e=c[k>>2]|0;if((e|0)!=0){r=e;s=r+20|0;i=d;return s|0}e=qq(24)|0;p=e+16|0;if((p|0)!=0){c[p>>2]=c[b>>2]}b=e+20|0;if((b|0)!=0){c[b>>2]=0}b=e;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=l;c[k>>2]=b;l=a|0;p=c[c[l>>2]>>2]|0;if((p|0)==0){t=b}else{c[l>>2]=p;t=c[k>>2]|0}Cg(c[f>>2]|0,t);t=a+8|0;c[t>>2]=(c[t>>2]|0)+1;r=e;s=r+20|0;i=d;return s|0}function Ag(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=b|0;e=b+4|0;f=c[d>>2]|0;g=c[e>>2]|0;h[a>>3]=+h[f>>3]*+h[g>>3]+ +h[f+32>>3]*+h[g+8>>3]+ +h[f+64>>3]*+h[g+16>>3]+ +h[f+96>>3]*+h[g+24>>3];Bg(a,b,0);g=c[d>>2]|0;f=c[e>>2]|0;h[a+32>>3]=+h[g>>3]*+h[f+32>>3]+ +h[g+32>>3]*+h[f+40>>3]+ +h[g+64>>3]*+h[f+48>>3]+ +h[g+96>>3]*+h[f+56>>3];Bg(a,b,1);f=c[d>>2]|0;g=c[e>>2]|0;h[a+64>>3]=+h[f>>3]*+h[g+64>>3]+ +h[f+32>>3]*+h[g+72>>3]+ +h[f+64>>3]*+h[g+80>>3]+ +h[f+96>>3]*+h[g+88>>3];Bg(a,b,2);g=c[d>>2]|0;d=c[e>>2]|0;h[a+96>>3]=+h[g>>3]*+h[d+96>>3]+ +h[g+32>>3]*+h[d+104>>3]+ +h[g+64>>3]*+h[d+112>>3]+ +h[g+96>>3]*+h[d+120>>3];Bg(a,b,3);return}function Bg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,i=0,j=0,k=0;e=b|0;f=c[e>>2]|0;g=b+4|0;b=c[g>>2]|0;i=d<<2;d=i|1;j=i|2;k=i|3;h[a+(d<<3)>>3]=+h[f+8>>3]*+h[b+(i<<3)>>3]+ +h[f+40>>3]*+h[b+(d<<3)>>3]+ +h[f+72>>3]*+h[b+(j<<3)>>3]+ +h[f+104>>3]*+h[b+(k<<3)>>3];b=c[e>>2]|0;f=c[g>>2]|0;h[a+(j<<3)>>3]=+h[b+16>>3]*+h[f+(i<<3)>>3]+ +h[b+48>>3]*+h[f+(d<<3)>>3]+ +h[b+80>>3]*+h[f+(j<<3)>>3]+ +h[b+112>>3]*+h[f+(k<<3)>>3];f=c[e>>2]|0;e=c[g>>2]|0;h[a+(k<<3)>>3]=+h[f+24>>3]*+h[e+(i<<3)>>3]+ +h[f+56>>3]*+h[e+(d<<3)>>3]+ +h[f+88>>3]*+h[e+(j<<3)>>3]+ +h[f+120>>3]*+h[e+(k<<3)>>3];return}function Cg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=(d|0)==(b|0);a[d+12|0]=e&1;if(e){return}else{f=d}while(1){g=f+8|0;h=c[g>>2]|0;d=h+12|0;if((a[d]|0)!=0){i=37;break}j=h+8|0;k=c[j>>2]|0;e=c[k>>2]|0;if((e|0)==(h|0)){l=c[k+4>>2]|0;if((l|0)==0){i=7;break}m=l+12|0;if((a[m]|0)!=0){i=7;break}a[d]=1;a[k+12|0]=(k|0)==(b|0)|0;a[m]=1}else{if((e|0)==0){i=24;break}m=e+12|0;if((a[m]|0)!=0){i=24;break}a[d]=1;a[k+12|0]=(k|0)==(b|0)|0;a[m]=1}if((k|0)==(b|0)){i=37;break}else{f=k}}if((i|0)==7){if((c[h>>2]|0)==(f|0)){n=h;o=k;p=h}else{b=h+4|0;m=c[b>>2]|0;d=m|0;e=c[d>>2]|0;c[b>>2]=e;if((e|0)==0){q=k}else{c[e+8>>2]=h;q=c[j>>2]|0}e=m+8|0;c[e>>2]=q;q=c[j>>2]|0;b=q|0;if((c[b>>2]|0)==(h|0)){c[b>>2]=m}else{c[q+4>>2]=m}c[d>>2]=h;c[j>>2]=m;d=c[e>>2]|0;n=m;o=d;p=c[d>>2]|0}a[n+12|0]=1;a[o+12|0]=0;n=p+4|0;d=c[n>>2]|0;c[o>>2]=d;if((d|0)!=0){c[d+8>>2]=o}d=o+8|0;c[p+8>>2]=c[d>>2];m=c[d>>2]|0;e=m|0;if((c[e>>2]|0)==(o|0)){c[e>>2]=p}else{c[m+4>>2]=p}c[n>>2]=o;c[d>>2]=p;return}else if((i|0)==24){p=h|0;if((c[p>>2]|0)==(f|0)){d=f+4|0;o=c[d>>2]|0;c[p>>2]=o;if((o|0)==0){r=k}else{c[o+8>>2]=h;r=c[j>>2]|0}c[g>>2]=r;r=c[j>>2]|0;o=r|0;if((c[o>>2]|0)==(h|0)){c[o>>2]=f}else{c[r+4>>2]=f}c[d>>2]=h;c[j>>2]=f;s=f;t=c[g>>2]|0}else{s=h;t=k}a[s+12|0]=1;a[t+12|0]=0;s=t+4|0;k=c[s>>2]|0;h=k|0;g=c[h>>2]|0;c[s>>2]=g;if((g|0)!=0){c[g+8>>2]=t}g=t+8|0;c[k+8>>2]=c[g>>2];s=c[g>>2]|0;f=s|0;if((c[f>>2]|0)==(t|0)){c[f>>2]=k}else{c[s+4>>2]=k}c[h>>2]=t;c[g>>2]=k;return}else if((i|0)==37){return}}function Dg(a){a=a|0;c[a>>2]=11416;Fg(a+560|0,c[a+564>>2]|0);Eg(a+548|0,c[a+552>>2]|0);cf(a+152|0);sq(a);return}function Eg(a,b){a=a|0;b=b|0;if((b|0)==0){return}else{Eg(a,c[b>>2]|0);Eg(a,c[b+4>>2]|0);kq(b);return}}function Fg(a,b){a=a|0;b=b|0;if((b|0)==0){return}else{Fg(a,c[b>>2]|0);Fg(a,c[b+4>>2]|0);sq(b);return}}function Gg(){fe(17328);c[4338]=11416;ce(17360);a[17488]=1;c[4373]=0;a[17496]=0;af(17504);c[4474]=0;c[4476]=0;c[4477]=0;c[4475]=17904;c[4479]=0;c[4480]=0;c[4478]=17916;h[2213]=-.5;h[2214]=-.5;h[2215]=0.0;h[2216]=1.5;h[2217]=-.5;h[2218]=0.0;h[2219]=1.5;h[2220]=1.5;h[2221]=0.0;h[2222]=-.5;h[2223]=1.5;h[2224]=0.0;h[2225]=-.5;h[2226]=-.5;h[2227]=2.0;h[2228]=1.5;h[2229]=-.5;h[2230]=2.0;h[2231]=1.5;h[2232]=1.5;h[2233]=2.0;h[2234]=-.5;h[2235]=1.5;h[2236]=2.0;eb(242,17352,t|0)|0;return}function Hg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;e=a;a=b;a:while(1){b=a;f=a-4|0;g=e;b:while(1){h=g;i=b-h|0;j=i>>2;switch(j|0){case 5:{k=26;break a;break};case 2:{k=4;break a;break};case 3:{k=6;break a;break};case 4:{k=14;break a;break};case 0:case 1:{k=83;break a;break};default:{}}if((i|0)<124){k=28;break a}l=(j|0)/2|0;m=g+(l<<2)|0;do{if((i|0)>3996){n=(j|0)/4|0;o=ig(g,g+(n<<2)|0,m,g+(n+l<<2)|0,f,0)|0}else{n=c[m>>2]|0;p=c[g>>2]|0;q=c[f>>2]|0;r=(q|0)<(n|0);if((n|0)>=(p|0)){if(!r){o=0;break}c[m>>2]=q;c[f>>2]=n;s=c[m>>2]|0;t=c[g>>2]|0;if((s|0)>=(t|0)){o=1;break}c[g>>2]=s;c[m>>2]=t;o=2;break}if(r){c[g>>2]=q;c[f>>2]=p;o=1;break}c[g>>2]=n;c[m>>2]=p;n=c[f>>2]|0;if((n|0)>=(p|0)){o=1;break}c[m>>2]=n;c[f>>2]=p;o=2}}while(0);l=c[g>>2]|0;j=c[m>>2]|0;do{if((l|0)<(j|0)){u=f;v=o}else{i=f;while(1){w=i-4|0;if((g|0)==(w|0)){break}x=c[w>>2]|0;if((x|0)<(j|0)){k=66;break}else{i=w}}if((k|0)==66){k=0;c[g>>2]=x;c[w>>2]=l;u=w;v=o+1|0;break}i=g+4|0;p=c[f>>2]|0;if((l|0)<(p|0)){y=i}else{n=i;while(1){if((n|0)==(f|0)){k=83;break a}z=c[n>>2]|0;A=n+4|0;if((l|0)<(z|0)){break}else{n=A}}c[n>>2]=p;c[f>>2]=z;y=A}if((y|0)==(f|0)){k=83;break a}else{B=f;C=y}while(1){i=c[g>>2]|0;q=C;while(1){D=c[q>>2]|0;E=q+4|0;if((i|0)<(D|0)){F=B;break}else{q=E}}do{F=F-4|0;G=c[F>>2]|0;}while((i|0)<(G|0));if(!(q>>>0<F>>>0)){g=q;continue b}c[q>>2]=G;c[F>>2]=D;B=F;C=E}}}while(0);l=g+4|0;c:do{if(l>>>0<u>>>0){j=u;p=l;n=v;i=m;while(1){r=c[i>>2]|0;t=p;while(1){H=c[t>>2]|0;I=t+4|0;if((H|0)<(r|0)){t=I}else{J=j;break}}do{J=J-4|0;K=c[J>>2]|0;}while((K|0)>=(r|0));if(t>>>0>J>>>0){L=t;M=n;N=i;break c}c[t>>2]=K;c[J>>2]=H;j=J;p=I;n=n+1|0;i=(i|0)==(t|0)?J:i}}else{L=l;M=v;N=m}}while(0);do{if((L|0)==(N|0)){O=M}else{m=c[N>>2]|0;l=c[L>>2]|0;if((m|0)>=(l|0)){O=M;break}c[L>>2]=m;c[N>>2]=l;O=M+1|0}}while(0);if((O|0)==0){P=Ig(g,L,0)|0;l=L+4|0;if(Ig(l,a,0)|0){k=78;break}if(P){g=l;continue}}l=L;if((l-h|0)>=(b-l|0)){k=82;break}Hg(g,L,d);g=L+4|0}if((k|0)==78){k=0;if(P){k=83;break}else{e=g;a=L;continue}}else if((k|0)==82){k=0;Hg(L+4|0,a,d);e=g;a=L;continue}}if((k|0)==4){L=c[f>>2]|0;e=c[g>>2]|0;if((L|0)>=(e|0)){return}c[g>>2]=L;c[f>>2]=e;return}else if((k|0)==6){e=g+4|0;L=c[e>>2]|0;d=c[g>>2]|0;P=c[f>>2]|0;O=(P|0)<(L|0);if((L|0)>=(d|0)){if(!O){return}c[e>>2]=P;c[f>>2]=L;M=c[e>>2]|0;N=c[g>>2]|0;if((M|0)>=(N|0)){return}c[g>>2]=M;c[e>>2]=N;return}if(O){c[g>>2]=P;c[f>>2]=d;return}c[g>>2]=L;c[e>>2]=d;L=c[f>>2]|0;if((L|0)>=(d|0)){return}c[e>>2]=L;c[f>>2]=d;return}else if((k|0)==14){d=g+4|0;L=g+8|0;e=c[d>>2]|0;P=c[g>>2]|0;O=c[L>>2]|0;N=(O|0)<(e|0);do{if((e|0)<(P|0)){if(N){c[g>>2]=O;c[L>>2]=P;Q=P;break}c[g>>2]=e;c[d>>2]=P;if((O|0)>=(P|0)){Q=O;break}c[d>>2]=O;c[L>>2]=P;Q=P}else{if(!N){Q=O;break}c[d>>2]=O;c[L>>2]=e;if((O|0)>=(P|0)){Q=e;break}c[g>>2]=O;c[d>>2]=P;Q=e}}while(0);e=c[f>>2]|0;if((e|0)>=(Q|0)){return}c[L>>2]=e;c[f>>2]=Q;Q=c[L>>2]|0;e=c[d>>2]|0;if((Q|0)>=(e|0)){return}c[d>>2]=Q;c[L>>2]=e;e=c[g>>2]|0;if((Q|0)>=(e|0)){return}c[g>>2]=Q;c[d>>2]=e;return}else if((k|0)==26){ig(g,g+4|0,g+8|0,g+12|0,f,0)|0;return}else if((k|0)==28){f=g+8|0;e=g+4|0;d=c[e>>2]|0;Q=c[g>>2]|0;L=c[f>>2]|0;P=(L|0)<(d|0);do{if((d|0)<(Q|0)){if(P){c[g>>2]=L;c[f>>2]=Q;R=Q;break}c[g>>2]=d;c[e>>2]=Q;if((L|0)>=(Q|0)){R=L;break}c[e>>2]=L;c[f>>2]=Q;R=Q}else{if(!P){R=L;break}c[e>>2]=L;c[f>>2]=d;if((L|0)>=(Q|0)){R=d;break}c[g>>2]=L;c[e>>2]=Q;R=d}}while(0);d=g+12|0;if((d|0)==(a|0)){return}else{S=f;T=d;U=R}while(1){R=c[T>>2]|0;if((R|0)<(U|0)){d=S;f=T;Q=U;while(1){c[f>>2]=Q;if((d|0)==(g|0)){V=g;break}e=d-4|0;L=c[e>>2]|0;if((R|0)<(L|0)){f=d;d=e;Q=L}else{V=d;break}}c[V>>2]=R}d=T+4|0;if((d|0)==(a|0)){break}Q=c[T>>2]|0;S=T;T=d;U=Q}return}else if((k|0)==83){return}}function Ig(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;switch(b-a>>2|0){case 3:{d=a+4|0;e=b-4|0;f=c[d>>2]|0;g=c[a>>2]|0;h=c[e>>2]|0;i=(h|0)<(f|0);if((f|0)>=(g|0)){if(!i){j=1;return j|0}c[d>>2]=h;c[e>>2]=f;k=c[d>>2]|0;l=c[a>>2]|0;if((k|0)>=(l|0)){j=1;return j|0}c[a>>2]=k;c[d>>2]=l;j=1;return j|0}if(i){c[a>>2]=h;c[e>>2]=g;j=1;return j|0}c[a>>2]=f;c[d>>2]=g;f=c[e>>2]|0;if((f|0)>=(g|0)){j=1;return j|0}c[d>>2]=f;c[e>>2]=g;j=1;return j|0};case 5:{ig(a,a+4|0,a+8|0,a+12|0,b-4|0,0)|0;j=1;return j|0};case 2:{g=b-4|0;e=c[g>>2]|0;f=c[a>>2]|0;if((e|0)>=(f|0)){j=1;return j|0}c[a>>2]=e;c[g>>2]=f;j=1;return j|0};case 4:{f=a+4|0;g=a+8|0;e=b-4|0;d=c[f>>2]|0;h=c[a>>2]|0;i=c[g>>2]|0;l=(i|0)<(d|0);do{if((d|0)<(h|0)){if(l){c[a>>2]=i;c[g>>2]=h;m=h;break}c[a>>2]=d;c[f>>2]=h;if((i|0)>=(h|0)){m=i;break}c[f>>2]=i;c[g>>2]=h;m=h}else{if(!l){m=i;break}c[f>>2]=i;c[g>>2]=d;if((i|0)>=(h|0)){m=d;break}c[a>>2]=i;c[f>>2]=h;m=d}}while(0);d=c[e>>2]|0;if((d|0)>=(m|0)){j=1;return j|0}c[g>>2]=d;c[e>>2]=m;m=c[g>>2]|0;e=c[f>>2]|0;if((m|0)>=(e|0)){j=1;return j|0}c[f>>2]=m;c[g>>2]=e;e=c[a>>2]|0;if((m|0)>=(e|0)){j=1;return j|0}c[a>>2]=m;c[f>>2]=e;j=1;return j|0};case 0:case 1:{j=1;return j|0};default:{e=a+8|0;f=a+4|0;m=c[f>>2]|0;g=c[a>>2]|0;d=c[e>>2]|0;h=(d|0)<(m|0);do{if((m|0)<(g|0)){if(h){c[a>>2]=d;c[e>>2]=g;n=g;break}c[a>>2]=m;c[f>>2]=g;if((d|0)>=(g|0)){n=d;break}c[f>>2]=d;c[e>>2]=g;n=g}else{if(!h){n=d;break}c[f>>2]=d;c[e>>2]=m;if((d|0)>=(g|0)){n=m;break}c[a>>2]=d;c[f>>2]=g;n=m}}while(0);m=a+12|0;if((m|0)==(b|0)){j=1;return j|0}else{o=e;p=0;q=m;r=n}while(1){n=c[q>>2]|0;if((n|0)<(r|0)){m=o;e=q;g=r;while(1){c[e>>2]=g;if((m|0)==(a|0)){s=a;break}f=m-4|0;d=c[f>>2]|0;if((n|0)<(d|0)){e=m;m=f;g=d}else{s=m;break}}c[s>>2]=n;m=p+1|0;if((m|0)==8){break}else{t=m}}else{t=p}m=q+4|0;if((m|0)==(b|0)){j=1;u=41;break}g=c[q>>2]|0;o=q;p=t;q=m;r=g}if((u|0)==41){return j|0}j=(q+4|0)==(b|0);return j|0}}return 0}function Jg(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+32|0;d=b|0;e=b+8|0;f=b+16|0;g=b+24|0;h=c[o>>2]|0;dh(20800,h,20928);c[5448]=10540;c[5450]=10560;c[5449]=0;hi(21800,20800);c[5468]=0;c[5469]=-1;j=c[s>>2]|0;c[5176]=10320;vn(20708);Kq(20712,0,24)|0;c[5176]=10688;c[5184]=j;wn(g,20708);k=yn(g,21128)|0;l=k;xn(g);c[5185]=l;c[5186]=20936;a[20748]=(wc[c[(c[k>>2]|0)+28>>2]&255](l)|0)&1;c[5382]=10444;c[5383]=10464;hi(21532,20704);c[5401]=0;c[5402]=-1;l=c[r>>2]|0;c[5188]=10320;vn(20756);Kq(20760,0,24)|0;c[5188]=10688;c[5196]=l;wn(f,20756);k=yn(f,21128)|0;g=k;xn(f);c[5197]=g;c[5198]=20944;a[20796]=(wc[c[(c[k>>2]|0)+28>>2]&255](g)|0)&1;c[5426]=10444;c[5427]=10464;hi(21708,20752);c[5445]=0;c[5446]=-1;g=c[(c[(c[5426]|0)-12>>2]|0)+21728>>2]|0;c[5404]=10444;c[5405]=10464;hi(21620,g);c[5423]=0;c[5424]=-1;c[(c[(c[5448]|0)-12>>2]|0)+21864>>2]=21528;g=(c[(c[5426]|0)-12>>2]|0)+21708|0;c[g>>2]=c[g>>2]|8192;c[(c[(c[5426]|0)-12>>2]|0)+21776>>2]=21528;Rg(20648,h,20952);c[5360]=10492;c[5362]=10512;c[5361]=0;hi(21448,20648);c[5380]=0;c[5381]=-1;c[5138]=10248;vn(20556);Kq(20560,0,24)|0;c[5138]=10616;c[5146]=j;wn(e,20556);j=yn(e,21120)|0;h=j;xn(e);c[5147]=h;c[5148]=20960;a[20596]=(wc[c[(c[j>>2]|0)+28>>2]&255](h)|0)&1;c[5290]=10396;c[5291]=10416;hi(21164,20552);c[5309]=0;c[5310]=-1;c[5150]=10248;vn(20604);Kq(20608,0,24)|0;c[5150]=10616;c[5158]=l;wn(d,20604);l=yn(d,21120)|0;h=l;xn(d);c[5159]=h;c[5160]=20968;a[20644]=(wc[c[(c[l>>2]|0)+28>>2]&255](h)|0)&1;c[5334]=10396;c[5335]=10416;hi(21340,20600);c[5353]=0;c[5354]=-1;h=c[(c[(c[5334]|0)-12>>2]|0)+21360>>2]|0;c[5312]=10396;c[5313]=10416;hi(21252,h);c[5331]=0;c[5332]=-1;c[(c[(c[5360]|0)-12>>2]|0)+21512>>2]=21160;h=(c[(c[5334]|0)-12>>2]|0)+21340|0;c[h>>2]=c[h>>2]|8192;c[(c[(c[5334]|0)-12>>2]|0)+21408>>2]=21160;i=b;return}function Kg(a){a=a|0;Pi(21528)|0;Pi(21616)|0;Wi(21160)|0;Wi(21248)|0;return}function Lg(a){a=a|0;c[a>>2]=10248;xn(a+4|0);return}function Mg(a){a=a|0;c[a>>2]=10248;xn(a+4|0);sq(a);return}function Ng(b,d){b=b|0;d=d|0;var e=0;wc[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=yn(d,21120)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(wc[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function Og(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=xc[c[(c[a>>2]|0)+20>>2]&31](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((Na(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=5;break}if((l|0)==2){m=-1;n=5;break}else if((l|0)!=1){n=4;break}}if((n|0)==4){m=((La(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==5){i=b;return m|0}return 0}function Pg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if((a[b+44|0]|0)!=0){f=Na(d|0,4,e|0,c[b+32>>2]|0)|0;return f|0}g=b;if((e|0)>0){h=d;i=0}else{f=0;return f|0}while(1){if((Fc[c[(c[g>>2]|0)+52>>2]&63](b,c[h>>2]|0)|0)==-1){f=i;j=6;break}d=i+1|0;if((d|0)<(e|0)){h=h+4|0;i=d}else{f=d;j=6;break}}if((j|0)==6){return f|0}return 0}function Qg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;a:do{if(!k){c[g>>2]=d;if((a[b+44|0]|0)!=0){if((Na(g|0,4,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+4|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=Lc[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=12;break}if((v|0)==3){w=7;break}u=(v|0)==1;if(!(v>>>0<2>>>0)){l=-1;w=12;break}v=(c[h>>2]|0)-r|0;if((Na(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=12;break}if(u){t=u?c[j>>2]|0:t}else{break a}}if((w|0)==7){if((Na(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==12){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function Rg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=10248;j=b+4|0;vn(j);Kq(b+8|0,0,24)|0;c[h>>2]=11016;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;wn(g,j);j=yn(g,21120)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=wc[c[(c[j>>2]|0)+24>>2]&255](e)|0;e=c[d>>2]|0;a[b+53|0]=(wc[c[(c[e>>2]|0)+28>>2]&255](e)|0)&1;if((c[h>>2]|0)<=8){xn(g);i=f;return}Gm(112);xn(g);i=f;return}function Sg(a){a=a|0;c[a>>2]=10248;xn(a+4|0);return}function Tg(a){a=a|0;c[a>>2]=10248;xn(a+4|0);sq(a);return}function Ug(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=yn(d,21120)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=wc[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(wc[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}Gm(112);return}function Vg(a){a=a|0;return Yg(a,0)|0}function Wg(a){a=a|0;return Yg(a,1)|0}function Xg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]|0)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;a:do{if(l){c[h>>2]=c[n>>2];o=c[b+36>>2]|0;p=f|0;q=Lc[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+4|0,j,p,f+8|0,g)|0;if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}else if((q|0)==3){a[p]=c[n>>2];c[g>>2]=f+1}q=b+32|0;while(1){o=c[g>>2]|0;if(!(o>>>0>p>>>0)){break a}r=o-1|0;c[g>>2]=r;if((Ub(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function Yg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;if((a[k]|0)!=0){l=b+48|0;m=c[l>>2]|0;if(!d){n=m;i=e;return n|0}c[l>>2]=-1;a[k]=0;n=m;i=e;return n|0}m=c[b+44>>2]|0;k=(m|0)>1?m:1;a:do{if((k|0)>0){m=b+32|0;l=0;while(1){o=cb(c[m>>2]|0)|0;if((o|0)==-1){n=-1;break}a[f+l|0]=o;l=l+1|0;if((l|0)>=(k|0)){break a}}i=e;return n|0}}while(0);b:do{if((a[b+53|0]|0)==0){l=b+40|0;m=b+36|0;o=f|0;p=g+4|0;q=b+32|0;r=k;while(1){s=c[l>>2]|0;t=s;u=c[t>>2]|0;v=c[t+4>>2]|0;t=c[m>>2]|0;w=f+r|0;x=Lc[c[(c[t>>2]|0)+16>>2]&31](t,s,o,w,h,g,p,j)|0;if((x|0)==3){y=14;break}else if((x|0)==2){n=-1;y=22;break}else if((x|0)!=1){z=r;break b}x=c[l>>2]|0;c[x>>2]=u;c[x+4>>2]=v;if((r|0)==8){n=-1;y=22;break}v=cb(c[q>>2]|0)|0;if((v|0)==-1){n=-1;y=22;break}a[w]=v;r=r+1|0}if((y|0)==14){c[g>>2]=a[o]|0;z=r;break}else if((y|0)==22){i=e;return n|0}}else{c[g>>2]=a[f|0]|0;z=k}}while(0);if(d){d=c[g>>2]|0;c[b+48>>2]=d;n=d;i=e;return n|0}d=b+32|0;b=z;while(1){if((b|0)<=0){break}z=b-1|0;if((Ub(a[f+z|0]|0,c[d>>2]|0)|0)==-1){n=-1;y=22;break}else{b=z}}if((y|0)==22){i=e;return n|0}n=c[g>>2]|0;i=e;return n|0}function Zg(a){a=a|0;c[a>>2]=10320;xn(a+4|0);return}function _g(a){a=a|0;c[a>>2]=10320;xn(a+4|0);sq(a);return}function $g(b,d){b=b|0;d=d|0;var e=0;wc[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=yn(d,21128)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(wc[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function ah(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=xc[c[(c[a>>2]|0)+20>>2]&31](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((Na(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=5;break}if((l|0)==2){m=-1;n=5;break}else if((l|0)!=1){n=4;break}}if((n|0)==4){m=((La(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==5){i=b;return m|0}return 0}function bh(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;if((a[b+44|0]|0)!=0){g=Na(e|0,1,f|0,c[b+32>>2]|0)|0;return g|0}h=b;if((f|0)>0){i=e;j=0}else{g=0;return g|0}while(1){if((Fc[c[(c[h>>2]|0)+52>>2]&63](b,d[i]|0)|0)==-1){g=j;k=6;break}e=j+1|0;if((e|0)<(f|0)){i=i+1|0;j=e}else{g=e;k=6;break}}if((k|0)==6){return g|0}return 0}function ch(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;a:do{if(!k){a[g]=d;if((a[b+44|0]|0)!=0){if((Na(g|0,1,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+1|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=Lc[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=12;break}if((v|0)==3){w=7;break}u=(v|0)==1;if(!(v>>>0<2>>>0)){l=-1;w=12;break}v=(c[h>>2]|0)-r|0;if((Na(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=12;break}if(u){t=u?c[j>>2]|0:t}else{break a}}if((w|0)==7){if((Na(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==12){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function dh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+8|0;g=f|0;h=b|0;c[h>>2]=10320;j=b+4|0;vn(j);Kq(b+8|0,0,24)|0;c[h>>2]=11088;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;wn(g,j);j=yn(g,21128)|0;e=j;d=b+36|0;c[d>>2]=e;h=b+44|0;c[h>>2]=wc[c[(c[j>>2]|0)+24>>2]&255](e)|0;e=c[d>>2]|0;a[b+53|0]=(wc[c[(c[e>>2]|0)+28>>2]&255](e)|0)&1;if((c[h>>2]|0)<=8){xn(g);i=f;return}Gm(112);xn(g);i=f;return}function eh(a){a=a|0;c[a>>2]=10320;xn(a+4|0);return}function fh(a){a=a|0;c[a>>2]=10320;xn(a+4|0);sq(a);return}function gh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=yn(d,21128)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=wc[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(wc[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}Gm(112);return}function hh(a){a=a|0;return kh(a,0)|0}function ih(a){a=a|0;return kh(a,1)|0}function jh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]|0)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;a:do{if(l){a[h]=c[n>>2];o=c[b+36>>2]|0;p=f|0;q=Lc[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+1|0,j,p,f+8|0,g)|0;if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}else if((q|0)==3){a[p]=c[n>>2];c[g>>2]=f+1}q=b+32|0;while(1){o=c[g>>2]|0;if(!(o>>>0>p>>>0)){break a}r=o-1|0;c[g>>2]=r;if((Ub(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function kh(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+32|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=b+52|0;if((a[l]|0)!=0){m=b+48|0;n=c[m>>2]|0;if(!e){o=n;i=f;return o|0}c[m>>2]=-1;a[l]=0;o=n;i=f;return o|0}n=c[b+44>>2]|0;l=(n|0)>1?n:1;a:do{if((l|0)>0){n=b+32|0;m=0;while(1){p=cb(c[n>>2]|0)|0;if((p|0)==-1){o=-1;break}a[g+m|0]=p;m=m+1|0;if((m|0)>=(l|0)){break a}}i=f;return o|0}}while(0);b:do{if((a[b+53|0]|0)==0){m=b+40|0;n=b+36|0;p=g|0;q=h+1|0;r=b+32|0;s=l;while(1){t=c[m>>2]|0;u=t;v=c[u>>2]|0;w=c[u+4>>2]|0;u=c[n>>2]|0;x=g+s|0;y=Lc[c[(c[u>>2]|0)+16>>2]&31](u,t,p,x,j,h,q,k)|0;if((y|0)==3){z=14;break}else if((y|0)==2){o=-1;z=23;break}else if((y|0)!=1){A=s;break b}y=c[m>>2]|0;c[y>>2]=v;c[y+4>>2]=w;if((s|0)==8){o=-1;z=23;break}w=cb(c[r>>2]|0)|0;if((w|0)==-1){o=-1;z=23;break}a[x]=w;s=s+1|0}if((z|0)==14){a[h]=a[p]|0;A=s;break}else if((z|0)==23){i=f;return o|0}}else{a[h]=a[g|0]|0;A=l}}while(0);do{if(e){l=a[h]|0;c[b+48>>2]=l&255;B=l}else{l=b+32|0;k=A;while(1){if((k|0)<=0){z=21;break}j=k-1|0;if((Ub(d[g+j|0]|0,c[l>>2]|0)|0)==-1){o=-1;z=23;break}else{k=j}}if((z|0)==21){B=a[h]|0;break}else if((z|0)==23){i=f;return o|0}}}while(0);o=B&255;i=f;return o|0}function lh(){Jg(0);eb(178,21880,t|0)|0;return}function mh(a){a=a|0;return}function nh(a){a=a|0;var b=0;b=a+4|0;H=c[b>>2]|0,c[b>>2]=H+1,H;return}function oh(a){a=a|0;var b=0,d=0;b=a+4|0;if(((H=c[b>>2]|0,c[b>>2]=H+ -1,H)|0)!=0){d=0;return d|0}uc[c[(c[a>>2]|0)+8>>2]&511](a);d=1;return d|0}function ph(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=8432;d=a+4|0;if((d|0)==0){return}a=Lq(b|0)|0;e=rq(a+13|0)|0;c[e+4>>2]=a;c[e>>2]=a;f=e+12|0;c[d>>2]=f;c[e+8>>2]=0;Iq(f|0,b|0,a+1|0)|0;return}function qh(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=8432;b=a+4|0;d=(c[b>>2]|0)-4|0;do{if(((H=c[d>>2]|0,c[d>>2]=H+ -1,H)-1|0)<0){e=(c[b>>2]|0)-12|0;if((e|0)==0){break}tq(e)}}while(0);sq(a);return}function rh(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=8432;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((H=c[d>>2]|0,c[d>>2]=H+ -1,H)-1|0)>=0){e=a|0;return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a|0;return}tq(d);e=a|0;return}function sh(a){a=a|0;return c[a+4>>2]|0}function th(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;c[b>>2]=8368;e=b+4|0;if((e|0)==0){return}if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=Lq(f|0)|0;b=rq(d+13|0)|0;c[b+4>>2]=d;c[b>>2]=d;g=b+12|0;c[e>>2]=g;c[b+8>>2]=0;Iq(g|0,f|0,d+1|0)|0;return}function uh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=8368;d=a+4|0;if((d|0)==0){return}a=Lq(b|0)|0;e=rq(a+13|0)|0;c[e+4>>2]=a;c[e>>2]=a;f=e+12|0;c[d>>2]=f;c[e+8>>2]=0;Iq(f|0,b|0,a+1|0)|0;return}function vh(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=8368;b=a+4|0;d=(c[b>>2]|0)-4|0;do{if(((H=c[d>>2]|0,c[d>>2]=H+ -1,H)-1|0)<0){e=(c[b>>2]|0)-12|0;if((e|0)==0){break}tq(e)}}while(0);sq(a);return}function wh(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=8368;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((H=c[d>>2]|0,c[d>>2]=H+ -1,H)-1|0)>=0){e=a|0;return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a|0;return}tq(d);e=a|0;return}function xh(a){a=a|0;return c[a+4>>2]|0}function yh(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=8432;b=a+4|0;d=(c[b>>2]|0)-4|0;do{if(((H=c[d>>2]|0,c[d>>2]=H+ -1,H)-1|0)<0){e=(c[b>>2]|0)-12|0;if((e|0)==0){break}tq(e)}}while(0);sq(a);return}function zh(a){a=a|0;return}function Ah(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=d;c[a+4>>2]=b;return}function Bh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;Jc[c[(c[a>>2]|0)+12>>2]&31](f,a,b);if((c[f+4>>2]|0)!=(c[d+4>>2]|0)){g=0;i=e;return g|0}g=(c[f>>2]|0)==(c[d>>2]|0);i=e;return g|0}function Ch(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((c[b+4>>2]|0)!=(a|0)){e=0;return e|0}e=(c[b>>2]|0)==(d|0);return e|0}function Dh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;d=Qb(e|0)|0;e=Lq(d|0)|0;if(e>>>0>4294967279>>>0){Jh(0)}if(e>>>0<11>>>0){a[b]=e<<1;f=b+1|0;Iq(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=qq(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;Iq(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function Eh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+16|0;g=f|0;h=d|0;j=c[h>>2]|0;k=e;do{if((j|0)!=0){l=a[k]|0;if((l&1)==0){m=(l&255)>>>1}else{m=c[e+4>>2]|0}if((m|0)==0){n=j}else{Uh(e,4576,2)|0;n=c[h>>2]|0}l=c[d+4>>2]|0;Jc[c[(c[l>>2]|0)+24>>2]&31](g,l,n);l=g;o=a[l]|0;if((o&1)==0){p=(o&255)>>>1;q=g+1|0}else{p=c[g+4>>2]|0;q=c[g+8>>2]|0}Uh(e,q,p)|0;if((a[l]&1)==0){break}sq(c[g+8>>2]|0)}}while(0);g=b;c[g>>2]=c[k>>2];c[g+4>>2]=c[k+4>>2];c[g+8>>2]=c[k+8>>2];Kq(k|0,0,12)|0;i=f;return}function Fh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=f|0;h=f+16|0;j=Lq(e|0)|0;if(j>>>0>4294967279>>>0){Jh(0)}if(j>>>0<11>>>0){a[h]=j<<1;k=h+1|0}else{l=j+16&-16;m=qq(l)|0;c[h+8>>2]=m;c[h>>2]=l|1;c[h+4>>2]=j;k=m}Iq(k|0,e|0,j)|0;a[k+j|0]=0;Eh(g,d,h);th(b|0,g);if(!((a[g]&1)==0)){sq(c[g+8>>2]|0)}if(!((a[h]&1)==0)){sq(c[h+8>>2]|0)}c[b>>2]=10584;h=d;d=b+8|0;b=c[h+4>>2]|0;c[d>>2]=c[h>>2];c[d+4>>2]=b;i=f;return}function Gh(a){a=a|0;wh(a|0);sq(a);return}function Hh(a){a=a|0;wh(a|0);return}function Ih(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e;if((c[a>>2]|0)==1){do{Xa(20880,20856)|0;}while((c[a>>2]|0)==1)}if((c[a>>2]|0)!=0){f;return}c[a>>2]=1;g;uc[d&511](b);h;c[a>>2]=-1;i;Kb(20880)|0;return}function Jh(a){a=a|0;a=ic(8)|0;ph(a,5832);c[a>>2]=8400;Cb(a|0,14984,44)}function Kh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=d;if((a[e]&1)==0){f=b;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];return}e=c[d+8>>2]|0;f=c[d+4>>2]|0;if(f>>>0>4294967279>>>0){Jh(0)}if(f>>>0<11>>>0){a[b]=f<<1;g=b+1|0}else{d=f+16&-16;h=qq(d)|0;c[b+8>>2]=h;c[b>>2]=d|1;c[b+4>>2]=f;g=h}Iq(g|0,e|0,f)|0;a[g+f|0]=0;return}function Lh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if(e>>>0>4294967279>>>0){Jh(0)}if(e>>>0<11>>>0){a[b]=e<<1;f=b+1|0;Iq(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=qq(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;Iq(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function Mh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(d>>>0>4294967279>>>0){Jh(0)}if(d>>>0<11>>>0){a[b]=d<<1;f=b+1|0}else{g=d+16&-16;h=qq(g)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=d;f=h}Kq(f|0,e|0,d|0)|0;a[f+d|0]=0;return}function Nh(b){b=b|0;if((a[b]&1)==0){return}sq(c[b+8>>2]|0);return}function Oh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;if((b|0)==(d|0)){return b|0}e=a[d]|0;if((e&1)==0){f=(e&255)>>>1;g=d+1|0}else{f=c[d+4>>2]|0;g=c[d+8>>2]|0}d=b;e=a[d]|0;if((e&1)==0){h=10;i=e}else{e=c[b>>2]|0;h=(e&-2)-1|0;i=e&255}e=(i&1)==0;if(h>>>0<f>>>0){if(e){j=(i&255)>>>1}else{j=c[b+4>>2]|0}Vh(b,h,f-h|0,j,0,j,f,g);return b|0}if(e){k=b+1|0}else{k=c[b+8>>2]|0}Jq(k|0,g|0,f|0)|0;a[k+f|0]=0;if((a[d]&1)==0){a[d]=f<<1;return b|0}else{c[b+4>>2]=f;return b|0}return 0}function Ph(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=Lq(d|0)|0;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=(i&1)==0;if(h>>>0<e>>>0){if(g){j=(i&255)>>>1}else{j=c[b+4>>2]|0}Vh(b,h,e-h|0,j,0,j,e,d);return b|0}if(g){k=b+1|0}else{k=c[b+8>>2]|0}Jq(k|0,d|0,e|0)|0;a[k+e|0]=0;if((a[f]&1)==0){a[f]=e<<1;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function Qh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b;g=a[f]|0;h=(g&1)==0;if(h){i=(g&255)>>>1}else{i=c[b+4>>2]|0}if(i>>>0<d>>>0){Rh(b,d-i|0,e)|0;return}if(h){a[b+1+d|0]=0;a[f]=d<<1;return}else{a[(c[b+8>>2]|0)+d|0]=0;c[b+4>>2]=d;return}}function Rh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((d|0)==0){return b|0}f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}if((i&1)==0){j=(i&255)>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<d>>>0){Wh(b,h,d-h+j|0,j,j,0,0);k=a[f]|0}else{k=i}if((k&1)==0){l=b+1|0}else{l=c[b+8>>2]|0}Kq(l+j|0,e|0,d|0)|0;e=j+d|0;if((a[f]&1)==0){a[f]=e<<1}else{c[b+4>>2]=e}a[l+e|0]=0;return b|0}function Sh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(d>>>0>4294967279>>>0){Jh(0)}e=b;f=a[e]|0;if((f&1)==0){g=10;h=f}else{f=c[b>>2]|0;g=(f&-2)-1|0;h=f&255}if((h&1)==0){i=(h&255)>>>1}else{i=c[b+4>>2]|0}f=i>>>0>d>>>0?i:d;if(f>>>0<11>>>0){j=10}else{j=(f+16&-16)-1|0}if((j|0)==(g|0)){return}do{if((j|0)==10){k=b+1|0;l=c[b+8>>2]|0;m=1;n=0}else{f=j+1|0;if(j>>>0>g>>>0){o=qq(f)|0}else{o=qq(f)|0}if((h&1)==0){k=o;l=b+1|0;m=0;n=1;break}else{k=o;l=c[b+8>>2]|0;m=1;n=1;break}}}while(0);if((h&1)==0){p=(h&255)>>>1}else{p=c[b+4>>2]|0}Iq(k|0,l|0,p+1|0)|0;if(m){sq(l)}if(n){c[b>>2]=j+1|1;c[b+4>>2]=i;c[b+8>>2]=k;return}else{a[e]=i<<1;return}}function Th(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b;f=a[e]|0;g=(f&1)!=0;if(g){h=c[b+4>>2]|0;i=(c[b>>2]&-2)-1|0}else{h=(f&255)>>>1;i=10}if((h|0)==(i|0)){Wh(b,i,1,i,i,0,0);if((a[e]&1)==0){j=7}else{j=8}}else{if(g){j=8}else{j=7}}if((j|0)==7){a[e]=(h<<1)+2;k=b+1|0;l=h+1|0;m=k+h|0;a[m]=d;n=k+l|0;a[n]=0;return}else if((j|0)==8){j=c[b+8>>2]|0;e=h+1|0;c[b+4>>2]=e;k=j;l=e;m=k+h|0;a[m]=d;n=k+l|0;a[n]=0;return}}function Uh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}if((i&1)==0){j=(i&255)>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<e>>>0){Vh(b,h,e-h+j|0,j,j,0,e,d);return b|0}if((e|0)==0){return b|0}if((i&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}Iq(k+j|0,d|0,e)|0;d=j+e|0;if((a[f]&1)==0){a[f]=d<<1}else{c[b+4>>2]=d}a[k+d|0]=0;return b|0}function Vh(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((-18-d|0)>>>0<e>>>0){Jh(0)}if((a[b]&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}do{if(d>>>0<2147483623>>>0){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<11>>>0){o=11;break}o=n+16&-16}else{o=-17}}while(0);e=qq(o)|0;if((g|0)!=0){Iq(e|0,k|0,g)|0}if((i|0)!=0){Iq(e+g|0,j|0,i)|0}j=f-h|0;if((j|0)!=(g|0)){Iq(e+(i+g)|0,k+(h+g)|0,j-g|0)|0}if((d|0)==10){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}sq(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}function Wh(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((-17-d|0)>>>0<e>>>0){Jh(0)}if((a[b]&1)==0){j=b+1|0}else{j=c[b+8>>2]|0}do{if(d>>>0<2147483623>>>0){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<11>>>0){n=11;break}n=m+16&-16}else{n=-17}}while(0);e=qq(n)|0;if((g|0)!=0){Iq(e|0,j|0,g)|0}m=f-h|0;if((m|0)!=(g|0)){Iq(e+(i+g)|0,j+(h+g)|0,m-g|0)|0}if((d|0)==10){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}sq(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function Xh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(e>>>0>1073741807>>>0){Jh(0)}if(e>>>0<2>>>0){a[b]=e<<1;f=b+4|0;g=Mp(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}else{i=e+4&-4;j=qq(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=e;f=j;g=Mp(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}}function Yh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(d>>>0>1073741807>>>0){Jh(0)}if(d>>>0<2>>>0){a[b]=d<<1;f=b+4|0;g=Op(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}else{i=d+4&-4;j=qq(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=d;f=j;g=Op(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}}function Zh(b){b=b|0;if((a[b]&1)==0){return}sq(c[b+8>>2]|0);return}function _h(a,b){a=a|0;b=b|0;return $h(a,b,Lp(b)|0)|0}function $h(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=1;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=(i&1)==0;if(h>>>0<e>>>0){if(g){j=(i&255)>>>1}else{j=c[b+4>>2]|0}ci(b,h,e-h|0,j,0,j,e,d);return b|0}if(g){k=b+4|0}else{k=c[b+8>>2]|0}Np(k,d,e)|0;c[k+(e<<2)>>2]=0;if((a[f]&1)==0){a[f]=e<<1;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function ai(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(d>>>0>1073741807>>>0){Jh(0)}e=b;f=a[e]|0;if((f&1)==0){g=1;h=f}else{f=c[b>>2]|0;g=(f&-2)-1|0;h=f&255}if((h&1)==0){i=(h&255)>>>1}else{i=c[b+4>>2]|0}f=i>>>0>d>>>0?i:d;if(f>>>0<2>>>0){j=1}else{j=(f+4&-4)-1|0}if((j|0)==(g|0)){return}do{if((j|0)==1){k=b+4|0;l=c[b+8>>2]|0;m=1;n=0}else{f=(j<<2)+4|0;if(j>>>0>g>>>0){o=qq(f)|0}else{o=qq(f)|0}f=o;if((h&1)==0){k=f;l=b+4|0;m=0;n=1;break}else{k=f;l=c[b+8>>2]|0;m=1;n=1;break}}}while(0);if((h&1)==0){p=(h&255)>>>1}else{p=c[b+4>>2]|0}Mp(k,l,p+1|0)|0;if(m){sq(l)}if(n){c[b>>2]=j+1|1;c[b+4>>2]=i;c[b+8>>2]=k;return}else{a[e]=i<<1;return}}function bi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b;f=a[e]|0;g=(f&1)!=0;if(g){h=c[b+4>>2]|0;i=(c[b>>2]&-2)-1|0}else{h=(f&255)>>>1;i=1}if((h|0)==(i|0)){di(b,i,1,i,i,0,0);if((a[e]&1)==0){j=7}else{j=8}}else{if(g){j=8}else{j=7}}if((j|0)==7){a[e]=(h<<1)+2;k=b+4|0;l=h+1|0;m=k+(h<<2)|0;c[m>>2]=d;n=k+(l<<2)|0;c[n>>2]=0;return}else if((j|0)==8){j=c[b+8>>2]|0;e=h+1|0;c[b+4>>2]=e;k=j;l=e;m=k+(h<<2)|0;c[m>>2]=d;n=k+(l<<2)|0;c[n>>2]=0;return}}function ci(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((1073741806-d|0)>>>0<e>>>0){Jh(0)}if((a[b]&1)==0){k=b+4|0}else{k=c[b+8>>2]|0}do{if(d>>>0<536870887>>>0){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<2>>>0){o=2;break}o=n+4&-4}else{o=1073741807}}while(0);e=qq(o<<2)|0;if((g|0)!=0){Mp(e,k,g)|0}if((i|0)!=0){Mp(e+(g<<2)|0,j,i)|0}j=f-h|0;if((j|0)!=(g|0)){Mp(e+(i+g<<2)|0,k+(h+g<<2)|0,j-g|0)|0}if((d|0)==1){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}sq(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}function di(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((1073741807-d|0)>>>0<e>>>0){Jh(0)}if((a[b]&1)==0){j=b+4|0}else{j=c[b+8>>2]|0}do{if(d>>>0<536870887>>>0){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<2>>>0){n=2;break}n=m+4&-4}else{n=1073741807}}while(0);e=qq(n<<2)|0;if((g|0)!=0){Mp(e,j,g)|0}m=f-h|0;if((m|0)!=(g|0)){Mp(e+(i+g<<2)|0,j+(h+g<<2)|0,m-g|0)|0}if((d|0)==1){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}sq(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function ei(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;g=(c[b+24>>2]|0)==0;if(g){c[b+16>>2]=d|1}else{c[b+16>>2]=d}if(((g&1|d)&c[b+20>>2]|0)==0){i=e;return}e=ic(16)|0;do{if((a[22e3]|0)==0){if((rb(22e3)|0)==0){break}c[4982]=9944;eb(82,19928,t|0)|0}}while(0);b=Pq(19928,0,32)|0;c[f>>2]=b&0|1;c[f+4>>2]=J|0;Fh(e,f,4880);c[e>>2]=9080;Cb(e|0,15528,36)}function fi(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=9056;b=c[a+40>>2]|0;d=a+32|0;e=a+36|0;if((b|0)!=0){f=b;do{f=f-1|0;Jc[c[(c[d>>2]|0)+(f<<2)>>2]&31](0,a,c[(c[e>>2]|0)+(f<<2)>>2]|0);}while((f|0)!=0)}xn(a+28|0);kq(c[d>>2]|0);kq(c[e>>2]|0);kq(c[a+48>>2]|0);kq(c[a+60>>2]|0);return}function gi(a,b){a=a|0;b=b|0;wn(a,b+28|0);return}function hi(a,b){a=a|0;b=b|0;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;b=a+28|0;Kq(a+32|0,0,40)|0;if((b|0)==0){return}vn(b);return}function ii(a){a=a|0;c[a>>2]=10320;xn(a+4|0);sq(a);return}function ji(a){a=a|0;c[a>>2]=10320;xn(a+4|0);return}function ki(a,b){a=a|0;b=b|0;return}function li(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function mi(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function ni(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function oi(a){a=a|0;return 0}function pi(a){a=a|0;return 0}function qi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b;if((e|0)<=0){g=0;return g|0}h=b+12|0;i=b+16|0;j=d;d=0;while(1){k=c[h>>2]|0;if(k>>>0<(c[i>>2]|0)>>>0){c[h>>2]=k+1;l=a[k]|0}else{k=wc[c[(c[f>>2]|0)+40>>2]&255](b)|0;if((k|0)==-1){g=d;m=8;break}l=k&255}a[j]=l;k=d+1|0;if((k|0)<(e|0)){j=j+1|0;d=k}else{g=k;m=8;break}}if((m|0)==8){return g|0}return 0}function ri(a){a=a|0;return-1|0}function si(a){a=a|0;var b=0,e=0;if((wc[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}e=a+12|0;a=c[e>>2]|0;c[e>>2]=a+1;b=d[a]|0;return b|0}function ti(a,b){a=a|0;b=b|0;return-1|0}function ui(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=b;if((f|0)<=0){h=0;return h|0}i=b+24|0;j=b+28|0;k=0;l=e;while(1){e=c[i>>2]|0;if(e>>>0<(c[j>>2]|0)>>>0){m=a[l]|0;c[i>>2]=e+1;a[e]=m}else{if((Fc[c[(c[g>>2]|0)+52>>2]&63](b,d[l]|0)|0)==-1){h=k;n=7;break}}m=k+1|0;if((m|0)<(f|0)){k=m;l=l+1|0}else{h=m;n=7;break}}if((n|0)==7){return h|0}return 0}function vi(a,b){a=a|0;b=b|0;return-1|0}function wi(a){a=a|0;c[a>>2]=10248;xn(a+4|0);sq(a);return}function xi(a){a=a|0;c[a>>2]=10248;xn(a+4|0);return}function yi(a,b){a=a|0;b=b|0;return}function zi(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function Ai(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function Bi(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function Ci(a){a=a|0;return 0}function Di(a){a=a|0;return 0}function Ei(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+12|0;h=a+16|0;i=b;b=0;while(1){j=c[g>>2]|0;if(j>>>0<(c[h>>2]|0)>>>0){c[g>>2]=j+4;k=c[j>>2]|0}else{j=wc[c[(c[e>>2]|0)+40>>2]&255](a)|0;if((j|0)==-1){f=b;l=7;break}else{k=j}}c[i>>2]=k;j=b+1|0;if((j|0)<(d|0)){i=i+4|0;b=j}else{f=j;l=7;break}}if((l|0)==7){return f|0}return 0}function Fi(a){a=a|0;return-1|0}function Gi(a){a=a|0;var b=0,d=0;if((wc[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}d=a+12|0;a=c[d>>2]|0;c[d>>2]=a+4;b=c[a>>2]|0;return b|0}function Hi(a,b){a=a|0;b=b|0;return-1|0}function Ii(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+24|0;h=a+28|0;i=0;j=b;while(1){b=c[g>>2]|0;if(b>>>0<(c[h>>2]|0)>>>0){k=c[j>>2]|0;c[g>>2]=b+4;c[b>>2]=k}else{if((Fc[c[(c[e>>2]|0)+52>>2]&63](a,c[j>>2]|0)|0)==-1){f=i;l=8;break}}k=i+1|0;if((k|0)>=(d|0)){f=k;l=8;break}i=k;j=j+4|0}if((l|0)==8){return f|0}return 0}function Ji(a,b){a=a|0;b=b|0;return-1|0}



function Ki(a){a=a|0;fi(a+8|0);sq(a);return}function Li(a){a=a|0;fi(a+8|0);return}function Mi(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;fi(b+(d+8)|0);sq(b+d|0);return}function Ni(a){a=a|0;fi(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function Oi(d,e,f){d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+8|0;h=g|0;j=d|0;a[j]=0;d=e;k=c[(c[d>>2]|0)-12>>2]|0;l=e;e=c[l+(k+16)>>2]|0;if((e|0)!=0){ei(l+k|0,e|4);i=g;return}e=c[l+(k+72)>>2]|0;if((e|0)!=0){Pi(e)|0}do{if(!f){e=c[(c[d>>2]|0)-12>>2]|0;if((c[l+(e+4)>>2]&4096|0)==0){break}wn(h,l+(e+28)|0);e=yn(h,21432)|0;xn(h);k=e+8|0;e=c[l+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;while(1){if((e|0)==0){break}if((c[e+12>>2]|0)==(c[e+16>>2]|0)){m=(wc[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1;n=m?0:e;if((n|0)==0){break}else{o=n}}else{o=e}p=o+12|0;n=c[p>>2]|0;q=o+16|0;if((n|0)==(c[q>>2]|0)){r=(wc[c[(c[o>>2]|0)+36>>2]&255](o)|0)&255}else{r=a[n]|0}if(r<<24>>24<0){s=20;break}if((b[(c[k>>2]|0)+(r<<24>>24<<1)>>1]&8192)==0){s=20;break}n=c[p>>2]|0;if((n|0)==(c[q>>2]|0)){wc[c[(c[o>>2]|0)+40>>2]&255](o)|0;e=o;continue}else{c[p>>2]=n+1;e=o;continue}}if((s|0)==20){if((c[p>>2]|0)==(c[q>>2]|0)){e=(wc[c[(c[o>>2]|0)+36>>2]&255](o)|0)==-1;t=e?0:o}else{t=o}if((t|0)!=0){break}}e=c[(c[d>>2]|0)-12>>2]|0;ei(l+e|0,c[l+(e+16)>>2]|6)}}while(0);a[j]=(c[l+((c[(c[d>>2]|0)-12>>2]|0)+16)>>2]|0)==0|0;i=g;return}function Pi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)==0){l=g}else{Pi(k)|0;l=c[(c[f>>2]|0)-12>>2]|0}a[j]=1;k=c[h+(l+24)>>2]|0;if(!((wc[c[(c[k>>2]|0)+24>>2]&255](k)|0)==-1)){break}k=c[(c[f>>2]|0)-12>>2]|0;ei(h+k|0,c[h+(k+16)>>2]|1)}}while(0);$i(e);i=d;return b|0}function Qi(a){a=a|0;var b=0;b=a+16|0;c[b>>2]=c[b>>2]|1;if((c[a+20>>2]&1|0)==0){return}else{Ya()}}function Ri(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+48|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;Oi(h,b,0);if((a[h|0]|0)==0){i=e;return b|0}c[j>>2]=0;h=b;l=b;wn(k,l+((c[(c[h>>2]|0)-12>>2]|0)+28)|0);m=yn(k,21096)|0;n=c[(c[h>>2]|0)-12>>2]|0;o=c[(c[m>>2]|0)+32>>2]|0;c[f>>2]=c[l+(n+24)>>2];c[g>>2]=0;Cc[o&127](e+40|0,m,f,g,l+n|0,j,d);xn(k);k=c[(c[h>>2]|0)-12>>2]|0;ei(l+k|0,c[l+(k+16)>>2]|c[j>>2]);i=e;return b|0}function Si(a){a=a|0;fi(a+8|0);sq(a);return}function Ti(a){a=a|0;fi(a+8|0);return}function Ui(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;fi(b+(d+8)|0);sq(b+d|0);return}function Vi(a){a=a|0;fi(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function Wi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;if((k|0)==0){l=g}else{Wi(k)|0;l=c[(c[f>>2]|0)-12>>2]|0}a[j]=1;k=c[h+(l+24)>>2]|0;if(!((wc[c[(c[k>>2]|0)+24>>2]&255](k)|0)==-1)){break}k=c[(c[f>>2]|0)-12>>2]|0;ei(h+k|0,c[h+(k+16)>>2]|1)}}while(0);jj(e);i=d;return b|0}function Xi(a){a=a|0;fi(a+4|0);sq(a);return}function Yi(a){a=a|0;fi(a+4|0);return}function Zi(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;fi(b+(d+4)|0);sq(b+d|0);return}function _i(a){a=a|0;fi(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function $i(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(wb()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if(!((wc[c[(c[e>>2]|0)+24>>2]&255](e)|0)==-1)){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;ei(d+b|0,c[d+(b+16)>>2]|1);return}function aj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=h|0;a[l]=0;c[h+4>>2]=b;m=b;n=c[(c[m>>2]|0)-12>>2]|0;o=b;do{if((c[o+(n+16)>>2]|0)==0){p=c[o+(n+72)>>2]|0;if((p|0)==0){q=n}else{Pi(p)|0;q=c[(c[m>>2]|0)-12>>2]|0}a[l]=1;wn(j,o+(q+28)|0);p=yn(j,21080)|0;xn(j);r=c[(c[m>>2]|0)-12>>2]|0;s=c[o+(r+24)>>2]|0;t=o+(r+76)|0;u=c[t>>2]|0;if((u|0)==-1){wn(g,o+(r+28)|0);v=yn(g,21432)|0;w=Fc[c[(c[v>>2]|0)+28>>2]&63](v,32)|0;xn(g);c[t>>2]=w<<24>>24;x=w}else{x=u&255}u=c[(c[p>>2]|0)+12>>2]|0;c[f>>2]=s;Bc[u&63](k,p,f,o+r|0,x,d);if((c[k>>2]|0)!=0){break}r=c[(c[m>>2]|0)-12>>2]|0;ei(o+r|0,c[o+(r+16)>>2]|5)}}while(0);$i(h);i=e;return b|0}function bj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=h|0;a[l]=0;c[h+4>>2]=b;m=b;n=c[(c[m>>2]|0)-12>>2]|0;o=b;do{if((c[o+(n+16)>>2]|0)==0){p=c[o+(n+72)>>2]|0;if((p|0)==0){q=n}else{Pi(p)|0;q=c[(c[m>>2]|0)-12>>2]|0}a[l]=1;wn(j,o+(q+28)|0);p=yn(j,21080)|0;xn(j);r=c[(c[m>>2]|0)-12>>2]|0;s=c[o+(r+24)>>2]|0;t=o+(r+76)|0;u=c[t>>2]|0;if((u|0)==-1){wn(g,o+(r+28)|0);v=yn(g,21432)|0;w=Fc[c[(c[v>>2]|0)+28>>2]&63](v,32)|0;xn(g);c[t>>2]=w<<24>>24;x=w}else{x=u&255}u=c[(c[p>>2]|0)+16>>2]|0;c[f>>2]=s;Bc[u&63](k,p,f,o+r|0,x,d);if((c[k>>2]|0)!=0){break}r=c[(c[m>>2]|0)-12>>2]|0;ei(o+r|0,c[o+(r+16)>>2]|5)}}while(0);$i(h);i=e;return b|0}function cj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=h|0;a[l]=0;c[h+4>>2]=b;m=b;n=c[(c[m>>2]|0)-12>>2]|0;o=b;do{if((c[o+(n+16)>>2]|0)==0){p=c[o+(n+72)>>2]|0;if((p|0)==0){q=n}else{Pi(p)|0;q=c[(c[m>>2]|0)-12>>2]|0}a[l]=1;wn(j,o+(q+28)|0);p=yn(j,21080)|0;xn(j);r=c[(c[m>>2]|0)-12>>2]|0;s=c[o+(r+24)>>2]|0;t=o+(r+76)|0;u=c[t>>2]|0;if((u|0)==-1){wn(g,o+(r+28)|0);v=yn(g,21432)|0;w=Fc[c[(c[v>>2]|0)+28>>2]&63](v,32)|0;xn(g);c[t>>2]=w<<24>>24;x=w}else{x=u&255}u=c[(c[p>>2]|0)+24>>2]|0;c[f>>2]=s;Bc[u&63](k,p,f,o+r|0,x,d);if((c[k>>2]|0)!=0){break}r=c[(c[m>>2]|0)-12>>2]|0;ei(o+r|0,c[o+(r+16)>>2]|5)}}while(0);$i(h);i=e;return b|0}function dj(b,d){b=b|0;d=+d;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=h|0;a[l]=0;c[h+4>>2]=b;m=b;n=c[(c[m>>2]|0)-12>>2]|0;o=b;do{if((c[o+(n+16)>>2]|0)==0){p=c[o+(n+72)>>2]|0;if((p|0)==0){q=n}else{Pi(p)|0;q=c[(c[m>>2]|0)-12>>2]|0}a[l]=1;wn(j,o+(q+28)|0);p=yn(j,21080)|0;xn(j);r=c[(c[m>>2]|0)-12>>2]|0;s=c[o+(r+24)>>2]|0;t=o+(r+76)|0;u=c[t>>2]|0;if((u|0)==-1){wn(g,o+(r+28)|0);v=yn(g,21432)|0;w=Fc[c[(c[v>>2]|0)+28>>2]&63](v,32)|0;xn(g);c[t>>2]=w<<24>>24;x=w}else{x=u&255}u=c[(c[p>>2]|0)+32>>2]|0;c[f>>2]=s;zc[u&15](k,p,f,o+r|0,x,d);if((c[k>>2]|0)!=0){break}r=c[(c[m>>2]|0)-12>>2]|0;ei(o+r|0,c[o+(r+16)>>2]|5)}}while(0);$i(h);i=e;return b|0}function ej(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+8|0;f=e|0;g=f|0;a[g]=0;c[f+4>>2]=b;h=b;j=c[h>>2]|0;k=c[j-12>>2]|0;l=b;do{if((c[l+(k+16)>>2]|0)==0){m=c[l+(k+72)>>2]|0;if((m|0)==0){n=j;o=k}else{Pi(m)|0;m=c[h>>2]|0;n=m;o=c[m-12>>2]|0}a[g]=1;m=c[l+(o+24)>>2]|0;p=m;if((m|0)==0){q=n}else{r=m+24|0;s=c[r>>2]|0;if((s|0)!=(c[m+28>>2]|0)){c[r>>2]=s+1;a[s]=d;break}if(!((Fc[c[(c[m>>2]|0)+52>>2]&63](p,d&255)|0)==-1)){break}q=c[h>>2]|0}p=c[q-12>>2]|0;ei(l+p|0,c[l+(p+16)>>2]|1)}}while(0);$i(f);i=e;return b|0}function fj(a){a=a|0;fi(a+4|0);sq(a);return}function gj(a){a=a|0;fi(a+4|0);return}function hj(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;fi(b+(d+4)|0);sq(b+d|0);return}function ij(a){a=a|0;fi(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function jj(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(wb()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;if(!((wc[c[(c[e>>2]|0)+24>>2]&255](e)|0)==-1)){return}e=c[b>>2]|0;b=c[(c[e>>2]|0)-12>>2]|0;d=e;ei(d+b|0,c[d+(b+16)>>2]|1);return}function kj(a){a=a|0;return 5056}function lj(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)==1){Lh(a,6208,35);return}else{Dh(a,b|0,c);return}}function mj(a){a=a|0;zh(a|0);return}function nj(a){a=a|0;Hh(a|0);sq(a);return}function oj(a){a=a|0;Hh(a|0);return}function pj(a){a=a|0;fi(a);sq(a);return}function qj(a){a=a|0;zh(a|0);sq(a);return}function rj(a){a=a|0;mh(a|0);sq(a);return}function sj(a){a=a|0;mh(a|0);return}function tj(a){a=a|0;mh(a|0);return}function uj(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;a:do{if((e|0)==(f|0)){g=c}else{b=c;h=e;while(1){if((b|0)==(d|0)){i=-1;j=7;break}k=a[b]|0;l=a[h]|0;if(k<<24>>24<l<<24>>24){i=-1;j=7;break}if(l<<24>>24<k<<24>>24){i=1;j=7;break}k=b+1|0;l=h+1|0;if((l|0)==(f|0)){g=k;break a}else{b=k;h=l}}if((j|0)==7){return i|0}}}while(0);i=(g|0)!=(d|0)|0;return i|0}function vj(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=e;g=f-d|0;if(g>>>0>4294967279>>>0){Jh(b)}if(g>>>0<11>>>0){a[b]=g<<1;h=b+1|0}else{i=g+16&-16;j=qq(i)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=g;h=j}if((e|0)==(f|0)){k=h;a[k]=0;return}else{l=h;m=e}while(1){a[l]=a[m]|0;e=m+1|0;if((e|0)==(f|0)){break}else{l=l+1|0;m=e}}k=h+(f+(-d|0))|0;a[k]=0;return}function wj(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if((c|0)==(d|0)){e=0;return e|0}else{f=c;g=0}while(1){c=(a[f]|0)+(g<<4)|0;b=c&-268435456;h=(b>>>24|b)^c;c=f+1|0;if((c|0)==(d|0)){e=h;break}else{f=c;g=h}}return e|0}function xj(a){a=a|0;mh(a|0);sq(a);return}function yj(a){a=a|0;mh(a|0);return}function zj(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;a:do{if((e|0)==(f|0)){g=b}else{a=b;h=e;while(1){if((a|0)==(d|0)){i=-1;j=7;break}k=c[a>>2]|0;l=c[h>>2]|0;if((k|0)<(l|0)){i=-1;j=7;break}if((l|0)<(k|0)){i=1;j=7;break}k=a+4|0;l=h+4|0;if((l|0)==(f|0)){g=k;break a}else{a=k;h=l}}if((j|0)==7){return i|0}}}while(0);i=(g|0)!=(d|0)|0;return i|0}function Aj(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;d=e;g=f-d|0;h=g>>2;if(h>>>0>1073741807>>>0){Jh(b)}if(h>>>0<2>>>0){a[b]=g>>>1;i=b+4|0}else{g=h+4&-4;j=qq(g<<2)|0;c[b+8>>2]=j;c[b>>2]=g|1;c[b+4>>2]=h;i=j}if((e|0)==(f|0)){k=i;c[k>>2]=0;return}j=f-4+(-d|0)|0;d=i;h=e;while(1){c[d>>2]=c[h>>2];e=h+4|0;if((e|0)==(f|0)){break}else{d=d+4|0;h=e}}k=i+((j>>>2)+1<<2)|0;c[k>>2]=0;return}function Bj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((b|0)==(d|0)){e=0;return e|0}else{f=b;g=0}while(1){b=(c[f>>2]|0)+(g<<4)|0;a=b&-268435456;h=(a>>>24|a)^b;b=f+4|0;if((b|0)==(d|0)){e=h;break}else{f=b;g=h}}return e|0}function Cj(a){a=a|0;mh(a|0);sq(a);return}function Dj(a){a=a|0;mh(a|0);return}function Ej(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];Cc[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==0){a[j]=0}else if((w|0)==1){a[j]=1}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}gi(r,g);q=r|0;r=c[q>>2]|0;if(!((c[5358]|0)==-1)){c[m>>2]=21432;c[m+4>>2]=18;c[m+8>>2]=0;Ih(21432,m,116)}m=(c[5359]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;oh(c[q>>2]|0)|0;gi(s,g);n=s|0;p=c[n>>2]|0;if(!((c[5262]|0)==-1)){c[l>>2]=21048;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21048,l,116)}d=(c[5263]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){x=c[v+(d<<2)>>2]|0;if((x|0)==0){break}y=x;oh(c[n>>2]|0)|0;z=t|0;A=x;vc[c[(c[A>>2]|0)+24>>2]&127](z,y);vc[c[(c[A>>2]|0)+28>>2]&127](t+12|0,y);c[u>>2]=c[f>>2];a[j]=(Fj(e,u,z,t+24|0,o,h,1)|0)==(z|0)|0;c[b>>2]=c[e>>2];Nh(t+12|0);Nh(t|0);i=k;return}}while(0);o=ic(4)|0;Qp(o);Cb(o|0,14952,168)}}while(0);k=ic(4)|0;Qp(k);Cb(k|0,14952,168)}function Fj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;k=i;i=i+104|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=(f-e|0)/12|0;m=k|0;do{if(l>>>0>100>>>0){n=jq(l)|0;if((n|0)!=0){o=n;p=n;break}yq();o=0;p=0}else{o=m;p=0}}while(0);m=(e|0)==(f|0);if(m){q=l;r=0}else{n=l;l=0;s=o;t=e;while(1){u=a[t]|0;if((u&1)==0){v=(u&255)>>>1}else{v=c[t+4>>2]|0}if((v|0)==0){a[s]=2;w=l+1|0;x=n-1|0}else{a[s]=1;w=l;x=n}u=t+12|0;if((u|0)==(f|0)){q=x;r=w;break}else{n=x;l=w;s=s+1|0;t=u}}}t=b|0;b=d|0;d=g;s=0;w=r;r=q;a:while(1){q=c[t>>2]|0;do{if((q|0)==0){y=0}else{if((c[q+12>>2]|0)!=(c[q+16>>2]|0)){y=q;break}if((wc[c[(c[q>>2]|0)+36>>2]&255](q)|0)==-1){c[t>>2]=0;y=0;break}else{y=c[t>>2]|0;break}}}while(0);q=(y|0)==0;l=c[b>>2]|0;do{if((l|0)==0){z=0}else{if((c[l+12>>2]|0)!=(c[l+16>>2]|0)){z=l;break}if(!((wc[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1)){z=l;break}c[b>>2]=0;z=0}}while(0);A=(z|0)==0;B=c[t>>2]|0;if(!((q^A)&(r|0)!=0)){break}l=c[B+12>>2]|0;if((l|0)==(c[B+16>>2]|0)){C=(wc[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{C=a[l]|0}if(j){D=C}else{D=Fc[c[(c[d>>2]|0)+12>>2]&63](g,C)|0}l=s+1|0;if(m){s=l;w=w;r=r;continue}b:do{if(j){x=r;n=w;v=o;u=0;E=e;while(1){do{if((a[v]|0)==1){F=a[E]|0;G=(F&1)==0;if(G){H=E+1|0}else{H=c[E+8>>2]|0}if(!(D<<24>>24==(a[H+s|0]|0))){a[v]=0;I=u;J=n;K=x-1|0;break}if(G){L=(F&255)>>>1}else{L=c[E+4>>2]|0}if((L|0)!=(l|0)){I=1;J=n;K=x;break}a[v]=2;I=1;J=n+1|0;K=x-1|0}else{I=u;J=n;K=x}}while(0);F=E+12|0;if((F|0)==(f|0)){M=K;N=J;O=I;break b}x=K;n=J;v=v+1|0;u=I;E=F}}else{E=r;u=w;v=o;n=0;x=e;while(1){do{if((a[v]|0)==1){F=x;if((a[F]&1)==0){P=x+1|0}else{P=c[x+8>>2]|0}if(!(D<<24>>24==(Fc[c[(c[d>>2]|0)+12>>2]&63](g,a[P+s|0]|0)|0)<<24>>24)){a[v]=0;Q=n;R=u;S=E-1|0;break}G=a[F]|0;if((G&1)==0){T=(G&255)>>>1}else{T=c[x+4>>2]|0}if((T|0)!=(l|0)){Q=1;R=u;S=E;break}a[v]=2;Q=1;R=u+1|0;S=E-1|0}else{Q=n;R=u;S=E}}while(0);G=x+12|0;if((G|0)==(f|0)){M=S;N=R;O=Q;break b}E=S;u=R;v=v+1|0;n=Q;x=G}}}while(0);if(!O){s=l;w=N;r=M;continue}q=c[t>>2]|0;x=q+12|0;n=c[x>>2]|0;if((n|0)==(c[q+16>>2]|0)){wc[c[(c[q>>2]|0)+40>>2]&255](q)|0}else{c[x>>2]=n+1}if((M+N|0)>>>0<2>>>0){s=l;w=N;r=M;continue}else{U=N;V=o;W=e}while(1){do{if((a[V]|0)==2){n=a[W]|0;if((n&1)==0){X=(n&255)>>>1}else{X=c[W+4>>2]|0}if((X|0)==(l|0)){Y=U;break}a[V]=0;Y=U-1|0}else{Y=U}}while(0);n=W+12|0;if((n|0)==(f|0)){s=l;w=Y;r=M;continue a}else{U=Y;V=V+1|0;W=n}}}do{if((B|0)==0){Z=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){Z=B;break}if((wc[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1){c[t>>2]=0;Z=0;break}else{Z=c[t>>2]|0;break}}}while(0);t=(Z|0)==0;do{if(A){_=91}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(t){break}else{_=93;break}}if((wc[c[(c[z>>2]|0)+36>>2]&255](z)|0)==-1){c[b>>2]=0;_=91;break}else{if(t){break}else{_=93;break}}}}while(0);if((_|0)==91){if(t){_=93}}if((_|0)==93){c[h>>2]=c[h>>2]|2}c:do{if(m){_=98}else{t=o;b=e;while(1){if((a[t]|0)==2){$=b;break c}z=b+12|0;if((z|0)==(f|0)){_=98;break c}t=t+1|0;b=z}}}while(0);if((_|0)==98){c[h>>2]=c[h>>2]|4;$=f}if((p|0)==0){i=k;return $|0}kq(p);i=k;return $|0}function Gj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Hj(a,0,j,k,f,g,h);i=b;return}function Hj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==64){t=8}else if((s|0)==0){t=0}else{t=10}s=k|0;xk(m,g,s,l);g=n;Kq(g|0,0,12)|0;Qh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((wc[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((wc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){J=(C&255)>>>1;K=(C&255)>>>1}else{C=c[y>>2]|0;J=C;K=C}Qh(n,J<<1,0);if((a[g]&1)==0){L=10}else{L=(c[f>>2]&-2)-1|0}Qh(n,L,0);if((a[g]&1)==0){M=v}else{M=c[w>>2]|0}c[o>>2]=M+K;N=M}else{N=l}C=A+12|0;H=c[C>>2]|0;O=A+16|0;if((H|0)==(c[O>>2]|0)){P=(wc[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{P=a[H]|0}if((Zj(P,t,N,o,r,z,m,k,q,s)|0)!=0){F=N;G=E;break}H=c[C>>2]|0;if((H|0)==(c[O>>2]|0)){wc[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=N;u=A;continue}else{c[C>>2]=H+1;l=N;u=A;continue}}u=a[m]|0;if((u&1)==0){Q=(u&255)>>>1}else{Q=c[m+4>>2]|0}do{if((Q|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}N=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=N}}while(0);c[j>>2]=up(F,c[o>>2]|0,h,t)|0;Km(m,k,c[q>>2]|0,h);do{if((A|0)==0){R=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){R=A;break}if(!((wc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){R=A;break}c[x>>2]=0;R=0}}while(0);x=(R|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}S=b|0;c[S>>2]=R;Nh(n);Nh(m);i=d;return}if((wc[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}S=b|0;c[S>>2]=R;Nh(n);Nh(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}S=b|0;c[S>>2]=R;Nh(n);Nh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;S=b|0;c[S>>2]=R;Nh(n);Nh(m);i=d;return}function Ij(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Jj(a,0,j,k,f,g,h);i=b;return}function Jj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==64){t=8}else if((s|0)==0){t=0}else{t=10}s=k|0;xk(m,g,s,l);g=n;Kq(g|0,0,12)|0;Qh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((wc[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((wc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){K=(C&255)>>>1;L=(C&255)>>>1}else{C=c[y>>2]|0;K=C;L=C}Qh(n,K<<1,0);if((a[g]&1)==0){M=10}else{M=(c[f>>2]&-2)-1|0}Qh(n,M,0);if((a[g]&1)==0){N=v}else{N=c[w>>2]|0}c[o>>2]=N+L;O=N}else{O=l}C=A+12|0;H=c[C>>2]|0;P=A+16|0;if((H|0)==(c[P>>2]|0)){Q=(wc[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{Q=a[H]|0}if((Zj(Q,t,O,o,r,z,m,k,q,s)|0)!=0){F=O;G=E;break}H=c[C>>2]|0;if((H|0)==(c[P>>2]|0)){wc[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=O;u=A;continue}else{c[C>>2]=H+1;l=O;u=A;continue}}u=a[m]|0;if((u&1)==0){R=(u&255)>>>1}else{R=c[m+4>>2]|0}do{if((R|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}O=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=O}}while(0);r=tp(F,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=J;Km(m,k,c[q>>2]|0,h);do{if((A|0)==0){S=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){S=A;break}if(!((wc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){S=A;break}c[x>>2]=0;S=0}}while(0);x=(S|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}T=b|0;c[T>>2]=S;Nh(n);Nh(m);i=d;return}if((wc[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}T=b|0;c[T>>2]=S;Nh(n);Nh(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}T=b|0;c[T>>2]=S;Nh(n);Nh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;T=b|0;c[T>>2]=S;Nh(n);Nh(m);i=d;return}function Kj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Lj(a,0,j,k,f,g,h);i=b;return}function Lj(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;e=i;i=i+256|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=e+72|0;q=e+80|0;r=e+240|0;s=e+248|0;t=c[h+4>>2]&74;if((t|0)==8){u=16}else if((t|0)==64){u=8}else if((t|0)==0){u=0}else{u=10}t=l|0;xk(n,h,t,m);h=o;Kq(h|0,0,12)|0;Qh(o,10,0);if((a[h]&1)==0){l=o+1|0;v=l;w=l;x=o+8|0}else{l=o+8|0;v=c[l>>2]|0;w=o+1|0;x=l}c[p>>2]=v;l=q|0;c[r>>2]=l;c[s>>2]=0;y=f|0;f=g|0;g=o|0;z=o+4|0;A=a[m]|0;m=v;v=c[y>>2]|0;a:while(1){do{if((v|0)==0){B=0}else{if((c[v+12>>2]|0)!=(c[v+16>>2]|0)){B=v;break}if(!((wc[c[(c[v>>2]|0)+36>>2]&255](v)|0)==-1)){B=v;break}c[y>>2]=0;B=0}}while(0);C=(B|0)==0;D=c[f>>2]|0;do{if((D|0)==0){E=21}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(C){F=D;break}else{G=m;H=D;break a}}if((wc[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1){c[f>>2]=0;E=21;break}else{if(C){F=D;break}else{G=m;H=D;break a}}}}while(0);if((E|0)==21){E=0;if(C){G=m;H=0;break}else{F=0}}D=a[h]|0;I=(D&1)==0;if(I){J=(D&255)>>>1}else{J=c[z>>2]|0}if(((c[p>>2]|0)-m|0)==(J|0)){if(I){K=(D&255)>>>1;L=(D&255)>>>1}else{D=c[z>>2]|0;K=D;L=D}Qh(o,K<<1,0);if((a[h]&1)==0){M=10}else{M=(c[g>>2]&-2)-1|0}Qh(o,M,0);if((a[h]&1)==0){N=w}else{N=c[x>>2]|0}c[p>>2]=N+L;O=N}else{O=m}D=B+12|0;I=c[D>>2]|0;P=B+16|0;if((I|0)==(c[P>>2]|0)){Q=(wc[c[(c[B>>2]|0)+36>>2]&255](B)|0)&255}else{Q=a[I]|0}if((Zj(Q,u,O,p,s,A,n,l,r,t)|0)!=0){G=O;H=F;break}I=c[D>>2]|0;if((I|0)==(c[P>>2]|0)){wc[c[(c[B>>2]|0)+40>>2]&255](B)|0;m=O;v=B;continue}else{c[D>>2]=I+1;m=O;v=B;continue}}v=a[n]|0;if((v&1)==0){R=(v&255)>>>1}else{R=c[n+4>>2]|0}do{if((R|0)!=0){v=c[r>>2]|0;if((v-q|0)>=160){break}O=c[s>>2]|0;c[r>>2]=v+4;c[v>>2]=O}}while(0);b[k>>1]=sp(G,c[p>>2]|0,j,u)|0;Km(n,l,c[r>>2]|0,j);do{if((B|0)==0){S=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){S=B;break}if(!((wc[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1)){S=B;break}c[y>>2]=0;S=0}}while(0);y=(S|0)==0;do{if((H|0)==0){E=66}else{if((c[H+12>>2]|0)!=(c[H+16>>2]|0)){if(!y){break}T=d|0;c[T>>2]=S;Nh(o);Nh(n);i=e;return}if((wc[c[(c[H>>2]|0)+36>>2]&255](H)|0)==-1){c[f>>2]=0;E=66;break}if(!(y^(H|0)==0)){break}T=d|0;c[T>>2]=S;Nh(o);Nh(n);i=e;return}}while(0);do{if((E|0)==66){if(y){break}T=d|0;c[T>>2]=S;Nh(o);Nh(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;T=d|0;c[T>>2]=S;Nh(o);Nh(n);i=e;return}function Mj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Nj(a,0,j,k,f,g,h);i=b;return}function Nj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==64){t=8}else if((s|0)==8){t=16}else if((s|0)==0){t=0}else{t=10}s=k|0;xk(m,g,s,l);g=n;Kq(g|0,0,12)|0;Qh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((wc[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((wc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){J=(C&255)>>>1;K=(C&255)>>>1}else{C=c[y>>2]|0;J=C;K=C}Qh(n,J<<1,0);if((a[g]&1)==0){L=10}else{L=(c[f>>2]&-2)-1|0}Qh(n,L,0);if((a[g]&1)==0){M=v}else{M=c[w>>2]|0}c[o>>2]=M+K;N=M}else{N=l}C=A+12|0;H=c[C>>2]|0;O=A+16|0;if((H|0)==(c[O>>2]|0)){P=(wc[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{P=a[H]|0}if((Zj(P,t,N,o,r,z,m,k,q,s)|0)!=0){F=N;G=E;break}H=c[C>>2]|0;if((H|0)==(c[O>>2]|0)){wc[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=N;u=A;continue}else{c[C>>2]=H+1;l=N;u=A;continue}}u=a[m]|0;if((u&1)==0){Q=(u&255)>>>1}else{Q=c[m+4>>2]|0}do{if((Q|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}N=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=N}}while(0);c[j>>2]=rp(F,c[o>>2]|0,h,t)|0;Km(m,k,c[q>>2]|0,h);do{if((A|0)==0){R=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){R=A;break}if(!((wc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){R=A;break}c[x>>2]=0;R=0}}while(0);x=(R|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}S=b|0;c[S>>2]=R;Nh(n);Nh(m);i=d;return}if((wc[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}S=b|0;c[S>>2]=R;Nh(n);Nh(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}S=b|0;c[S>>2]=R;Nh(n);Nh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;S=b|0;c[S>>2]=R;Nh(n);Nh(m);i=d;return}function Oj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Pj(a,0,j,k,f,g,h);i=b;return}function Pj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==64){t=8}else if((s|0)==0){t=0}else{t=10}s=k|0;xk(m,g,s,l);g=n;Kq(g|0,0,12)|0;Qh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((wc[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((wc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){J=(C&255)>>>1;K=(C&255)>>>1}else{C=c[y>>2]|0;J=C;K=C}Qh(n,J<<1,0);if((a[g]&1)==0){L=10}else{L=(c[f>>2]&-2)-1|0}Qh(n,L,0);if((a[g]&1)==0){M=v}else{M=c[w>>2]|0}c[o>>2]=M+K;N=M}else{N=l}C=A+12|0;H=c[C>>2]|0;O=A+16|0;if((H|0)==(c[O>>2]|0)){P=(wc[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{P=a[H]|0}if((Zj(P,t,N,o,r,z,m,k,q,s)|0)!=0){F=N;G=E;break}H=c[C>>2]|0;if((H|0)==(c[O>>2]|0)){wc[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=N;u=A;continue}else{c[C>>2]=H+1;l=N;u=A;continue}}u=a[m]|0;if((u&1)==0){Q=(u&255)>>>1}else{Q=c[m+4>>2]|0}do{if((Q|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}N=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=N}}while(0);c[j>>2]=qp(F,c[o>>2]|0,h,t)|0;Km(m,k,c[q>>2]|0,h);do{if((A|0)==0){R=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){R=A;break}if(!((wc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){R=A;break}c[x>>2]=0;R=0}}while(0);x=(R|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}S=b|0;c[S>>2]=R;Nh(n);Nh(m);i=d;return}if((wc[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}S=b|0;c[S>>2]=R;Nh(n);Nh(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}S=b|0;c[S>>2]=R;Nh(n);Nh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;S=b|0;c[S>>2]=R;Nh(n);Nh(m);i=d;return}function Qj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Rj(a,0,j,k,f,g,h);i=b;return}function Rj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+256|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+32|0;m=d+40|0;n=d+56|0;o=d+72|0;p=d+80|0;q=d+240|0;r=d+248|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==64){t=8}else if((s|0)==0){t=0}else{t=10}s=k|0;xk(m,g,s,l);g=n;Kq(g|0,0,12)|0;Qh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=a[l]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=0}else{if((c[u+12>>2]|0)!=(c[u+16>>2]|0)){A=u;break}if(!((wc[c[(c[u>>2]|0)+36>>2]&255](u)|0)==-1)){A=u;break}c[x>>2]=0;A=0}}while(0);B=(A|0)==0;C=c[e>>2]|0;do{if((C|0)==0){D=21}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){if(B){E=C;break}else{F=l;G=C;break a}}if((wc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[e>>2]=0;D=21;break}else{if(B){E=C;break}else{F=l;G=C;break a}}}}while(0);if((D|0)==21){D=0;if(B){F=l;G=0;break}else{E=0}}C=a[g]|0;H=(C&1)==0;if(H){I=(C&255)>>>1}else{I=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(I|0)){if(H){K=(C&255)>>>1;L=(C&255)>>>1}else{C=c[y>>2]|0;K=C;L=C}Qh(n,K<<1,0);if((a[g]&1)==0){M=10}else{M=(c[f>>2]&-2)-1|0}Qh(n,M,0);if((a[g]&1)==0){N=v}else{N=c[w>>2]|0}c[o>>2]=N+L;O=N}else{O=l}C=A+12|0;H=c[C>>2]|0;P=A+16|0;if((H|0)==(c[P>>2]|0)){Q=(wc[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{Q=a[H]|0}if((Zj(Q,t,O,o,r,z,m,k,q,s)|0)!=0){F=O;G=E;break}H=c[C>>2]|0;if((H|0)==(c[P>>2]|0)){wc[c[(c[A>>2]|0)+40>>2]&255](A)|0;l=O;u=A;continue}else{c[C>>2]=H+1;l=O;u=A;continue}}u=a[m]|0;if((u&1)==0){R=(u&255)>>>1}else{R=c[m+4>>2]|0}do{if((R|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}O=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=O}}while(0);r=pp(F,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=J;Km(m,k,c[q>>2]|0,h);do{if((A|0)==0){S=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){S=A;break}if(!((wc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1)){S=A;break}c[x>>2]=0;S=0}}while(0);x=(S|0)==0;do{if((G|0)==0){D=66}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){if(!x){break}T=b|0;c[T>>2]=S;Nh(n);Nh(m);i=d;return}if((wc[c[(c[G>>2]|0)+36>>2]&255](G)|0)==-1){c[e>>2]=0;D=66;break}if(!(x^(G|0)==0)){break}T=b|0;c[T>>2]=S;Nh(n);Nh(m);i=d;return}}while(0);do{if((D|0)==66){if(x){break}T=b|0;c[T>>2]=S;Nh(n);Nh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;T=b|0;c[T>>2]=S;Nh(n);Nh(m);i=d;return}function Sj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Tj(a,0,j,k,f,g,h);i=b;return}function Tj(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+32|0;m=d+40|0;n=d+48|0;o=d+64|0;p=d+80|0;q=d+88|0;r=d+248|0;s=d+256|0;t=d+264|0;u=d+272|0;v=d|0;yk(n,h,v,l,m);h=o;Kq(h|0,0,12)|0;Qh(o,10,0);if((a[h]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=a[l]|0;l=a[m]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){D=x;break}if(!((wc[c[(c[x>>2]|0)+36>>2]&255](x)|0)==-1)){D=x;break}c[A>>2]=0;D=0}}while(0);E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)==0){G=17}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){H=F;break}else{I=m;J=F;break a}}if((wc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[e>>2]=0;G=17;break}else{if(E){H=F;break}else{I=m;J=F;break a}}}}while(0);if((G|0)==17){G=0;if(E){I=m;J=0;break}else{H=0}}F=a[h]|0;K=(F&1)==0;if(K){L=(F&255)>>>1}else{L=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(K){M=(F&255)>>>1;N=(F&255)>>>1}else{F=c[B>>2]|0;M=F;N=F}Qh(o,M<<1,0);if((a[h]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Qh(o,O,0);if((a[h]&1)==0){P=y}else{P=c[z>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}F=D+12|0;K=c[F>>2]|0;R=D+16|0;if((K|0)==(c[R>>2]|0)){S=(wc[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{S=a[K]|0}if((zk(S,t,u,Q,p,C,l,n,w,r,s,v)|0)!=0){I=Q;J=H;break}K=c[F>>2]|0;if((K|0)==(c[R>>2]|0)){wc[c[(c[D>>2]|0)+40>>2]&255](D)|0;m=Q;x=D;continue}else{c[F>>2]=K+1;m=Q;x=D;continue}}x=a[n]|0;if((x&1)==0){T=(x&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=Q}}while(0);g[k>>2]=+op(I,c[p>>2]|0,j);Km(n,w,c[r>>2]|0,j);do{if((D|0)==0){U=0}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){U=D;break}if(!((wc[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1)){U=D;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;do{if((J|0)==0){G=63}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;Nh(o);Nh(n);i=d;return}if((wc[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[e>>2]=0;G=63;break}if(!(A^(J|0)==0)){break}V=b|0;c[V>>2]=U;Nh(o);Nh(n);i=d;return}}while(0);do{if((G|0)==63){if(A){break}V=b|0;c[V>>2]=U;Nh(o);Nh(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;Nh(o);Nh(n);i=d;return}function Uj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Vj(a,0,j,k,f,g,h);i=b;return}function Vj(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+32|0;m=d+40|0;n=d+48|0;o=d+64|0;p=d+80|0;q=d+88|0;r=d+248|0;s=d+256|0;t=d+264|0;u=d+272|0;v=d|0;yk(n,g,v,l,m);g=o;Kq(g|0,0,12)|0;Qh(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=a[l]|0;l=a[m]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){D=x;break}if(!((wc[c[(c[x>>2]|0)+36>>2]&255](x)|0)==-1)){D=x;break}c[A>>2]=0;D=0}}while(0);E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)==0){G=17}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){H=F;break}else{I=m;J=F;break a}}if((wc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[e>>2]=0;G=17;break}else{if(E){H=F;break}else{I=m;J=F;break a}}}}while(0);if((G|0)==17){G=0;if(E){I=m;J=0;break}else{H=0}}F=a[g]|0;K=(F&1)==0;if(K){L=(F&255)>>>1}else{L=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(K){M=(F&255)>>>1;N=(F&255)>>>1}else{F=c[B>>2]|0;M=F;N=F}Qh(o,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Qh(o,O,0);if((a[g]&1)==0){P=y}else{P=c[z>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}F=D+12|0;K=c[F>>2]|0;R=D+16|0;if((K|0)==(c[R>>2]|0)){S=(wc[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{S=a[K]|0}if((zk(S,t,u,Q,p,C,l,n,w,r,s,v)|0)!=0){I=Q;J=H;break}K=c[F>>2]|0;if((K|0)==(c[R>>2]|0)){wc[c[(c[D>>2]|0)+40>>2]&255](D)|0;m=Q;x=D;continue}else{c[F>>2]=K+1;m=Q;x=D;continue}}x=a[n]|0;if((x&1)==0){T=(x&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=Q}}while(0);h[k>>3]=+np(I,c[p>>2]|0,j);Km(n,w,c[r>>2]|0,j);do{if((D|0)==0){U=0}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){U=D;break}if(!((wc[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1)){U=D;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;do{if((J|0)==0){G=63}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;Nh(o);Nh(n);i=d;return}if((wc[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[e>>2]=0;G=63;break}if(!(A^(J|0)==0)){break}V=b|0;c[V>>2]=U;Nh(o);Nh(n);i=d;return}}while(0);do{if((G|0)==63){if(A){break}V=b|0;c[V>>2]=U;Nh(o);Nh(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;Nh(o);Nh(n);i=d;return}function Wj(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];Xj(a,0,j,k,f,g,h);i=b;return}function Xj(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+32|0;m=d+40|0;n=d+48|0;o=d+64|0;p=d+80|0;q=d+88|0;r=d+248|0;s=d+256|0;t=d+264|0;u=d+272|0;v=d|0;yk(n,g,v,l,m);g=o;Kq(g|0,0,12)|0;Qh(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=a[l]|0;l=a[m]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=0}else{if((c[x+12>>2]|0)!=(c[x+16>>2]|0)){D=x;break}if(!((wc[c[(c[x>>2]|0)+36>>2]&255](x)|0)==-1)){D=x;break}c[A>>2]=0;D=0}}while(0);E=(D|0)==0;F=c[e>>2]|0;do{if((F|0)==0){G=17}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(E){H=F;break}else{I=m;J=F;break a}}if((wc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[e>>2]=0;G=17;break}else{if(E){H=F;break}else{I=m;J=F;break a}}}}while(0);if((G|0)==17){G=0;if(E){I=m;J=0;break}else{H=0}}F=a[g]|0;K=(F&1)==0;if(K){L=(F&255)>>>1}else{L=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(K){M=(F&255)>>>1;N=(F&255)>>>1}else{F=c[B>>2]|0;M=F;N=F}Qh(o,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Qh(o,O,0);if((a[g]&1)==0){P=y}else{P=c[z>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}F=D+12|0;K=c[F>>2]|0;R=D+16|0;if((K|0)==(c[R>>2]|0)){S=(wc[c[(c[D>>2]|0)+36>>2]&255](D)|0)&255}else{S=a[K]|0}if((zk(S,t,u,Q,p,C,l,n,w,r,s,v)|0)!=0){I=Q;J=H;break}K=c[F>>2]|0;if((K|0)==(c[R>>2]|0)){wc[c[(c[D>>2]|0)+40>>2]&255](D)|0;m=Q;x=D;continue}else{c[F>>2]=K+1;m=Q;x=D;continue}}x=a[n]|0;if((x&1)==0){T=(x&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=Q}}while(0);h[k>>3]=+mp(I,c[p>>2]|0,j);Km(n,w,c[r>>2]|0,j);do{if((D|0)==0){U=0}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){U=D;break}if(!((wc[c[(c[D>>2]|0)+36>>2]&255](D)|0)==-1)){U=D;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;do{if((J|0)==0){G=63}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;Nh(o);Nh(n);i=d;return}if((wc[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[e>>2]=0;G=63;break}if(!(A^(J|0)==0)){break}V=b|0;c[V>>2]=U;Nh(o);Nh(n);i=d;return}}while(0);do{if((G|0)==63){if(A){break}V=b|0;c[V>>2]=U;Nh(o);Nh(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;V=b|0;c[V>>2]=U;Nh(o);Nh(n);i=d;return}function Yj(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+272|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+48|0;n=d+64|0;o=d+72|0;p=d+88|0;q=d+96|0;r=d+256|0;s=d+264|0;Kq(m|0,0,12)|0;gi(n,g);g=n|0;n=c[g>>2]|0;if(!((c[5358]|0)==-1)){c[k>>2]=21432;c[k+4>>2]=18;c[k+8>>2]=0;Ih(21432,k,116)}k=(c[5359]|0)-1|0;t=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-t>>2>>>0>k>>>0){u=c[t+(k<<2)>>2]|0;if((u|0)==0){break}v=l|0;Hc[c[(c[u>>2]|0)+32>>2]&15](u,16744,16770,v)|0;oh(c[g>>2]|0)|0;u=o;Kq(u|0,0,12)|0;Qh(o,10,0);if((a[u]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;A=e|0;B=f|0;C=o|0;D=o+4|0;E=x;F=c[A>>2]|0;a:while(1){do{if((F|0)==0){G=0}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){G=F;break}if(!((wc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1)){G=F;break}c[A>>2]=0;G=0}}while(0);H=(G|0)==0;I=c[B>>2]|0;do{if((I|0)==0){J=25}else{if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(H){break}else{K=E;break a}}if((wc[c[(c[I>>2]|0)+36>>2]&255](I)|0)==-1){c[B>>2]=0;J=25;break}else{if(H){break}else{K=E;break a}}}}while(0);if((J|0)==25){J=0;if(H){K=E;break}}I=a[u]|0;L=(I&1)==0;if(L){M=(I&255)>>>1}else{M=c[D>>2]|0}if(((c[p>>2]|0)-E|0)==(M|0)){if(L){N=(I&255)>>>1;O=(I&255)>>>1}else{I=c[D>>2]|0;N=I;O=I}Qh(o,N<<1,0);if((a[u]&1)==0){P=10}else{P=(c[C>>2]&-2)-1|0}Qh(o,P,0);if((a[u]&1)==0){Q=y}else{Q=c[z>>2]|0}c[p>>2]=Q+O;R=Q}else{R=E}I=G+12|0;L=c[I>>2]|0;S=G+16|0;if((L|0)==(c[S>>2]|0)){T=(wc[c[(c[G>>2]|0)+36>>2]&255](G)|0)&255}else{T=a[L]|0}if((Zj(T,16,R,p,s,0,m,w,r,v)|0)!=0){K=R;break}L=c[I>>2]|0;if((L|0)==(c[S>>2]|0)){wc[c[(c[G>>2]|0)+40>>2]&255](G)|0;E=R;F=G;continue}else{c[I>>2]=L+1;E=R;F=G;continue}}a[K+3|0]=0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);F=_j(K,c[4980]|0,3936,(E=i,i=i+8|0,c[E>>2]=j,E)|0)|0;i=E;if((F|0)!=1){c[h>>2]=4}F=c[A>>2]|0;do{if((F|0)==0){U=0}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){U=F;break}if(!((wc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1)){U=F;break}c[A>>2]=0;U=0}}while(0);A=(U|0)==0;F=c[B>>2]|0;do{if((F|0)==0){J=73}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(!A){break}V=b|0;c[V>>2]=U;Nh(o);Nh(m);i=d;return}if((wc[c[(c[F>>2]|0)+36>>2]&255](F)|0)==-1){c[B>>2]=0;J=73;break}if(!(A^(F|0)==0)){break}V=b|0;c[V>>2]=U;Nh(o);Nh(m);i=d;return}}while(0);do{if((J|0)==73){if(A){break}V=b|0;c[V>>2]=U;Nh(o);Nh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;V=b|0;c[V>>2]=U;Nh(o);Nh(m);i=d;return}}while(0);d=ic(4)|0;Qp(d);Cb(d|0,14952,168)}function Zj(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;m=c[f>>2]|0;n=(m|0)==(e|0);do{if(n){o=(a[l+24|0]|0)==b<<24>>24;if(!o){if(!((a[l+25|0]|0)==b<<24>>24)){break}}c[f>>2]=e+1;a[e]=o?43:45;c[g>>2]=0;p=0;return p|0}}while(0);o=a[i]|0;if((o&1)==0){q=(o&255)>>>1}else{q=c[i+4>>2]|0}if((q|0)!=0&b<<24>>24==h<<24>>24){h=c[k>>2]|0;if((h-j|0)>=160){p=0;return p|0}j=c[g>>2]|0;c[k>>2]=h+4;c[h>>2]=j;c[g>>2]=0;p=0;return p|0}j=l+26|0;h=l;while(1){if((h|0)==(j|0)){r=j;break}if((a[h]|0)==b<<24>>24){r=h;break}else{h=h+1|0}}h=r-l|0;if((h|0)>23){p=-1;return p|0}do{if((d|0)==8|(d|0)==10){if((h|0)<(d|0)){break}else{p=-1}return p|0}else if((d|0)==16){if((h|0)<22){break}if(n){p=-1;return p|0}if((m-e|0)>=3){p=-1;return p|0}if((a[m-1|0]|0)!=48){p=-1;return p|0}c[g>>2]=0;l=a[16744+h|0]|0;c[f>>2]=m+1;a[m]=l;p=0;return p|0}}while(0);e=a[16744+h|0]|0;c[f>>2]=m+1;a[m]=e;c[g>>2]=(c[g>>2]|0)+1;p=0;return p|0}function _j(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=Vb(b|0)|0;b=ab(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}Vb(h|0)|0;i=f;return b|0}function $j(a){a=a|0;mh(a|0);sq(a);return}function ak(a){a=a|0;mh(a|0);return}function bk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];Cc[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==0){a[j]=0}else if((w|0)==1){a[j]=1}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}gi(r,g);q=r|0;r=c[q>>2]|0;if(!((c[5356]|0)==-1)){c[m>>2]=21424;c[m+4>>2]=18;c[m+8>>2]=0;Ih(21424,m,116)}m=(c[5357]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;oh(c[q>>2]|0)|0;gi(s,g);n=s|0;p=c[n>>2]|0;if(!((c[5260]|0)==-1)){c[l>>2]=21040;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21040,l,116)}d=(c[5261]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){x=c[v+(d<<2)>>2]|0;if((x|0)==0){break}y=x;oh(c[n>>2]|0)|0;z=t|0;A=x;vc[c[(c[A>>2]|0)+24>>2]&127](z,y);vc[c[(c[A>>2]|0)+28>>2]&127](t+12|0,y);c[u>>2]=c[f>>2];a[j]=(ck(e,u,z,t+24|0,o,h,1)|0)==(z|0)|0;c[b>>2]=c[e>>2];Zh(t+12|0);Zh(t|0);i=k;return}}while(0);o=ic(4)|0;Qp(o);Cb(o|0,14952,168)}}while(0);k=ic(4)|0;Qp(k);Cb(k|0,14952,168)}function ck(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;k=i;i=i+104|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=(f-e|0)/12|0;m=k|0;do{if(l>>>0>100>>>0){n=jq(l)|0;if((n|0)!=0){o=n;p=n;break}yq();o=0;p=0}else{o=m;p=0}}while(0);m=(e|0)==(f|0);if(m){q=l;r=0}else{n=l;l=0;s=o;t=e;while(1){u=a[t]|0;if((u&1)==0){v=(u&255)>>>1}else{v=c[t+4>>2]|0}if((v|0)==0){a[s]=2;w=l+1|0;x=n-1|0}else{a[s]=1;w=l;x=n}u=t+12|0;if((u|0)==(f|0)){q=x;r=w;break}else{n=x;l=w;s=s+1|0;t=u}}}t=b|0;b=d|0;d=g;s=0;w=r;r=q;a:while(1){q=c[t>>2]|0;do{if((q|0)==0){y=1}else{l=c[q+12>>2]|0;if((l|0)==(c[q+16>>2]|0)){z=wc[c[(c[q>>2]|0)+36>>2]&255](q)|0}else{z=c[l>>2]|0}if((z|0)==-1){c[t>>2]=0;y=1;break}else{y=(c[t>>2]|0)==0;break}}}while(0);q=c[b>>2]|0;do{if((q|0)==0){A=1;B=0}else{l=c[q+12>>2]|0;if((l|0)==(c[q+16>>2]|0)){C=wc[c[(c[q>>2]|0)+36>>2]&255](q)|0}else{C=c[l>>2]|0}if(!((C|0)==-1)){A=0;B=q;break}c[b>>2]=0;A=1;B=0}}while(0);D=c[t>>2]|0;if(!((y^A)&(r|0)!=0)){break}q=c[D+12>>2]|0;if((q|0)==(c[D+16>>2]|0)){E=wc[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{E=c[q>>2]|0}if(j){F=E}else{F=Fc[c[(c[d>>2]|0)+28>>2]&63](g,E)|0}q=s+1|0;if(m){s=q;w=w;r=r;continue}b:do{if(j){l=r;x=w;n=o;v=0;u=e;while(1){do{if((a[n]|0)==1){G=a[u]|0;H=(G&1)==0;if(H){I=u+4|0}else{I=c[u+8>>2]|0}if((F|0)!=(c[I+(s<<2)>>2]|0)){a[n]=0;J=v;K=x;L=l-1|0;break}if(H){M=(G&255)>>>1}else{M=c[u+4>>2]|0}if((M|0)!=(q|0)){J=1;K=x;L=l;break}a[n]=2;J=1;K=x+1|0;L=l-1|0}else{J=v;K=x;L=l}}while(0);G=u+12|0;if((G|0)==(f|0)){N=L;O=K;P=J;break b}l=L;x=K;n=n+1|0;v=J;u=G}}else{u=r;v=w;n=o;x=0;l=e;while(1){do{if((a[n]|0)==1){G=l;if((a[G]&1)==0){Q=l+4|0}else{Q=c[l+8>>2]|0}if((F|0)!=(Fc[c[(c[d>>2]|0)+28>>2]&63](g,c[Q+(s<<2)>>2]|0)|0)){a[n]=0;R=x;S=v;T=u-1|0;break}H=a[G]|0;if((H&1)==0){U=(H&255)>>>1}else{U=c[l+4>>2]|0}if((U|0)!=(q|0)){R=1;S=v;T=u;break}a[n]=2;R=1;S=v+1|0;T=u-1|0}else{R=x;S=v;T=u}}while(0);H=l+12|0;if((H|0)==(f|0)){N=T;O=S;P=R;break b}u=T;v=S;n=n+1|0;x=R;l=H}}}while(0);if(!P){s=q;w=O;r=N;continue}l=c[t>>2]|0;x=l+12|0;n=c[x>>2]|0;if((n|0)==(c[l+16>>2]|0)){wc[c[(c[l>>2]|0)+40>>2]&255](l)|0}else{c[x>>2]=n+4}if((N+O|0)>>>0<2>>>0){s=q;w=O;r=N;continue}else{V=O;W=o;X=e}while(1){do{if((a[W]|0)==2){n=a[X]|0;if((n&1)==0){Y=(n&255)>>>1}else{Y=c[X+4>>2]|0}if((Y|0)==(q|0)){Z=V;break}a[W]=0;Z=V-1|0}else{Z=V}}while(0);n=X+12|0;if((n|0)==(f|0)){s=q;w=Z;r=N;continue a}else{V=Z;W=W+1|0;X=n}}}do{if((D|0)==0){_=1}else{X=c[D+12>>2]|0;if((X|0)==(c[D+16>>2]|0)){$=wc[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{$=c[X>>2]|0}if(($|0)==-1){c[t>>2]=0;_=1;break}else{_=(c[t>>2]|0)==0;break}}}while(0);do{if((B|0)==0){aa=93}else{t=c[B+12>>2]|0;if((t|0)==(c[B+16>>2]|0)){ba=wc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{ba=c[t>>2]|0}if((ba|0)==-1){c[b>>2]=0;aa=93;break}else{if(_){break}else{aa=95;break}}}}while(0);if((aa|0)==93){if(_){aa=95}}if((aa|0)==95){c[h>>2]=c[h>>2]|2}c:do{if(m){aa=100}else{_=o;b=e;while(1){if((a[_]|0)==2){ca=b;break c}ba=b+12|0;if((ba|0)==(f|0)){aa=100;break c}_=_+1|0;b=ba}}}while(0);if((aa|0)==100){c[h>>2]=c[h>>2]|4;ca=f}if((p|0)==0){i=k;return ca|0}kq(p);i=k;return ca|0}function dk(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];ek(a,0,j,k,f,g,h);i=b;return}function ek(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==64){t=8}else if((s|0)==8){t=16}else if((s|0)==0){t=0}else{t=10}s=k|0;Ak(m,g,s,l);g=n;Kq(g|0,0,12)|0;Qh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=wc[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=wc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;J=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;J=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){K=(C&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(F){L=(C&255)>>>1;M=(C&255)>>>1}else{C=c[y>>2]|0;L=C;M=C}Qh(n,L<<1,0);if((a[g]&1)==0){N=10}else{N=(c[f>>2]&-2)-1|0}Qh(n,N,0);if((a[g]&1)==0){O=v}else{O=c[w>>2]|0}c[o>>2]=O+M;P=O}else{P=l}C=B+12|0;F=c[C>>2]|0;Q=B+16|0;if((F|0)==(c[Q>>2]|0)){R=wc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{R=c[F>>2]|0}if((wk(R,t,P,o,r,z,m,k,q,s)|0)!=0){I=P;J=H;break}F=c[C>>2]|0;if((F|0)==(c[Q>>2]|0)){wc[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=P;u=B;continue}else{c[C>>2]=F+4;l=P;u=B;continue}}u=a[m]|0;if((u&1)==0){S=(u&255)>>>1}else{S=c[m+4>>2]|0}do{if((S|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}P=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=P}}while(0);c[j>>2]=up(I,c[o>>2]|0,h,t)|0;Km(m,k,c[q>>2]|0,h);do{if((B|0)==0){T=1;U=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){V=wc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{V=c[q>>2]|0}if(!((V|0)==-1)){T=0;U=B;break}c[x>>2]=0;T=1;U=0}}while(0);do{if((J|0)==0){E=67}else{x=c[J+12>>2]|0;if((x|0)==(c[J+16>>2]|0)){W=wc[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{W=c[x>>2]|0}if((W|0)==-1){c[e>>2]=0;E=67;break}if(!T){break}X=b|0;c[X>>2]=U;Nh(n);Nh(m);i=d;return}}while(0);do{if((E|0)==67){if(T){break}X=b|0;c[X>>2]=U;Nh(n);Nh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;X=b|0;c[X>>2]=U;Nh(n);Nh(m);i=d;return}function fk(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];gk(a,0,j,k,f,g,h);i=b;return}function gk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==64){t=8}else if((s|0)==0){t=0}else{t=10}s=k|0;Ak(m,g,s,l);g=n;Kq(g|0,0,12)|0;Qh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=wc[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=wc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;K=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;K=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){L=(C&255)>>>1}else{L=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(L|0)){if(F){M=(C&255)>>>1;N=(C&255)>>>1}else{C=c[y>>2]|0;M=C;N=C}Qh(n,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Qh(n,O,0);if((a[g]&1)==0){P=v}else{P=c[w>>2]|0}c[o>>2]=P+N;Q=P}else{Q=l}C=B+12|0;F=c[C>>2]|0;R=B+16|0;if((F|0)==(c[R>>2]|0)){S=wc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{S=c[F>>2]|0}if((wk(S,t,Q,o,r,z,m,k,q,s)|0)!=0){I=Q;K=H;break}F=c[C>>2]|0;if((F|0)==(c[R>>2]|0)){wc[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=Q;u=B;continue}else{c[C>>2]=F+4;l=Q;u=B;continue}}u=a[m]|0;if((u&1)==0){T=(u&255)>>>1}else{T=c[m+4>>2]|0}do{if((T|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}Q=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=Q}}while(0);r=tp(I,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=J;Km(m,k,c[q>>2]|0,h);do{if((B|0)==0){U=1;V=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){W=wc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{W=c[q>>2]|0}if(!((W|0)==-1)){U=0;V=B;break}c[x>>2]=0;U=1;V=0}}while(0);do{if((K|0)==0){E=67}else{x=c[K+12>>2]|0;if((x|0)==(c[K+16>>2]|0)){X=wc[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{X=c[x>>2]|0}if((X|0)==-1){c[e>>2]=0;E=67;break}if(!U){break}Y=b|0;c[Y>>2]=V;Nh(n);Nh(m);i=d;return}}while(0);do{if((E|0)==67){if(U){break}Y=b|0;c[Y>>2]=V;Nh(n);Nh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;Y=b|0;c[Y>>2]=V;Nh(n);Nh(m);i=d;return}function hk(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];ik(a,0,j,k,f,g,h);i=b;return}function ik(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;e=i;i=i+328|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+152|0;r=e+312|0;s=e+320|0;t=c[h+4>>2]&74;if((t|0)==8){u=16}else if((t|0)==0){u=0}else if((t|0)==64){u=8}else{u=10}t=l|0;Ak(n,h,t,m);h=o;Kq(h|0,0,12)|0;Qh(o,10,0);if((a[h]&1)==0){l=o+1|0;v=l;w=l;x=o+8|0}else{l=o+8|0;v=c[l>>2]|0;w=o+1|0;x=l}c[p>>2]=v;l=q|0;c[r>>2]=l;c[s>>2]=0;y=f|0;f=g|0;g=o|0;z=o+4|0;A=c[m>>2]|0;m=v;v=c[y>>2]|0;a:while(1){do{if((v|0)==0){B=1;C=0}else{D=c[v+12>>2]|0;if((D|0)==(c[v+16>>2]|0)){E=wc[c[(c[v>>2]|0)+36>>2]&255](v)|0}else{E=c[D>>2]|0}if(!((E|0)==-1)){B=0;C=v;break}c[y>>2]=0;B=1;C=0}}while(0);D=c[f>>2]|0;do{if((D|0)==0){F=22}else{G=c[D+12>>2]|0;if((G|0)==(c[D+16>>2]|0)){H=wc[c[(c[D>>2]|0)+36>>2]&255](D)|0}else{H=c[G>>2]|0}if((H|0)==-1){c[f>>2]=0;F=22;break}else{if(B){I=D;break}else{J=m;K=D;break a}}}}while(0);if((F|0)==22){F=0;if(B){J=m;K=0;break}else{I=0}}D=a[h]|0;G=(D&1)==0;if(G){L=(D&255)>>>1}else{L=c[z>>2]|0}if(((c[p>>2]|0)-m|0)==(L|0)){if(G){M=(D&255)>>>1;N=(D&255)>>>1}else{D=c[z>>2]|0;M=D;N=D}Qh(o,M<<1,0);if((a[h]&1)==0){O=10}else{O=(c[g>>2]&-2)-1|0}Qh(o,O,0);if((a[h]&1)==0){P=w}else{P=c[x>>2]|0}c[p>>2]=P+N;Q=P}else{Q=m}D=C+12|0;G=c[D>>2]|0;R=C+16|0;if((G|0)==(c[R>>2]|0)){S=wc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{S=c[G>>2]|0}if((wk(S,u,Q,p,s,A,n,l,r,t)|0)!=0){J=Q;K=I;break}G=c[D>>2]|0;if((G|0)==(c[R>>2]|0)){wc[c[(c[C>>2]|0)+40>>2]&255](C)|0;m=Q;v=C;continue}else{c[D>>2]=G+4;m=Q;v=C;continue}}v=a[n]|0;if((v&1)==0){T=(v&255)>>>1}else{T=c[n+4>>2]|0}do{if((T|0)!=0){v=c[r>>2]|0;if((v-q|0)>=160){break}Q=c[s>>2]|0;c[r>>2]=v+4;c[v>>2]=Q}}while(0);b[k>>1]=sp(J,c[p>>2]|0,j,u)|0;Km(n,l,c[r>>2]|0,j);do{if((C|0)==0){U=1;V=0}else{r=c[C+12>>2]|0;if((r|0)==(c[C+16>>2]|0)){W=wc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{W=c[r>>2]|0}if(!((W|0)==-1)){U=0;V=C;break}c[y>>2]=0;U=1;V=0}}while(0);do{if((K|0)==0){F=67}else{y=c[K+12>>2]|0;if((y|0)==(c[K+16>>2]|0)){X=wc[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{X=c[y>>2]|0}if((X|0)==-1){c[f>>2]=0;F=67;break}if(!U){break}Y=d|0;c[Y>>2]=V;Nh(o);Nh(n);i=e;return}}while(0);do{if((F|0)==67){if(U){break}Y=d|0;c[Y>>2]=V;Nh(o);Nh(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;Y=d|0;c[Y>>2]=V;Nh(o);Nh(n);i=e;return}function jk(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];kk(a,0,j,k,f,g,h);i=b;return}function kk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==8){t=16}else if((s|0)==0){t=0}else if((s|0)==64){t=8}else{t=10}s=k|0;Ak(m,g,s,l);g=n;Kq(g|0,0,12)|0;Qh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=wc[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=wc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;J=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;J=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){K=(C&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(F){L=(C&255)>>>1;M=(C&255)>>>1}else{C=c[y>>2]|0;L=C;M=C}Qh(n,L<<1,0);if((a[g]&1)==0){N=10}else{N=(c[f>>2]&-2)-1|0}Qh(n,N,0);if((a[g]&1)==0){O=v}else{O=c[w>>2]|0}c[o>>2]=O+M;P=O}else{P=l}C=B+12|0;F=c[C>>2]|0;Q=B+16|0;if((F|0)==(c[Q>>2]|0)){R=wc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{R=c[F>>2]|0}if((wk(R,t,P,o,r,z,m,k,q,s)|0)!=0){I=P;J=H;break}F=c[C>>2]|0;if((F|0)==(c[Q>>2]|0)){wc[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=P;u=B;continue}else{c[C>>2]=F+4;l=P;u=B;continue}}u=a[m]|0;if((u&1)==0){S=(u&255)>>>1}else{S=c[m+4>>2]|0}do{if((S|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}P=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=P}}while(0);c[j>>2]=rp(I,c[o>>2]|0,h,t)|0;Km(m,k,c[q>>2]|0,h);do{if((B|0)==0){T=1;U=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){V=wc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{V=c[q>>2]|0}if(!((V|0)==-1)){T=0;U=B;break}c[x>>2]=0;T=1;U=0}}while(0);do{if((J|0)==0){E=67}else{x=c[J+12>>2]|0;if((x|0)==(c[J+16>>2]|0)){W=wc[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{W=c[x>>2]|0}if((W|0)==-1){c[e>>2]=0;E=67;break}if(!T){break}X=b|0;c[X>>2]=U;Nh(n);Nh(m);i=d;return}}while(0);do{if((E|0)==67){if(T){break}X=b|0;c[X>>2]=U;Nh(n);Nh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;X=b|0;c[X>>2]=U;Nh(n);Nh(m);i=d;return}function lk(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];mk(a,0,j,k,f,g,h);i=b;return}function mk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==0){t=0}else if((s|0)==64){t=8}else if((s|0)==8){t=16}else{t=10}s=k|0;Ak(m,g,s,l);g=n;Kq(g|0,0,12)|0;Qh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=wc[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=wc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;J=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;J=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){K=(C&255)>>>1}else{K=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(K|0)){if(F){L=(C&255)>>>1;M=(C&255)>>>1}else{C=c[y>>2]|0;L=C;M=C}Qh(n,L<<1,0);if((a[g]&1)==0){N=10}else{N=(c[f>>2]&-2)-1|0}Qh(n,N,0);if((a[g]&1)==0){O=v}else{O=c[w>>2]|0}c[o>>2]=O+M;P=O}else{P=l}C=B+12|0;F=c[C>>2]|0;Q=B+16|0;if((F|0)==(c[Q>>2]|0)){R=wc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{R=c[F>>2]|0}if((wk(R,t,P,o,r,z,m,k,q,s)|0)!=0){I=P;J=H;break}F=c[C>>2]|0;if((F|0)==(c[Q>>2]|0)){wc[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=P;u=B;continue}else{c[C>>2]=F+4;l=P;u=B;continue}}u=a[m]|0;if((u&1)==0){S=(u&255)>>>1}else{S=c[m+4>>2]|0}do{if((S|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}P=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=P}}while(0);c[j>>2]=qp(I,c[o>>2]|0,h,t)|0;Km(m,k,c[q>>2]|0,h);do{if((B|0)==0){T=1;U=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){V=wc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{V=c[q>>2]|0}if(!((V|0)==-1)){T=0;U=B;break}c[x>>2]=0;T=1;U=0}}while(0);do{if((J|0)==0){E=67}else{x=c[J+12>>2]|0;if((x|0)==(c[J+16>>2]|0)){W=wc[c[(c[J>>2]|0)+36>>2]&255](J)|0}else{W=c[x>>2]|0}if((W|0)==-1){c[e>>2]=0;E=67;break}if(!T){break}X=b|0;c[X>>2]=U;Nh(n);Nh(m);i=d;return}}while(0);do{if((E|0)==67){if(T){break}X=b|0;c[X>>2]=U;Nh(n);Nh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;X=b|0;c[X>>2]=U;Nh(n);Nh(m);i=d;return}function nk(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];ok(a,0,j,k,f,g,h);i=b;return}function ok(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;d=i;i=i+328|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+104|0;m=d+112|0;n=d+128|0;o=d+144|0;p=d+152|0;q=d+312|0;r=d+320|0;s=c[g+4>>2]&74;if((s|0)==64){t=8}else if((s|0)==8){t=16}else if((s|0)==0){t=0}else{t=10}s=k|0;Ak(m,g,s,l);g=n;Kq(g|0,0,12)|0;Qh(n,10,0);if((a[g]&1)==0){k=n+1|0;u=k;v=k;w=n+8|0}else{k=n+8|0;u=c[k>>2]|0;v=n+1|0;w=k}c[o>>2]=u;k=p|0;c[q>>2]=k;c[r>>2]=0;x=e|0;e=f|0;f=n|0;y=n+4|0;z=c[l>>2]|0;l=u;u=c[x>>2]|0;a:while(1){do{if((u|0)==0){A=1;B=0}else{C=c[u+12>>2]|0;if((C|0)==(c[u+16>>2]|0)){D=wc[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{D=c[C>>2]|0}if(!((D|0)==-1)){A=0;B=u;break}c[x>>2]=0;A=1;B=0}}while(0);C=c[e>>2]|0;do{if((C|0)==0){E=22}else{F=c[C+12>>2]|0;if((F|0)==(c[C+16>>2]|0)){G=wc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{G=c[F>>2]|0}if((G|0)==-1){c[e>>2]=0;E=22;break}else{if(A){H=C;break}else{I=l;K=C;break a}}}}while(0);if((E|0)==22){E=0;if(A){I=l;K=0;break}else{H=0}}C=a[g]|0;F=(C&1)==0;if(F){L=(C&255)>>>1}else{L=c[y>>2]|0}if(((c[o>>2]|0)-l|0)==(L|0)){if(F){M=(C&255)>>>1;N=(C&255)>>>1}else{C=c[y>>2]|0;M=C;N=C}Qh(n,M<<1,0);if((a[g]&1)==0){O=10}else{O=(c[f>>2]&-2)-1|0}Qh(n,O,0);if((a[g]&1)==0){P=v}else{P=c[w>>2]|0}c[o>>2]=P+N;Q=P}else{Q=l}C=B+12|0;F=c[C>>2]|0;R=B+16|0;if((F|0)==(c[R>>2]|0)){S=wc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{S=c[F>>2]|0}if((wk(S,t,Q,o,r,z,m,k,q,s)|0)!=0){I=Q;K=H;break}F=c[C>>2]|0;if((F|0)==(c[R>>2]|0)){wc[c[(c[B>>2]|0)+40>>2]&255](B)|0;l=Q;u=B;continue}else{c[C>>2]=F+4;l=Q;u=B;continue}}u=a[m]|0;if((u&1)==0){T=(u&255)>>>1}else{T=c[m+4>>2]|0}do{if((T|0)!=0){u=c[q>>2]|0;if((u-p|0)>=160){break}Q=c[r>>2]|0;c[q>>2]=u+4;c[u>>2]=Q}}while(0);r=pp(I,c[o>>2]|0,h,t)|0;c[j>>2]=r;c[j+4>>2]=J;Km(m,k,c[q>>2]|0,h);do{if((B|0)==0){U=1;V=0}else{q=c[B+12>>2]|0;if((q|0)==(c[B+16>>2]|0)){W=wc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{W=c[q>>2]|0}if(!((W|0)==-1)){U=0;V=B;break}c[x>>2]=0;U=1;V=0}}while(0);do{if((K|0)==0){E=67}else{x=c[K+12>>2]|0;if((x|0)==(c[K+16>>2]|0)){X=wc[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{X=c[x>>2]|0}if((X|0)==-1){c[e>>2]=0;E=67;break}if(!U){break}Y=b|0;c[Y>>2]=V;Nh(n);Nh(m);i=d;return}}while(0);do{if((E|0)==67){if(U){break}Y=b|0;c[Y>>2]=V;Nh(n);Nh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;Y=b|0;c[Y>>2]=V;Nh(n);Nh(m);i=d;return}function pk(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];qk(a,0,j,k,f,g,h);i=b;return}function qk(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;d=i;i=i+376|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;t=d+360|0;u=d+368|0;v=d|0;Bk(n,h,v,l,m);h=o;Kq(h|0,0,12)|0;Qh(o,10,0);if((a[h]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=c[l>>2]|0;l=c[m>>2]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=1;E=0}else{F=c[x+12>>2]|0;if((F|0)==(c[x+16>>2]|0)){G=wc[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{G=c[F>>2]|0}if(!((G|0)==-1)){D=0;E=x;break}c[A>>2]=0;D=1;E=0}}while(0);F=c[e>>2]|0;do{if((F|0)==0){H=18}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=wc[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if((J|0)==-1){c[e>>2]=0;H=18;break}else{if(D){K=F;break}else{L=m;M=F;break a}}}}while(0);if((H|0)==18){H=0;if(D){L=m;M=0;break}else{K=0}}F=a[h]|0;I=(F&1)==0;if(I){N=(F&255)>>>1}else{N=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(N|0)){if(I){O=(F&255)>>>1;P=(F&255)>>>1}else{F=c[B>>2]|0;O=F;P=F}Qh(o,O<<1,0);if((a[h]&1)==0){Q=10}else{Q=(c[f>>2]&-2)-1|0}Qh(o,Q,0);if((a[h]&1)==0){R=y}else{R=c[z>>2]|0}c[p>>2]=R+P;S=R}else{S=m}F=E+12|0;I=c[F>>2]|0;T=E+16|0;if((I|0)==(c[T>>2]|0)){U=wc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{U=c[I>>2]|0}if((Ck(U,t,u,S,p,C,l,n,w,r,s,v)|0)!=0){L=S;M=K;break}I=c[F>>2]|0;if((I|0)==(c[T>>2]|0)){wc[c[(c[E>>2]|0)+40>>2]&255](E)|0;m=S;x=E;continue}else{c[F>>2]=I+4;m=S;x=E;continue}}x=a[n]|0;if((x&1)==0){V=(x&255)>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}S=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=S}}while(0);g[k>>2]=+op(L,c[p>>2]|0,j);Km(n,w,c[r>>2]|0,j);do{if((E|0)==0){W=1;X=0}else{r=c[E+12>>2]|0;if((r|0)==(c[E+16>>2]|0)){Y=wc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Y=c[r>>2]|0}if(!((Y|0)==-1)){W=0;X=E;break}c[A>>2]=0;W=1;X=0}}while(0);do{if((M|0)==0){H=64}else{A=c[M+12>>2]|0;if((A|0)==(c[M+16>>2]|0)){Z=wc[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Z=c[A>>2]|0}if((Z|0)==-1){c[e>>2]=0;H=64;break}if(!W){break}_=b|0;c[_>>2]=X;Nh(o);Nh(n);i=d;return}}while(0);do{if((H|0)==64){if(W){break}_=b|0;c[_>>2]=X;Nh(o);Nh(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;_=b|0;c[_>>2]=X;Nh(o);Nh(n);i=d;return}function rk(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];sk(a,0,j,k,f,g,h);i=b;return}function sk(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;d=i;i=i+376|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;t=d+360|0;u=d+368|0;v=d|0;Bk(n,g,v,l,m);g=o;Kq(g|0,0,12)|0;Qh(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=c[l>>2]|0;l=c[m>>2]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=1;E=0}else{F=c[x+12>>2]|0;if((F|0)==(c[x+16>>2]|0)){G=wc[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{G=c[F>>2]|0}if(!((G|0)==-1)){D=0;E=x;break}c[A>>2]=0;D=1;E=0}}while(0);F=c[e>>2]|0;do{if((F|0)==0){H=18}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=wc[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if((J|0)==-1){c[e>>2]=0;H=18;break}else{if(D){K=F;break}else{L=m;M=F;break a}}}}while(0);if((H|0)==18){H=0;if(D){L=m;M=0;break}else{K=0}}F=a[g]|0;I=(F&1)==0;if(I){N=(F&255)>>>1}else{N=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(N|0)){if(I){O=(F&255)>>>1;P=(F&255)>>>1}else{F=c[B>>2]|0;O=F;P=F}Qh(o,O<<1,0);if((a[g]&1)==0){Q=10}else{Q=(c[f>>2]&-2)-1|0}Qh(o,Q,0);if((a[g]&1)==0){R=y}else{R=c[z>>2]|0}c[p>>2]=R+P;S=R}else{S=m}F=E+12|0;I=c[F>>2]|0;T=E+16|0;if((I|0)==(c[T>>2]|0)){U=wc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{U=c[I>>2]|0}if((Ck(U,t,u,S,p,C,l,n,w,r,s,v)|0)!=0){L=S;M=K;break}I=c[F>>2]|0;if((I|0)==(c[T>>2]|0)){wc[c[(c[E>>2]|0)+40>>2]&255](E)|0;m=S;x=E;continue}else{c[F>>2]=I+4;m=S;x=E;continue}}x=a[n]|0;if((x&1)==0){V=(x&255)>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}S=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=S}}while(0);h[k>>3]=+np(L,c[p>>2]|0,j);Km(n,w,c[r>>2]|0,j);do{if((E|0)==0){W=1;X=0}else{r=c[E+12>>2]|0;if((r|0)==(c[E+16>>2]|0)){Y=wc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Y=c[r>>2]|0}if(!((Y|0)==-1)){W=0;X=E;break}c[A>>2]=0;W=1;X=0}}while(0);do{if((M|0)==0){H=64}else{A=c[M+12>>2]|0;if((A|0)==(c[M+16>>2]|0)){Z=wc[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Z=c[A>>2]|0}if((Z|0)==-1){c[e>>2]=0;H=64;break}if(!W){break}_=b|0;c[_>>2]=X;Nh(o);Nh(n);i=d;return}}while(0);do{if((H|0)==64){if(W){break}_=b|0;c[_>>2]=X;Nh(o);Nh(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;_=b|0;c[_>>2]=X;Nh(o);Nh(n);i=d;return}function tk(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0;b=i;i=i+16|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;c[j>>2]=c[d>>2];c[k>>2]=c[e>>2];uk(a,0,j,k,f,g,h);i=b;return}function uk(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;d=i;i=i+376|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d+128|0;m=d+136|0;n=d+144|0;o=d+160|0;p=d+176|0;q=d+184|0;r=d+344|0;s=d+352|0;t=d+360|0;u=d+368|0;v=d|0;Bk(n,g,v,l,m);g=o;Kq(g|0,0,12)|0;Qh(o,10,0);if((a[g]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;a[t]=1;a[u]=69;A=e|0;e=f|0;f=o|0;B=o+4|0;C=c[l>>2]|0;l=c[m>>2]|0;m=x;x=c[A>>2]|0;a:while(1){do{if((x|0)==0){D=1;E=0}else{F=c[x+12>>2]|0;if((F|0)==(c[x+16>>2]|0)){G=wc[c[(c[x>>2]|0)+36>>2]&255](x)|0}else{G=c[F>>2]|0}if(!((G|0)==-1)){D=0;E=x;break}c[A>>2]=0;D=1;E=0}}while(0);F=c[e>>2]|0;do{if((F|0)==0){H=18}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=wc[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if((J|0)==-1){c[e>>2]=0;H=18;break}else{if(D){K=F;break}else{L=m;M=F;break a}}}}while(0);if((H|0)==18){H=0;if(D){L=m;M=0;break}else{K=0}}F=a[g]|0;I=(F&1)==0;if(I){N=(F&255)>>>1}else{N=c[B>>2]|0}if(((c[p>>2]|0)-m|0)==(N|0)){if(I){O=(F&255)>>>1;P=(F&255)>>>1}else{F=c[B>>2]|0;O=F;P=F}Qh(o,O<<1,0);if((a[g]&1)==0){Q=10}else{Q=(c[f>>2]&-2)-1|0}Qh(o,Q,0);if((a[g]&1)==0){R=y}else{R=c[z>>2]|0}c[p>>2]=R+P;S=R}else{S=m}F=E+12|0;I=c[F>>2]|0;T=E+16|0;if((I|0)==(c[T>>2]|0)){U=wc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{U=c[I>>2]|0}if((Ck(U,t,u,S,p,C,l,n,w,r,s,v)|0)!=0){L=S;M=K;break}I=c[F>>2]|0;if((I|0)==(c[T>>2]|0)){wc[c[(c[E>>2]|0)+40>>2]&255](E)|0;m=S;x=E;continue}else{c[F>>2]=I+4;m=S;x=E;continue}}x=a[n]|0;if((x&1)==0){V=(x&255)>>>1}else{V=c[n+4>>2]|0}do{if((V|0)!=0){if((a[t]|0)==0){break}x=c[r>>2]|0;if((x-q|0)>=160){break}S=c[s>>2]|0;c[r>>2]=x+4;c[x>>2]=S}}while(0);h[k>>3]=+mp(L,c[p>>2]|0,j);Km(n,w,c[r>>2]|0,j);do{if((E|0)==0){W=1;X=0}else{r=c[E+12>>2]|0;if((r|0)==(c[E+16>>2]|0)){Y=wc[c[(c[E>>2]|0)+36>>2]&255](E)|0}else{Y=c[r>>2]|0}if(!((Y|0)==-1)){W=0;X=E;break}c[A>>2]=0;W=1;X=0}}while(0);do{if((M|0)==0){H=64}else{A=c[M+12>>2]|0;if((A|0)==(c[M+16>>2]|0)){Z=wc[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{Z=c[A>>2]|0}if((Z|0)==-1){c[e>>2]=0;H=64;break}if(!W){break}_=b|0;c[_>>2]=X;Nh(o);Nh(n);i=d;return}}while(0);do{if((H|0)==64){if(W){break}_=b|0;c[_>>2]=X;Nh(o);Nh(n);i=d;return}}while(0);c[j>>2]=c[j>>2]|2;_=b|0;c[_>>2]=X;Nh(o);Nh(n);i=d;return}function vk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;d=i;i=i+344|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+120|0;n=d+136|0;o=d+144|0;p=d+160|0;q=d+168|0;r=d+328|0;s=d+336|0;Kq(m|0,0,12)|0;gi(n,g);g=n|0;n=c[g>>2]|0;if(!((c[5356]|0)==-1)){c[k>>2]=21424;c[k+4>>2]=18;c[k+8>>2]=0;Ih(21424,k,116)}k=(c[5357]|0)-1|0;t=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-t>>2>>>0>k>>>0){u=c[t+(k<<2)>>2]|0;if((u|0)==0){break}v=l|0;Hc[c[(c[u>>2]|0)+48>>2]&15](u,16744,16770,v)|0;oh(c[g>>2]|0)|0;u=o;Kq(u|0,0,12)|0;Qh(o,10,0);if((a[u]&1)==0){w=o+1|0;x=w;y=w;z=o+8|0}else{w=o+8|0;x=c[w>>2]|0;y=o+1|0;z=w}c[p>>2]=x;w=q|0;c[r>>2]=w;c[s>>2]=0;A=e|0;B=f|0;C=o|0;D=o+4|0;E=x;F=c[A>>2]|0;a:while(1){do{if((F|0)==0){G=1;H=0}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=wc[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{J=c[I>>2]|0}if(!((J|0)==-1)){G=0;H=F;break}c[A>>2]=0;G=1;H=0}}while(0);I=c[B>>2]|0;do{if((I|0)==0){K=26}else{L=c[I+12>>2]|0;if((L|0)==(c[I+16>>2]|0)){M=wc[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{M=c[L>>2]|0}if((M|0)==-1){c[B>>2]=0;K=26;break}else{if(G){break}else{N=E;break a}}}}while(0);if((K|0)==26){K=0;if(G){N=E;break}}I=a[u]|0;L=(I&1)==0;if(L){O=(I&255)>>>1}else{O=c[D>>2]|0}if(((c[p>>2]|0)-E|0)==(O|0)){if(L){P=(I&255)>>>1;Q=(I&255)>>>1}else{I=c[D>>2]|0;P=I;Q=I}Qh(o,P<<1,0);if((a[u]&1)==0){R=10}else{R=(c[C>>2]&-2)-1|0}Qh(o,R,0);if((a[u]&1)==0){S=y}else{S=c[z>>2]|0}c[p>>2]=S+Q;T=S}else{T=E}I=H+12|0;L=c[I>>2]|0;U=H+16|0;if((L|0)==(c[U>>2]|0)){V=wc[c[(c[H>>2]|0)+36>>2]&255](H)|0}else{V=c[L>>2]|0}if((wk(V,16,T,p,s,0,m,w,r,v)|0)!=0){N=T;break}L=c[I>>2]|0;if((L|0)==(c[U>>2]|0)){wc[c[(c[H>>2]|0)+40>>2]&255](H)|0;E=T;F=H;continue}else{c[I>>2]=L+4;E=T;F=H;continue}}a[N+3|0]=0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);F=_j(N,c[4980]|0,3936,(E=i,i=i+8|0,c[E>>2]=j,E)|0)|0;i=E;if((F|0)!=1){c[h>>2]=4}F=c[A>>2]|0;do{if((F|0)==0){W=1;X=0}else{E=c[F+12>>2]|0;if((E|0)==(c[F+16>>2]|0)){Y=wc[c[(c[F>>2]|0)+36>>2]&255](F)|0}else{Y=c[E>>2]|0}if(!((Y|0)==-1)){W=0;X=F;break}c[A>>2]=0;W=1;X=0}}while(0);A=c[B>>2]|0;do{if((A|0)==0){K=74}else{F=c[A+12>>2]|0;if((F|0)==(c[A+16>>2]|0)){Z=wc[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{Z=c[F>>2]|0}if((Z|0)==-1){c[B>>2]=0;K=74;break}if(!W){break}_=b|0;c[_>>2]=X;Nh(o);Nh(m);i=d;return}}while(0);do{if((K|0)==74){if(W){break}_=b|0;c[_>>2]=X;Nh(o);Nh(m);i=d;return}}while(0);c[h>>2]=c[h>>2]|2;_=b|0;c[_>>2]=X;Nh(o);Nh(m);i=d;return}}while(0);d=ic(4)|0;Qp(d);Cb(d|0,14952,168)}function wk(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;m=c[f>>2]|0;n=(m|0)==(e|0);do{if(n){o=(c[l+96>>2]|0)==(b|0);if(!o){if((c[l+100>>2]|0)!=(b|0)){break}}c[f>>2]=e+1;a[e]=o?43:45;c[g>>2]=0;p=0;return p|0}}while(0);o=a[i]|0;if((o&1)==0){q=(o&255)>>>1}else{q=c[i+4>>2]|0}if((q|0)!=0&(b|0)==(h|0)){h=c[k>>2]|0;if((h-j|0)>=160){p=0;return p|0}j=c[g>>2]|0;c[k>>2]=h+4;c[h>>2]=j;c[g>>2]=0;p=0;return p|0}j=l+104|0;h=l;while(1){if((h|0)==(j|0)){r=j;break}if((c[h>>2]|0)==(b|0)){r=h;break}else{h=h+4|0}}h=r-l|0;l=h>>2;if((h|0)>92){p=-1;return p|0}do{if((d|0)==8|(d|0)==10){if((l|0)<(d|0)){break}else{p=-1}return p|0}else if((d|0)==16){if((h|0)<88){break}if(n){p=-1;return p|0}if((m-e|0)>=3){p=-1;return p|0}if((a[m-1|0]|0)!=48){p=-1;return p|0}c[g>>2]=0;r=a[16744+l|0]|0;c[f>>2]=m+1;a[m]=r;p=0;return p|0}}while(0);e=a[16744+l|0]|0;c[f>>2]=m+1;a[m]=e;c[g>>2]=(c[g>>2]|0)+1;p=0;return p|0}function xk(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;gi(k,d);d=k|0;k=c[d>>2]|0;if(!((c[5358]|0)==-1)){c[j>>2]=21432;c[j+4>>2]=18;c[j+8>>2]=0;Ih(21432,j,116)}j=(c[5359]|0)-1|0;l=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-l>>2>>>0>j>>>0){m=c[l+(j<<2)>>2]|0;if((m|0)==0){break}Hc[c[(c[m>>2]|0)+32>>2]&15](m,16744,16770,e)|0;m=c[d>>2]|0;if(!((c[5262]|0)==-1)){c[h>>2]=21048;c[h+4>>2]=18;c[h+8>>2]=0;Ih(21048,h,116)}n=(c[5263]|0)-1|0;o=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-o>>2>>>0>n>>>0){p=c[o+(n<<2)>>2]|0;if((p|0)==0){break}q=p;a[f]=wc[c[(c[p>>2]|0)+16>>2]&255](q)|0;vc[c[(c[p>>2]|0)+20>>2]&127](b,q);oh(c[d>>2]|0)|0;i=g;return}}while(0);n=ic(4)|0;Qp(n);Cb(n|0,14952,168)}}while(0);g=ic(4)|0;Qp(g);Cb(g|0,14952,168)}function yk(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+40|0;j=h|0;k=h+16|0;l=h+32|0;gi(l,d);d=l|0;l=c[d>>2]|0;if(!((c[5358]|0)==-1)){c[k>>2]=21432;c[k+4>>2]=18;c[k+8>>2]=0;Ih(21432,k,116)}k=(c[5359]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}Hc[c[(c[n>>2]|0)+32>>2]&15](n,16744,16776,e)|0;n=c[d>>2]|0;if(!((c[5262]|0)==-1)){c[j>>2]=21048;c[j+4>>2]=18;c[j+8>>2]=0;Ih(21048,j,116)}o=(c[5263]|0)-1|0;p=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-p>>2>>>0>o>>>0){q=c[p+(o<<2)>>2]|0;if((q|0)==0){break}r=q;s=q;a[f]=wc[c[(c[s>>2]|0)+12>>2]&255](r)|0;a[g]=wc[c[(c[s>>2]|0)+16>>2]&255](r)|0;vc[c[(c[q>>2]|0)+20>>2]&127](b,r);oh(c[d>>2]|0)|0;i=h;return}}while(0);o=ic(4)|0;Qp(o);Cb(o|0,14952,168)}}while(0);h=ic(4)|0;Qp(h);Cb(h|0,14952,168)}function zk(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0;if(b<<24>>24==h<<24>>24){if((a[d]|0)==0){o=-1;return o|0}a[d]=0;h=c[g>>2]|0;c[g>>2]=h+1;a[h]=46;h=a[j]|0;if((h&1)==0){p=(h&255)>>>1}else{p=c[j+4>>2]|0}if((p|0)==0){o=0;return o|0}p=c[l>>2]|0;if((p-k|0)>=160){o=0;return o|0}h=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=h;o=0;return o|0}do{if(b<<24>>24==i<<24>>24){h=a[j]|0;if((h&1)==0){q=(h&255)>>>1}else{q=c[j+4>>2]|0}if((q|0)==0){break}if((a[d]|0)==0){o=-1;return o|0}h=c[l>>2]|0;if((h-k|0)>=160){o=0;return o|0}p=c[m>>2]|0;c[l>>2]=h+4;c[h>>2]=p;c[m>>2]=0;o=0;return o|0}}while(0);q=n+32|0;i=n;while(1){if((i|0)==(q|0)){r=q;break}if((a[i]|0)==b<<24>>24){r=i;break}else{i=i+1|0}}i=r-n|0;if((i|0)>31){o=-1;return o|0}n=a[16744+i|0]|0;if((i|0)==25|(i|0)==24){r=c[g>>2]|0;do{if((r|0)!=(f|0)){if((a[r-1|0]&95|0)==(a[e]&127|0)){break}else{o=-1}return o|0}}while(0);c[g>>2]=r+1;a[r]=n;o=0;return o|0}else if((i|0)==22|(i|0)==23){a[e]=80;r=c[g>>2]|0;c[g>>2]=r+1;a[r]=n;o=0;return o|0}else{r=a[e]|0;do{if((n&95|0)==(r<<24>>24|0)){a[e]=r|-128;if((a[d]|0)==0){break}a[d]=0;f=a[j]|0;if((f&1)==0){s=(f&255)>>>1}else{s=c[j+4>>2]|0}if((s|0)==0){break}f=c[l>>2]|0;if((f-k|0)>=160){break}b=c[m>>2]|0;c[l>>2]=f+4;c[f>>2]=b}}while(0);l=c[g>>2]|0;c[g>>2]=l+1;a[l]=n;if((i|0)>21){o=0;return o|0}c[m>>2]=(c[m>>2]|0)+1;o=0;return o|0}return 0}function Ak(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+40|0;g=f|0;h=f+16|0;j=f+32|0;gi(j,b);b=j|0;j=c[b>>2]|0;if(!((c[5356]|0)==-1)){c[h>>2]=21424;c[h+4>>2]=18;c[h+8>>2]=0;Ih(21424,h,116)}h=(c[5357]|0)-1|0;k=c[j+8>>2]|0;do{if((c[j+12>>2]|0)-k>>2>>>0>h>>>0){l=c[k+(h<<2)>>2]|0;if((l|0)==0){break}Hc[c[(c[l>>2]|0)+48>>2]&15](l,16744,16770,d)|0;l=c[b>>2]|0;if(!((c[5260]|0)==-1)){c[g>>2]=21040;c[g+4>>2]=18;c[g+8>>2]=0;Ih(21040,g,116)}m=(c[5261]|0)-1|0;n=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-n>>2>>>0>m>>>0){o=c[n+(m<<2)>>2]|0;if((o|0)==0){break}p=o;c[e>>2]=wc[c[(c[o>>2]|0)+16>>2]&255](p)|0;vc[c[(c[o>>2]|0)+20>>2]&127](a,p);oh(c[b>>2]|0)|0;i=f;return}}while(0);m=ic(4)|0;Qp(m);Cb(m|0,14952,168)}}while(0);f=ic(4)|0;Qp(f);Cb(f|0,14952,168)}function Bk(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;gi(k,b);b=k|0;k=c[b>>2]|0;if(!((c[5356]|0)==-1)){c[j>>2]=21424;c[j+4>>2]=18;c[j+8>>2]=0;Ih(21424,j,116)}j=(c[5357]|0)-1|0;l=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-l>>2>>>0>j>>>0){m=c[l+(j<<2)>>2]|0;if((m|0)==0){break}Hc[c[(c[m>>2]|0)+48>>2]&15](m,16744,16776,d)|0;m=c[b>>2]|0;if(!((c[5260]|0)==-1)){c[h>>2]=21040;c[h+4>>2]=18;c[h+8>>2]=0;Ih(21040,h,116)}n=(c[5261]|0)-1|0;o=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-o>>2>>>0>n>>>0){p=c[o+(n<<2)>>2]|0;if((p|0)==0){break}q=p;r=p;c[e>>2]=wc[c[(c[r>>2]|0)+12>>2]&255](q)|0;c[f>>2]=wc[c[(c[r>>2]|0)+16>>2]&255](q)|0;vc[c[(c[p>>2]|0)+20>>2]&127](a,q);oh(c[b>>2]|0)|0;i=g;return}}while(0);n=ic(4)|0;Qp(n);Cb(n|0,14952,168)}}while(0);g=ic(4)|0;Qp(g);Cb(g|0,14952,168)}function Ck(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0;if((b|0)==(h|0)){if((a[d]|0)==0){o=-1;return o|0}a[d]=0;h=c[g>>2]|0;c[g>>2]=h+1;a[h]=46;h=a[j]|0;if((h&1)==0){p=(h&255)>>>1}else{p=c[j+4>>2]|0}if((p|0)==0){o=0;return o|0}p=c[l>>2]|0;if((p-k|0)>=160){o=0;return o|0}h=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=h;o=0;return o|0}do{if((b|0)==(i|0)){h=a[j]|0;if((h&1)==0){q=(h&255)>>>1}else{q=c[j+4>>2]|0}if((q|0)==0){break}if((a[d]|0)==0){o=-1;return o|0}h=c[l>>2]|0;if((h-k|0)>=160){o=0;return o|0}p=c[m>>2]|0;c[l>>2]=h+4;c[h>>2]=p;c[m>>2]=0;o=0;return o|0}}while(0);q=n+128|0;i=n;while(1){if((i|0)==(q|0)){r=q;break}if((c[i>>2]|0)==(b|0)){r=i;break}else{i=i+4|0}}i=r-n|0;n=i>>2;if((i|0)>124){o=-1;return o|0}r=a[16744+n|0]|0;do{if((n|0)==25|(n|0)==24){b=c[g>>2]|0;do{if((b|0)!=(f|0)){if((a[b-1|0]&95|0)==(a[e]&127|0)){break}else{o=-1}return o|0}}while(0);c[g>>2]=b+1;a[b]=r;o=0;return o|0}else if((n|0)==22|(n|0)==23){a[e]=80}else{q=a[e]|0;if((r&95|0)!=(q<<24>>24|0)){break}a[e]=q|-128;if((a[d]|0)==0){break}a[d]=0;q=a[j]|0;if((q&1)==0){s=(q&255)>>>1}else{s=c[j+4>>2]|0}if((s|0)==0){break}q=c[l>>2]|0;if((q-k|0)>=160){break}p=c[m>>2]|0;c[l>>2]=q+4;c[q>>2]=p}}while(0);l=c[g>>2]|0;c[g>>2]=l+1;a[l]=r;if((i|0)>84){o=0;return o|0}c[m>>2]=(c[m>>2]|0)+1;o=0;return o|0}function Dk(a){a=a|0;mh(a|0);sq(a);return}function Ek(a){a=a|0;mh(a|0);return}function Fk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];Bc[o&63](b,d,l,f,g,h&1);i=j;return}gi(m,f);f=m|0;m=c[f>>2]|0;if(!((c[5262]|0)==-1)){c[k>>2]=21048;c[k+4>>2]=18;c[k+8>>2]=0;Ih(21048,k,116)}k=(c[5263]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;oh(c[f>>2]|0)|0;o=c[l>>2]|0;if(h){vc[c[o+24>>2]&127](n,d)}else{vc[c[o+28>>2]&127](n,d)}d=n;o=a[d]|0;if((o&1)==0){l=n+1|0;p=l;q=l;r=n+8|0}else{l=n+8|0;p=c[l>>2]|0;q=n+1|0;r=l}l=e|0;s=n+4|0;t=p;u=o;while(1){if((u&1)==0){v=(u&255)>>>1;w=q}else{v=c[s>>2]|0;w=c[r>>2]|0}if((t|0)==(w+v|0)){break}o=a[t]|0;x=c[l>>2]|0;do{if((x|0)!=0){y=x+24|0;z=c[y>>2]|0;if((z|0)!=(c[x+28>>2]|0)){c[y>>2]=z+1;a[z]=o;break}if(!((Fc[c[(c[x>>2]|0)+52>>2]&63](x,o&255)|0)==-1)){break}c[l>>2]=0}}while(0);t=t+1|0;u=a[d]|0}c[b>>2]=c[l>>2];Nh(n);i=j;return}}while(0);j=ic(4)|0;Qp(j);Cb(j|0,14952,168)}function Gk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[8264]|0;a[q+1|0]=a[8265]|0;a[q+2|0]=a[8266]|0;a[q+3|0]=a[8267]|0;a[q+4|0]=a[8268]|0;a[q+5|0]=a[8269]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=k|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);t=Hk(u,12,c[4980]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;gi(o,f);Ik(u,w,q,x,m,n,o);oh(c[o>>2]|0)|0;c[p>>2]=c[e>>2];Gd(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function Hk(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g|0;j=h;c[j>>2]=f;c[j+4>>2]=0;j=Vb(d|0)|0;d=Wb(a|0,b|0,e|0,h|0)|0;if((j|0)==0){i=g;return d|0}Vb(j|0)|0;i=g;return d|0}function Ik(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[5358]|0)==-1)){c[m>>2]=21432;c[m+4>>2]=18;c[m+8>>2]=0;Ih(21432,m,116)}m=(c[5359]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=ic(4)|0;r=q;Qp(r);Cb(q|0,14952,168)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=ic(4)|0;r=q;Qp(r);Cb(q|0,14952,168)}q=j;r=c[o>>2]|0;if(!((c[5262]|0)==-1)){c[l>>2]=21048;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21048,l,116)}l=(c[5263]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=ic(4)|0;t=s;Qp(t);Cb(s|0,14952,168)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=ic(4)|0;t=s;Qp(t);Cb(s|0,14952,168)}s=r;vc[c[(c[r>>2]|0)+20>>2]&127](n,s);t=n;l=a[t]|0;if((l&1)==0){u=(l&255)>>>1}else{u=c[n+4>>2]|0}do{if((u|0)==0){Hc[c[(c[j>>2]|0)+32>>2]&15](q,b,e,f)|0;c[h>>2]=f+(e-b)}else{c[h>>2]=f;l=a[b]|0;if((l<<24>>24|0)==45|(l<<24>>24|0)==43){o=Fc[c[(c[j>>2]|0)+28>>2]&63](q,l)|0;l=c[h>>2]|0;c[h>>2]=l+1;a[l]=o;v=b+1|0}else{v=b}do{if((e-v|0)>1){if((a[v]|0)!=48){w=v;break}o=v+1|0;l=a[o]|0;if(!((l<<24>>24|0)==120|(l<<24>>24|0)==88)){w=v;break}l=j;m=Fc[c[(c[l>>2]|0)+28>>2]&63](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+1;a[p]=m;m=Fc[c[(c[l>>2]|0)+28>>2]&63](q,a[o]|0)|0;o=c[h>>2]|0;c[h>>2]=o+1;a[o]=m;w=v+2|0}else{w=v}}while(0);do{if((w|0)!=(e|0)){m=e-1|0;if(m>>>0>w>>>0){x=w;y=m}else{break}do{m=a[x]|0;a[x]=a[y]|0;a[y]=m;x=x+1|0;y=y-1|0;}while(x>>>0<y>>>0)}}while(0);m=wc[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(w>>>0<e>>>0){o=n+1|0;l=j;p=n+4|0;z=n+8|0;A=0;B=0;C=w;while(1){D=(a[t]&1)==0;do{if((a[(D?o:c[z>>2]|0)+B|0]|0)==0){E=B;F=A}else{if((A|0)!=(a[(D?o:c[z>>2]|0)+B|0]|0)){E=B;F=A;break}G=c[h>>2]|0;c[h>>2]=G+1;a[G]=m;G=a[t]|0;if((G&1)==0){H=(G&255)>>>1}else{H=c[p>>2]|0}E=(B>>>0<(H-1|0)>>>0)+B|0;F=0}}while(0);D=Fc[c[(c[l>>2]|0)+28>>2]&63](q,a[C]|0)|0;G=c[h>>2]|0;c[h>>2]=G+1;a[G]=D;D=C+1|0;if(D>>>0<e>>>0){A=F+1|0;B=E;C=D}else{break}}}C=f+(w-b)|0;B=c[h>>2]|0;if((C|0)==(B|0)){break}A=B-1|0;if(A>>>0>C>>>0){I=C;J=A}else{break}do{A=a[I]|0;a[I]=a[J]|0;a[J]=A;I=I+1|0;J=J-1|0;}while(I>>>0<J>>>0)}}while(0);if((d|0)==(e|0)){K=c[h>>2]|0;c[g>>2]=K;Nh(n);i=k;return}else{K=f+(d-b)|0;c[g>>2]=K;Nh(n);i=k;return}}function Jk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=l|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);v=Hk(u,22,c[4980]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;gi(p,f);Ik(u,w,r,x,n,o,p);oh(c[p>>2]|0)|0;c[q>>2]=c[e>>2];Gd(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function Kk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[8264]|0;a[q+1|0]=a[8265]|0;a[q+2|0]=a[8266]|0;a[q+3|0]=a[8267]|0;a[q+4|0]=a[8268]|0;a[q+5|0]=a[8269]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=k|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);t=Hk(u,12,c[4980]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;gi(o,f);Ik(u,w,q,x,m,n,o);oh(c[o>>2]|0)|0;c[p>>2]=c[e>>2];Gd(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function Lk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=117}}while(0);u=l|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);v=Hk(u,23,c[4980]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;gi(p,f);Ik(u,w,r,x,n,o,p);oh(c[p>>2]|0)|0;c[q>>2]=c[e>>2];Gd(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function Mk(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);l=c[4980]|0;if(y){w=Hk(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=Hk(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[21992]|0)==0;if(y){do{if(w){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);l=Nk(m,c[4980]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);w=Nk(m,c[4980]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}yq();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else if((B|0)==32){F=A}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=jq(C<<1)|0;if((G|0)!=0){H=G;I=G;J=E;break}yq();H=0;I=0;J=c[m>>2]|0}}while(0);gi(q,f);Ok(J,F,A,H,o,p,q);oh(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];Gd(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){kq(I)}if((D|0)==0){i=d;return}kq(D);i=d;return}function Nk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=Vb(b|0)|0;b=kc(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}Vb(h|0)|0;i=f;return b|0}function Ok(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[5358]|0)==-1)){c[m>>2]=21432;c[m+4>>2]=18;c[m+8>>2]=0;Ih(21432,m,116)}m=(c[5359]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=ic(4)|0;r=q;Qp(r);Cb(q|0,14952,168)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=ic(4)|0;r=q;Qp(r);Cb(q|0,14952,168)}q=j;r=c[o>>2]|0;if(!((c[5262]|0)==-1)){c[l>>2]=21048;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21048,l,116)}l=(c[5263]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=ic(4)|0;t=s;Qp(t);Cb(s|0,14952,168)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=ic(4)|0;t=s;Qp(t);Cb(s|0,14952,168)}s=r;vc[c[(c[r>>2]|0)+20>>2]&127](n,s);c[h>>2]=f;t=a[b]|0;if((t<<24>>24|0)==45|(t<<24>>24|0)==43){l=Fc[c[(c[j>>2]|0)+28>>2]&63](q,t)|0;t=c[h>>2]|0;c[h>>2]=t+1;a[t]=l;u=b+1|0}else{u=b}l=e;a:do{if((l-u|0)>1){if((a[u]|0)!=48){v=u;w=34;break}t=u+1|0;o=a[t]|0;if(!((o<<24>>24|0)==120|(o<<24>>24|0)==88)){v=u;w=34;break}o=j;m=Fc[c[(c[o>>2]|0)+28>>2]&63](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+1;a[p]=m;m=u+2|0;p=Fc[c[(c[o>>2]|0)+28>>2]&63](q,a[t]|0)|0;t=c[h>>2]|0;c[h>>2]=t+1;a[t]=p;p=m;while(1){if(!(p>>>0<e>>>0)){x=m;y=p;break a}t=a[p]|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);if((Sa(t<<24>>24|0,c[4980]|0)|0)==0){x=m;y=p;break}else{p=p+1|0}}}else{v=u;w=34}}while(0);b:do{if((w|0)==34){while(1){w=0;if(!(v>>>0<e>>>0)){x=u;y=v;break b}p=a[v]|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);if((gb(p<<24>>24|0,c[4980]|0)|0)==0){x=u;y=v;break}else{v=v+1|0;w=34}}}}while(0);w=n;v=a[w]|0;if((v&1)==0){z=(v&255)>>>1}else{z=c[n+4>>2]|0}do{if((z|0)==0){Hc[c[(c[j>>2]|0)+32>>2]&15](q,x,y,c[h>>2]|0)|0;c[h>>2]=(c[h>>2]|0)+(y-x)}else{do{if((x|0)!=(y|0)){v=y-1|0;if(v>>>0>x>>>0){A=x;B=v}else{break}do{v=a[A]|0;a[A]=a[B]|0;a[B]=v;A=A+1|0;B=B-1|0;}while(A>>>0<B>>>0)}}while(0);p=wc[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(x>>>0<y>>>0){v=n+1|0;u=n+4|0;t=n+8|0;m=j;o=0;C=0;D=x;while(1){E=(a[w]&1)==0;do{if((a[(E?v:c[t>>2]|0)+C|0]|0)>0){if((o|0)!=(a[(E?v:c[t>>2]|0)+C|0]|0)){F=C;G=o;break}H=c[h>>2]|0;c[h>>2]=H+1;a[H]=p;H=a[w]|0;if((H&1)==0){I=(H&255)>>>1}else{I=c[u>>2]|0}F=(C>>>0<(I-1|0)>>>0)+C|0;G=0}else{F=C;G=o}}while(0);E=Fc[c[(c[m>>2]|0)+28>>2]&63](q,a[D]|0)|0;H=c[h>>2]|0;c[h>>2]=H+1;a[H]=E;E=D+1|0;if(E>>>0<y>>>0){o=G+1|0;C=F;D=E}else{break}}}D=f+(x-b)|0;C=c[h>>2]|0;if((D|0)==(C|0)){break}o=C-1|0;if(o>>>0>D>>>0){J=D;K=o}else{break}do{o=a[J]|0;a[J]=a[K]|0;a[K]=o;J=J+1|0;K=K-1|0;}while(J>>>0<K>>>0)}}while(0);c:do{if(y>>>0<e>>>0){K=j;J=y;while(1){x=a[J]|0;if(x<<24>>24==46){break}F=Fc[c[(c[K>>2]|0)+28>>2]&63](q,x)|0;x=c[h>>2]|0;c[h>>2]=x+1;a[x]=F;F=J+1|0;if(F>>>0<e>>>0){J=F}else{L=F;break c}}K=wc[c[(c[r>>2]|0)+12>>2]&255](s)|0;F=c[h>>2]|0;c[h>>2]=F+1;a[F]=K;L=J+1|0}else{L=y}}while(0);Hc[c[(c[j>>2]|0)+32>>2]&15](q,L,e,c[h>>2]|0)|0;q=(c[h>>2]|0)+(l-L)|0;c[h>>2]=q;if((d|0)==(e|0)){M=q;c[g>>2]=M;Nh(n);i=k;return}M=f+(d-b)|0;c[g>>2]=M;Nh(n);i=k;return}function Pk(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);l=c[4980]|0;if(y){w=Hk(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=Hk(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[21992]|0)==0;if(y){do{if(w){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);l=Nk(m,c[4980]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);w=Nk(m,c[4980]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}yq();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==32){F=A}else if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=jq(C<<1)|0;if((G|0)!=0){H=G;I=G;J=E;break}yq();H=0;I=0;J=c[m>>2]|0}}while(0);gi(q,f);Ok(J,F,A,H,o,p,q);oh(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];Gd(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){kq(I)}if((D|0)==0){i=d;return}kq(D);i=d;return}function Qk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+104|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+88|0;n=d+96|0;o=d+16|0;a[o]=a[8272]|0;a[o+1|0]=a[8273]|0;a[o+2|0]=a[8274]|0;a[o+3|0]=a[8275]|0;a[o+4|0]=a[8276]|0;a[o+5|0]=a[8277]|0;p=k|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);q=Hk(p,20,c[4980]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==16){r=a[p]|0;if((r<<24>>24|0)==45|(r<<24>>24|0)==43){s=k+1|0;break}if(!((q|0)>1&r<<24>>24==48)){t=12;break}r=a[k+1|0]|0;if(!((r<<24>>24|0)==120|(r<<24>>24|0)==88)){t=12;break}s=k+2|0}else if((h|0)==32){s=o}else{t=12}}while(0);if((t|0)==12){s=p}gi(m,f);t=m|0;m=c[t>>2]|0;if(!((c[5358]|0)==-1)){c[j>>2]=21432;c[j+4>>2]=18;c[j+8>>2]=0;Ih(21432,j,116)}j=(c[5359]|0)-1|0;h=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-h>>2>>>0>j>>>0){r=c[h+(j<<2)>>2]|0;if((r|0)==0){break}oh(c[t>>2]|0)|0;u=l|0;Hc[c[(c[r>>2]|0)+32>>2]&15](r,p,o,u)|0;r=l+q|0;if((s|0)==(o|0)){v=r;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;Gd(b,n,u,v,r,f,g);i=d;return}v=l+(s-k)|0;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;Gd(b,n,u,v,r,f,g);i=d;return}}while(0);d=ic(4)|0;Qp(d);Cb(d|0,14952,168)}function Rk(a){a=a|0;mh(a|0);sq(a);return}function Sk(a){a=a|0;mh(a|0);return}function Tk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];Bc[o&63](b,d,l,f,g,h&1);i=j;return}gi(m,f);f=m|0;m=c[f>>2]|0;if(!((c[5260]|0)==-1)){c[k>>2]=21040;c[k+4>>2]=18;c[k+8>>2]=0;Ih(21040,k,116)}k=(c[5261]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;oh(c[f>>2]|0)|0;o=c[l>>2]|0;if(h){vc[c[o+24>>2]&127](n,d)}else{vc[c[o+28>>2]&127](n,d)}d=n;o=a[d]|0;if((o&1)==0){l=n+4|0;p=l;q=l;r=n+8|0}else{l=n+8|0;p=c[l>>2]|0;q=n+4|0;r=l}l=e|0;s=p;t=o;while(1){if((t&1)==0){u=(t&255)>>>1;v=q}else{u=c[q>>2]|0;v=c[r>>2]|0}if((s|0)==(v+(u<<2)|0)){break}o=c[s>>2]|0;w=c[l>>2]|0;do{if((w|0)!=0){x=w+24|0;y=c[x>>2]|0;if((y|0)==(c[w+28>>2]|0)){z=Fc[c[(c[w>>2]|0)+52>>2]&63](w,o)|0}else{c[x>>2]=y+4;c[y>>2]=o;z=o}if(!((z|0)==-1)){break}c[l>>2]=0}}while(0);s=s+4|0;t=a[d]|0}c[b>>2]=c[l>>2];Zh(n);i=j;return}}while(0);j=ic(4)|0;Qp(j);Cb(j|0,14952,168)}function Uk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[8264]|0;a[q+1|0]=a[8265]|0;a[q+2|0]=a[8266]|0;a[q+3|0]=a[8267]|0;a[q+4|0]=a[8268]|0;a[q+5|0]=a[8269]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=k|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);t=Hk(u,12,c[4980]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==32){w=q}else if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;gi(o,f);Vk(u,w,q,x,m,n,o);oh(c[o>>2]|0)|0;c[p>>2]=c[e>>2];Wk(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function Vk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[5356]|0)==-1)){c[m>>2]=21424;c[m+4>>2]=18;c[m+8>>2]=0;Ih(21424,m,116)}m=(c[5357]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=ic(4)|0;r=q;Qp(r);Cb(q|0,14952,168)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=ic(4)|0;r=q;Qp(r);Cb(q|0,14952,168)}q=j;r=c[o>>2]|0;if(!((c[5260]|0)==-1)){c[l>>2]=21040;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21040,l,116)}l=(c[5261]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=ic(4)|0;t=s;Qp(t);Cb(s|0,14952,168)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=ic(4)|0;t=s;Qp(t);Cb(s|0,14952,168)}s=r;vc[c[(c[r>>2]|0)+20>>2]&127](n,s);t=n;l=a[t]|0;if((l&1)==0){u=(l&255)>>>1}else{u=c[n+4>>2]|0}do{if((u|0)==0){Hc[c[(c[j>>2]|0)+48>>2]&15](q,b,e,f)|0;l=f+(e-b<<2)|0;c[h>>2]=l;v=l}else{c[h>>2]=f;l=a[b]|0;if((l<<24>>24|0)==45|(l<<24>>24|0)==43){o=Fc[c[(c[j>>2]|0)+44>>2]&63](q,l)|0;l=c[h>>2]|0;c[h>>2]=l+4;c[l>>2]=o;w=b+1|0}else{w=b}do{if((e-w|0)>1){if((a[w]|0)!=48){x=w;break}o=w+1|0;l=a[o]|0;if(!((l<<24>>24|0)==120|(l<<24>>24|0)==88)){x=w;break}l=j;m=Fc[c[(c[l>>2]|0)+44>>2]&63](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+4;c[p>>2]=m;m=Fc[c[(c[l>>2]|0)+44>>2]&63](q,a[o]|0)|0;o=c[h>>2]|0;c[h>>2]=o+4;c[o>>2]=m;x=w+2|0}else{x=w}}while(0);do{if((x|0)!=(e|0)){m=e-1|0;if(m>>>0>x>>>0){y=x;z=m}else{break}do{m=a[y]|0;a[y]=a[z]|0;a[z]=m;y=y+1|0;z=z-1|0;}while(y>>>0<z>>>0)}}while(0);m=wc[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(x>>>0<e>>>0){o=n+1|0;l=j;p=n+4|0;A=n+8|0;B=0;C=0;D=x;while(1){E=(a[t]&1)==0;do{if((a[(E?o:c[A>>2]|0)+C|0]|0)==0){F=C;G=B}else{if((B|0)!=(a[(E?o:c[A>>2]|0)+C|0]|0)){F=C;G=B;break}H=c[h>>2]|0;c[h>>2]=H+4;c[H>>2]=m;H=a[t]|0;if((H&1)==0){I=(H&255)>>>1}else{I=c[p>>2]|0}F=(C>>>0<(I-1|0)>>>0)+C|0;G=0}}while(0);E=Fc[c[(c[l>>2]|0)+44>>2]&63](q,a[D]|0)|0;H=c[h>>2]|0;J=H+4|0;c[h>>2]=J;c[H>>2]=E;E=D+1|0;if(E>>>0<e>>>0){B=G+1|0;C=F;D=E}else{K=J;break}}}else{K=c[h>>2]|0}D=f+(x-b<<2)|0;if((D|0)==(K|0)){v=K;break}C=K-4|0;if(C>>>0>D>>>0){L=D;M=C}else{v=K;break}while(1){C=c[L>>2]|0;c[L>>2]=c[M>>2];c[M>>2]=C;C=L+4|0;D=M-4|0;if(C>>>0<D>>>0){L=C;M=D}else{v=K;break}}}}while(0);if((d|0)==(e|0)){N=v;c[g>>2]=N;Nh(n);i=k;return}N=f+(d-b<<2)|0;c[g>>2]=N;Nh(n);i=k;return}function Wk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g>>2;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;g=h>>2;do{if((h|0)>0){if((yc[c[(c[d>>2]|0)+48>>2]&63](d,e,g)|0)==(g|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){Yh(l,q,j);if((a[l]&1)==0){r=l+4|0}else{r=c[l+8>>2]|0}if((yc[c[(c[d>>2]|0)+48>>2]&63](d,r,q)|0)==(q|0)){Zh(l);break}c[m>>2]=0;c[b>>2]=0;Zh(l);i=k;return}}while(0);l=n-o|0;o=l>>2;do{if((l|0)>0){if((yc[c[(c[d>>2]|0)+48>>2]&63](d,f,o)|0)==(o|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function Xk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+200|0;o=d+208|0;p=d+216|0;q=d+224|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=l|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);v=Hk(u,22,c[4980]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;gi(p,f);Vk(u,w,r,x,n,o,p);oh(c[p>>2]|0)|0;c[q>>2]=c[e>>2];Wk(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function Yk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[8264]|0;a[q+1|0]=a[8265]|0;a[q+2|0]=a[8266]|0;a[q+3|0]=a[8267]|0;a[q+4|0]=a[8268]|0;a[q+5|0]=a[8269]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=117}}while(0);u=k|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);v=Hk(u,12,c[4980]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+v|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=k+2|0}else if((h|0)==32){w=q}else{x=22}}while(0);if((x|0)==22){w=u}x=l|0;gi(o,f);Vk(u,w,q,x,m,n,o);oh(c[o>>2]|0)|0;c[p>>2]=c[e>>2];Wk(b,p,x,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}function Zk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+240|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+208|0;o=d+216|0;p=d+224|0;q=d+232|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=117}}while(0);u=l|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);v=Hk(u,23,c[4980]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((v|0)>1&s<<24>>24==48)){x=22;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){x=22;break}w=l+2|0}else{x=22}}while(0);if((x|0)==22){w=u}x=m|0;gi(p,f);Vk(u,w,r,x,n,o,p);oh(c[p>>2]|0)|0;c[q>>2]=c[e>>2];Wk(b,q,x,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}function _k(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[x]=97;y=0;break}else{a[x]=65;y=0;break}}else{a[x]=46;v=x+2|0;a[x+1|0]=42;if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);l=c[4980]|0;if(y){w=Hk(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=Hk(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[21992]|0)==0;if(y){do{if(w){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);l=Nk(m,c[4980]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);w=Nk(m,c[4980]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}yq();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else if((B|0)==32){F=A}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=jq(C<<3)|0;B=G;if((G|0)!=0){H=B;I=B;J=E;break}yq();H=B;I=B;J=c[m>>2]|0}}while(0);gi(q,f);$k(J,F,A,H,o,p,q);oh(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];Wk(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){kq(I)}if((D|0)==0){i=d;return}kq(D);i=d;return}function $k(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;k=i;i=i+48|0;l=k|0;m=k+16|0;n=k+32|0;o=j|0;j=c[o>>2]|0;if(!((c[5356]|0)==-1)){c[m>>2]=21424;c[m+4>>2]=18;c[m+8>>2]=0;Ih(21424,m,116)}m=(c[5357]|0)-1|0;p=c[j+8>>2]|0;if(!((c[j+12>>2]|0)-p>>2>>>0>m>>>0)){q=ic(4)|0;r=q;Qp(r);Cb(q|0,14952,168)}j=c[p+(m<<2)>>2]|0;if((j|0)==0){q=ic(4)|0;r=q;Qp(r);Cb(q|0,14952,168)}q=j;r=c[o>>2]|0;if(!((c[5260]|0)==-1)){c[l>>2]=21040;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21040,l,116)}l=(c[5261]|0)-1|0;o=c[r+8>>2]|0;if(!((c[r+12>>2]|0)-o>>2>>>0>l>>>0)){s=ic(4)|0;t=s;Qp(t);Cb(s|0,14952,168)}r=c[o+(l<<2)>>2]|0;if((r|0)==0){s=ic(4)|0;t=s;Qp(t);Cb(s|0,14952,168)}s=r;vc[c[(c[r>>2]|0)+20>>2]&127](n,s);c[h>>2]=f;t=a[b]|0;if((t<<24>>24|0)==45|(t<<24>>24|0)==43){l=Fc[c[(c[j>>2]|0)+44>>2]&63](q,t)|0;t=c[h>>2]|0;c[h>>2]=t+4;c[t>>2]=l;u=b+1|0}else{u=b}l=e;a:do{if((l-u|0)>1){if((a[u]|0)!=48){v=u;w=34;break}t=u+1|0;o=a[t]|0;if(!((o<<24>>24|0)==120|(o<<24>>24|0)==88)){v=u;w=34;break}o=j;m=Fc[c[(c[o>>2]|0)+44>>2]&63](q,48)|0;p=c[h>>2]|0;c[h>>2]=p+4;c[p>>2]=m;m=u+2|0;p=Fc[c[(c[o>>2]|0)+44>>2]&63](q,a[t]|0)|0;t=c[h>>2]|0;c[h>>2]=t+4;c[t>>2]=p;p=m;while(1){if(!(p>>>0<e>>>0)){x=m;y=p;break a}t=a[p]|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);if((Sa(t<<24>>24|0,c[4980]|0)|0)==0){x=m;y=p;break}else{p=p+1|0}}}else{v=u;w=34}}while(0);b:do{if((w|0)==34){while(1){w=0;if(!(v>>>0<e>>>0)){x=u;y=v;break b}p=a[v]|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);if((gb(p<<24>>24|0,c[4980]|0)|0)==0){x=u;y=v;break}else{v=v+1|0;w=34}}}}while(0);w=n;v=a[w]|0;if((v&1)==0){z=(v&255)>>>1}else{z=c[n+4>>2]|0}do{if((z|0)==0){Hc[c[(c[j>>2]|0)+48>>2]&15](q,x,y,c[h>>2]|0)|0;v=(c[h>>2]|0)+(y-x<<2)|0;c[h>>2]=v;A=v}else{do{if((x|0)!=(y|0)){v=y-1|0;if(v>>>0>x>>>0){B=x;C=v}else{break}do{v=a[B]|0;a[B]=a[C]|0;a[C]=v;B=B+1|0;C=C-1|0;}while(B>>>0<C>>>0)}}while(0);p=wc[c[(c[r>>2]|0)+16>>2]&255](s)|0;if(x>>>0<y>>>0){v=n+1|0;u=n+4|0;t=n+8|0;m=j;o=0;D=0;E=x;while(1){F=(a[w]&1)==0;do{if((a[(F?v:c[t>>2]|0)+D|0]|0)>0){if((o|0)!=(a[(F?v:c[t>>2]|0)+D|0]|0)){G=D;H=o;break}I=c[h>>2]|0;c[h>>2]=I+4;c[I>>2]=p;I=a[w]|0;if((I&1)==0){J=(I&255)>>>1}else{J=c[u>>2]|0}G=(D>>>0<(J-1|0)>>>0)+D|0;H=0}else{G=D;H=o}}while(0);F=Fc[c[(c[m>>2]|0)+44>>2]&63](q,a[E]|0)|0;I=c[h>>2]|0;K=I+4|0;c[h>>2]=K;c[I>>2]=F;F=E+1|0;if(F>>>0<y>>>0){o=H+1|0;D=G;E=F}else{L=K;break}}}else{L=c[h>>2]|0}E=f+(x-b<<2)|0;if((E|0)==(L|0)){A=L;break}D=L-4|0;if(D>>>0>E>>>0){M=E;N=D}else{A=L;break}while(1){D=c[M>>2]|0;c[M>>2]=c[N>>2];c[N>>2]=D;D=M+4|0;E=N-4|0;if(D>>>0<E>>>0){M=D;N=E}else{A=L;break}}}}while(0);c:do{if(y>>>0<e>>>0){L=j;N=y;while(1){M=a[N]|0;if(M<<24>>24==46){break}x=Fc[c[(c[L>>2]|0)+44>>2]&63](q,M)|0;M=c[h>>2]|0;G=M+4|0;c[h>>2]=G;c[M>>2]=x;x=N+1|0;if(x>>>0<e>>>0){N=x}else{O=x;P=G;break c}}L=wc[c[(c[r>>2]|0)+12>>2]&255](s)|0;G=c[h>>2]|0;x=G+4|0;c[h>>2]=x;c[G>>2]=L;O=N+1|0;P=x}else{O=y;P=A}}while(0);Hc[c[(c[j>>2]|0)+48>>2]&15](q,O,e,P)|0;P=(c[h>>2]|0)+(l-O<<2)|0;c[h>>2]=P;if((d|0)==(e|0)){Q=P;c[g>>2]=Q;Nh(n);i=k;return}Q=f+(d-b<<2)|0;c[g>>2]=Q;Nh(n);i=k;return}function al(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){x=w}else{a[w]=35;x=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[x]=76;v=x+1|0;if((k&1|0)==0){a[v]=97;y=0;break}else{a[v]=65;y=0;break}}else{a[x]=46;a[x+1|0]=42;a[x+2|0]=76;v=x+3|0;if((w|0)==256){if((k&1|0)==0){a[v]=101;y=1;break}else{a[v]=69;y=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;y=1;break}else{a[v]=70;y=1;break}}else{if((k&1|0)==0){a[v]=103;y=1;break}else{a[v]=71;y=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);l=c[4980]|0;if(y){w=Hk(k,30,l,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;A=w}else{w=Hk(k,30,l,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;A=w}do{if((A|0)>29){w=(a[21992]|0)==0;if(y){do{if(w){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);l=Nk(m,c[4980]|0,t,(z=i,i=i+16|0,c[z>>2]=c[f+8>>2],h[z+8>>3]=j,z)|0)|0;i=z;B=l}else{do{if(w){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);w=Nk(m,c[4980]|0,t,(z=i,i=i+8|0,h[z>>3]=j,z)|0)|0;i=z;B=w}w=c[m>>2]|0;if((w|0)!=0){C=B;D=w;E=w;break}yq();w=c[m>>2]|0;C=B;D=w;E=w}else{C=A;D=0;E=c[m>>2]|0}}while(0);A=E+C|0;B=c[u>>2]&176;do{if((B|0)==16){u=a[E]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){F=E+1|0;break}if(!((C|0)>1&u<<24>>24==48)){G=53;break}u=a[E+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){G=53;break}F=E+2|0}else if((B|0)==32){F=A}else{G=53}}while(0);if((G|0)==53){F=E}do{if((E|0)==(k|0)){H=n|0;I=0;J=k}else{G=jq(C<<3)|0;B=G;if((G|0)!=0){H=B;I=B;J=E;break}yq();H=B;I=B;J=c[m>>2]|0}}while(0);gi(q,f);$k(J,F,A,H,o,p,q);oh(c[q>>2]|0)|0;q=e|0;c[s>>2]=c[q>>2];Wk(r,s,H,c[o>>2]|0,c[p>>2]|0,f,g);g=c[r>>2]|0;c[q>>2]=g;c[b>>2]=g;if((I|0)!=0){kq(I)}if((D|0)==0){i=d;return}kq(D);i=d;return}function bl(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+216|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+200|0;n=d+208|0;o=d+16|0;a[o]=a[8272]|0;a[o+1|0]=a[8273]|0;a[o+2|0]=a[8274]|0;a[o+3|0]=a[8275]|0;a[o+4|0]=a[8276]|0;a[o+5|0]=a[8277]|0;p=k|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);q=Hk(p,20,c[4980]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==16){r=a[p]|0;if((r<<24>>24|0)==45|(r<<24>>24|0)==43){s=k+1|0;break}if(!((q|0)>1&r<<24>>24==48)){t=12;break}r=a[k+1|0]|0;if(!((r<<24>>24|0)==120|(r<<24>>24|0)==88)){t=12;break}s=k+2|0}else if((h|0)==32){s=o}else{t=12}}while(0);if((t|0)==12){s=p}gi(m,f);t=m|0;m=c[t>>2]|0;if(!((c[5356]|0)==-1)){c[j>>2]=21424;c[j+4>>2]=18;c[j+8>>2]=0;Ih(21424,j,116)}j=(c[5357]|0)-1|0;h=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-h>>2>>>0>j>>>0){r=c[h+(j<<2)>>2]|0;if((r|0)==0){break}oh(c[t>>2]|0)|0;u=l|0;Hc[c[(c[r>>2]|0)+48>>2]&15](r,p,o,u)|0;r=l+(q<<2)|0;if((s|0)==(o|0)){v=r;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;Wk(b,n,u,v,r,f,g);i=d;return}v=l+(s-k<<2)|0;w=e|0;x=c[w>>2]|0;y=n|0;c[y>>2]=x;Wk(b,n,u,v,r,f,g);i=d;return}}while(0);d=ic(4)|0;Qp(d);Cb(d|0,14952,168)}function cl(d,e,f,g,h,j,k,l,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0;n=i;i=i+48|0;o=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[o>>2];o=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[o>>2];o=n|0;p=n+16|0;q=n+24|0;r=n+32|0;s=n+40|0;gi(p,h);t=p|0;p=c[t>>2]|0;if(!((c[5358]|0)==-1)){c[o>>2]=21432;c[o+4>>2]=18;c[o+8>>2]=0;Ih(21432,o,116)}o=(c[5359]|0)-1|0;u=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-u>>2>>>0>o>>>0){v=c[u+(o<<2)>>2]|0;if((v|0)==0){break}w=v;oh(c[t>>2]|0)|0;c[j>>2]=0;x=f|0;a:do{if((l|0)==(m|0)){y=67}else{z=g|0;A=v;B=v;C=v+8|0;D=e;E=r|0;F=s|0;G=q|0;H=l;I=0;b:while(1){J=I;while(1){if((J|0)!=0){y=67;break a}K=c[x>>2]|0;do{if((K|0)==0){L=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){L=K;break}if(!((wc[c[(c[K>>2]|0)+36>>2]&255](K)|0)==-1)){L=K;break}c[x>>2]=0;L=0}}while(0);K=(L|0)==0;M=c[z>>2]|0;c:do{if((M|0)==0){y=20}else{do{if((c[M+12>>2]|0)==(c[M+16>>2]|0)){if(!((wc[c[(c[M>>2]|0)+36>>2]&255](M)|0)==-1)){break}c[z>>2]=0;y=20;break c}}while(0);if(K){N=M}else{y=21;break b}}}while(0);if((y|0)==20){y=0;if(K){y=21;break b}else{N=0}}if((yc[c[(c[A>>2]|0)+36>>2]&63](w,a[H]|0,0)|0)<<24>>24==37){y=24;break}M=a[H]|0;if(!(M<<24>>24<0)){O=c[C>>2]|0;if(!((b[O+(M<<24>>24<<1)>>1]&8192)==0)){P=H;y=35;break}}Q=L+12|0;M=c[Q>>2]|0;R=L+16|0;if((M|0)==(c[R>>2]|0)){S=(wc[c[(c[L>>2]|0)+36>>2]&255](L)|0)&255}else{S=a[M]|0}M=Fc[c[(c[B>>2]|0)+12>>2]&63](w,S)|0;if(M<<24>>24==(Fc[c[(c[B>>2]|0)+12>>2]&63](w,a[H]|0)|0)<<24>>24){y=62;break}c[j>>2]=4;J=4}d:do{if((y|0)==24){y=0;J=H+1|0;if((J|0)==(m|0)){y=25;break b}M=yc[c[(c[A>>2]|0)+36>>2]&63](w,a[J]|0,0)|0;if((M<<24>>24|0)==69|(M<<24>>24|0)==48){T=H+2|0;if((T|0)==(m|0)){y=28;break b}U=M;V=yc[c[(c[A>>2]|0)+36>>2]&63](w,a[T]|0,0)|0;W=T}else{U=0;V=M;W=J}J=c[(c[D>>2]|0)+36>>2]|0;c[E>>2]=L;c[F>>2]=N;Ec[J&7](q,e,r,s,h,j,k,V,U);c[x>>2]=c[G>>2];X=W+1|0}else if((y|0)==35){while(1){y=0;J=P+1|0;if((J|0)==(m|0)){Y=m;break}M=a[J]|0;if(M<<24>>24<0){Y=J;break}if((b[O+(M<<24>>24<<1)>>1]&8192)==0){Y=J;break}else{P=J;y=35}}K=L;J=N;M=N;while(1){do{if((K|0)==0){Z=0}else{if((c[K+12>>2]|0)!=(c[K+16>>2]|0)){Z=K;break}if(!((wc[c[(c[K>>2]|0)+36>>2]&255](K)|0)==-1)){Z=K;break}c[x>>2]=0;Z=0}}while(0);T=(Z|0)==0;do{if((J|0)==0){_=M;y=48}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(T){$=J;aa=M;break}else{X=Y;break d}}if((wc[c[(c[J>>2]|0)+36>>2]&255](J)|0)==-1){c[z>>2]=0;_=0;y=48;break}else{if(T^(M|0)==0){$=M;aa=M;break}else{X=Y;break d}}}}while(0);if((y|0)==48){y=0;if(T){X=Y;break d}else{$=0;aa=_}}ba=Z+12|0;ca=c[ba>>2]|0;da=Z+16|0;if((ca|0)==(c[da>>2]|0)){ea=(wc[c[(c[Z>>2]|0)+36>>2]&255](Z)|0)&255}else{ea=a[ca]|0}if(ea<<24>>24<0){X=Y;break d}if((b[(c[C>>2]|0)+(ea<<24>>24<<1)>>1]&8192)==0){X=Y;break d}ca=c[ba>>2]|0;if((ca|0)==(c[da>>2]|0)){wc[c[(c[Z>>2]|0)+40>>2]&255](Z)|0;K=Z;J=$;M=aa;continue}else{c[ba>>2]=ca+1;K=Z;J=$;M=aa;continue}}}else if((y|0)==62){y=0;M=c[Q>>2]|0;if((M|0)==(c[R>>2]|0)){wc[c[(c[L>>2]|0)+40>>2]&255](L)|0}else{c[Q>>2]=M+1}X=H+1|0}}while(0);if((X|0)==(m|0)){y=67;break a}H=X;I=c[j>>2]|0}if((y|0)==21){c[j>>2]=4;fa=L;break}else if((y|0)==25){c[j>>2]=4;fa=L;break}else if((y|0)==28){c[j>>2]=4;fa=L;break}}}while(0);if((y|0)==67){fa=c[x>>2]|0}w=f|0;do{if((fa|0)==0){ga=0}else{if((c[fa+12>>2]|0)!=(c[fa+16>>2]|0)){ga=fa;break}if(!((wc[c[(c[fa>>2]|0)+36>>2]&255](fa)|0)==-1)){ga=fa;break}c[w>>2]=0;ga=0}}while(0);w=(ga|0)==0;x=g|0;v=c[x>>2]|0;e:do{if((v|0)==0){y=77}else{do{if((c[v+12>>2]|0)==(c[v+16>>2]|0)){if(!((wc[c[(c[v>>2]|0)+36>>2]&255](v)|0)==-1)){break}c[x>>2]=0;y=77;break e}}while(0);if(!w){break}ha=d|0;c[ha>>2]=ga;i=n;return}}while(0);do{if((y|0)==77){if(w){break}ha=d|0;c[ha>>2]=ga;i=n;return}}while(0);c[j>>2]=c[j>>2]|2;ha=d|0;c[ha>>2]=ga;i=n;return}}while(0);n=ic(4)|0;Qp(n);Cb(n|0,14952,168)}function dl(a){a=a|0;mh(a|0);sq(a);return}function el(a){a=a|0;mh(a|0);return}function fl(a){a=a|0;return 2}



function gl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];cl(a,b,k,l,f,g,h,8256,8264);i=j;return}function hl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=wc[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[o]|0;if((f&1)==0){p=(f&255)>>>1;q=o+1|0;r=o+1|0}else{f=c[o+8>>2]|0;p=c[o+4>>2]|0;q=f;r=f}cl(b,d,l,m,g,h,j,q,r+p|0);i=k;return}function il(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;gi(m,f);f=m|0;m=c[f>>2]|0;if(!((c[5358]|0)==-1)){c[l>>2]=21432;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21432,l,116)}l=(c[5359]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}oh(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=wc[c[c[q>>2]>>2]&255](q)|0;c[k>>2]=p;p=(Fj(d,k,r,r+168|0,o,g,0)|0)-r|0;if((p|0)>=168){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+24>>2]=((p|0)/12|0|0)%7|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=ic(4)|0;Qp(j);Cb(j|0,14952,168)}function jl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;gi(m,f);f=m|0;m=c[f>>2]|0;if(!((c[5358]|0)==-1)){c[l>>2]=21432;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21432,l,116)}l=(c[5359]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}oh(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=wc[c[(c[q>>2]|0)+4>>2]&255](q)|0;c[k>>2]=p;p=(Fj(d,k,r,r+288|0,o,g,0)|0)-r|0;if((p|0)>=288){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+16>>2]=((p|0)/12|0|0)%12|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=ic(4)|0;Qp(j);Cb(j|0,14952,168)}function kl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;gi(l,f);f=l|0;l=c[f>>2]|0;if(!((c[5358]|0)==-1)){c[k>>2]=21432;c[k+4>>2]=18;c[k+8>>2]=0;Ih(21432,k,116)}k=(c[5359]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}oh(c[f>>2]|0)|0;c[j>>2]=c[e>>2];o=pl(d,j,g,n,4)|0;if((c[g>>2]&4|0)!=0){p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}if((o|0)<69){s=o+2e3|0}else{s=(o-69|0)>>>0<31>>>0?o+1900|0:o}c[h+20>>2]=s-1900;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}}while(0);b=ic(4)|0;Qp(b);Cb(b|0,14952,168)}function ll(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+112|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;gi(z,g);_=z|0;z=c[_>>2]|0;if(!((c[5358]|0)==-1)){c[y>>2]=21432;c[y+4>>2]=18;c[y+8>>2]=0;Ih(21432,y,116)}y=(c[5359]|0)-1|0;$=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-$>>2>>>0>y>>>0){aa=c[$+(y<<2)>>2]|0;if((aa|0)==0){break}ba=aa;oh(c[_>>2]|0)|0;a:do{switch(k<<24>>24|0){case 98:case 66:case 104:{aa=c[f>>2]|0;ca=d+8|0;da=wc[c[(c[ca>>2]|0)+4>>2]&255](ca)|0;c[w>>2]=aa;aa=(Fj(e,w,da,da+288|0,ba,h,0)|0)-da|0;if((aa|0)>=288){break a}c[j+16>>2]=((aa|0)/12|0|0)%12|0;break};case 120:{aa=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];Cc[aa&127](b,d,U,V,g,h,j);i=l;return};case 68:{aa=e|0;c[E>>2]=c[aa>>2];c[F>>2]=c[f>>2];cl(D,d,E,F,g,h,j,8248,8256);c[aa>>2]=c[D>>2];break};case 110:case 116:{c[J>>2]=c[f>>2];ml(0,e,J,h,ba);break};case 112:{c[K>>2]=c[f>>2];nl(d,j+8|0,e,K,h,ba);break};case 119:{c[o>>2]=c[f>>2];aa=pl(e,o,h,ba,1)|0;da=c[h>>2]|0;if((da&4|0)==0&(aa|0)<7){c[j+24>>2]=aa;break a}else{c[h>>2]=da|4;break a}break};case 114:{da=e|0;c[M>>2]=c[da>>2];c[N>>2]=c[f>>2];cl(L,d,M,N,g,h,j,8224,8235);c[da>>2]=c[L>>2];break};case 82:{da=e|0;c[P>>2]=c[da>>2];c[Q>>2]=c[f>>2];cl(O,d,P,Q,g,h,j,8216,8221);c[da>>2]=c[O>>2];break};case 88:{da=d+8|0;aa=wc[c[(c[da>>2]|0)+24>>2]&255](da)|0;da=e|0;c[X>>2]=c[da>>2];c[Y>>2]=c[f>>2];ca=a[aa]|0;if((ca&1)==0){ea=(ca&255)>>>1;fa=aa+1|0;ga=aa+1|0}else{ca=c[aa+8>>2]|0;ea=c[aa+4>>2]|0;fa=ca;ga=ca}cl(W,d,X,Y,g,h,j,fa,ga+ea|0);c[da>>2]=c[W>>2];break};case 84:{da=e|0;c[S>>2]=c[da>>2];c[T>>2]=c[f>>2];cl(R,d,S,T,g,h,j,8208,8216);c[da>>2]=c[R>>2];break};case 70:{da=e|0;c[H>>2]=c[da>>2];c[I>>2]=c[f>>2];cl(G,d,H,I,g,h,j,8240,8248);c[da>>2]=c[G>>2];break};case 99:{da=d+8|0;ca=wc[c[(c[da>>2]|0)+12>>2]&255](da)|0;da=e|0;c[B>>2]=c[da>>2];c[C>>2]=c[f>>2];aa=a[ca]|0;if((aa&1)==0){ha=(aa&255)>>>1;ia=ca+1|0;ja=ca+1|0}else{aa=c[ca+8>>2]|0;ha=c[ca+4>>2]|0;ia=aa;ja=aa}cl(A,d,B,C,g,h,j,ia,ja+ha|0);c[da>>2]=c[A>>2];break};case 97:case 65:{da=c[f>>2]|0;aa=d+8|0;ca=wc[c[c[aa>>2]>>2]&255](aa)|0;c[x>>2]=da;da=(Fj(e,x,ca,ca+168|0,ba,h,0)|0)-ca|0;if((da|0)>=168){break a}c[j+24>>2]=((da|0)/12|0|0)%7|0;break};case 100:case 101:{da=j+12|0;c[v>>2]=c[f>>2];ca=pl(e,v,h,ba,2)|0;aa=c[h>>2]|0;do{if((aa&4|0)==0){if(!((ca-1|0)>>>0<31>>>0)){break}c[da>>2]=ca;break a}}while(0);c[h>>2]=aa|4;break};case 72:{c[u>>2]=c[f>>2];ca=pl(e,u,h,ba,2)|0;da=c[h>>2]|0;if((da&4|0)==0&(ca|0)<24){c[j+8>>2]=ca;break a}else{c[h>>2]=da|4;break a}break};case 77:{c[q>>2]=c[f>>2];da=pl(e,q,h,ba,2)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(da|0)<60){c[j+4>>2]=da;break a}else{c[h>>2]=ca|4;break a}break};case 73:{ca=j+8|0;c[t>>2]=c[f>>2];da=pl(e,t,h,ba,2)|0;ka=c[h>>2]|0;do{if((ka&4|0)==0){if(!((da-1|0)>>>0<12>>>0)){break}c[ca>>2]=da;break a}}while(0);c[h>>2]=ka|4;break};case 121:{c[n>>2]=c[f>>2];da=pl(e,n,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}if((da|0)<69){la=da+2e3|0}else{la=(da-69|0)>>>0<31>>>0?da+1900|0:da}c[j+20>>2]=la-1900;break};case 109:{c[r>>2]=c[f>>2];da=(pl(e,r,h,ba,2)|0)-1|0;ca=c[h>>2]|0;if((ca&4|0)==0&(da|0)<12){c[j+16>>2]=da;break a}else{c[h>>2]=ca|4;break a}break};case 83:{c[p>>2]=c[f>>2];ca=pl(e,p,h,ba,2)|0;da=c[h>>2]|0;if((da&4|0)==0&(ca|0)<61){c[j>>2]=ca;break a}else{c[h>>2]=da|4;break a}break};case 106:{c[s>>2]=c[f>>2];da=pl(e,s,h,ba,3)|0;ca=c[h>>2]|0;if((ca&4|0)==0&(da|0)<366){c[j+28>>2]=da;break a}else{c[h>>2]=ca|4;break a}break};case 37:{c[Z>>2]=c[f>>2];ol(0,e,Z,h,ba);break};case 89:{c[m>>2]=c[f>>2];ca=pl(e,m,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}c[j+20>>2]=ca-1900;break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=ic(4)|0;Qp(l);Cb(l|0,14952,168)}function ml(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;j=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[j>>2];j=e|0;e=f|0;f=h+8|0;a:while(1){h=c[j>>2]|0;do{if((h|0)==0){k=0}else{if((c[h+12>>2]|0)!=(c[h+16>>2]|0)){k=h;break}if((wc[c[(c[h>>2]|0)+36>>2]&255](h)|0)==-1){c[j>>2]=0;k=0;break}else{k=c[j>>2]|0;break}}}while(0);h=(k|0)==0;l=c[e>>2]|0;do{if((l|0)==0){m=12}else{if((c[l+12>>2]|0)!=(c[l+16>>2]|0)){if(h){n=l;break}else{o=l;break a}}if((wc[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1){c[e>>2]=0;m=12;break}else{if(h){n=l;break}else{o=l;break a}}}}while(0);if((m|0)==12){m=0;if(h){o=0;break}else{n=0}}l=c[j>>2]|0;p=c[l+12>>2]|0;if((p|0)==(c[l+16>>2]|0)){q=(wc[c[(c[l>>2]|0)+36>>2]&255](l)|0)&255}else{q=a[p]|0}if(q<<24>>24<0){o=n;break}if((b[(c[f>>2]|0)+(q<<24>>24<<1)>>1]&8192)==0){o=n;break}p=c[j>>2]|0;l=p+12|0;r=c[l>>2]|0;if((r|0)==(c[p+16>>2]|0)){wc[c[(c[p>>2]|0)+40>>2]&255](p)|0;continue}else{c[l>>2]=r+1;continue}}n=c[j>>2]|0;do{if((n|0)==0){s=0}else{if((c[n+12>>2]|0)!=(c[n+16>>2]|0)){s=n;break}if((wc[c[(c[n>>2]|0)+36>>2]&255](n)|0)==-1){c[j>>2]=0;s=0;break}else{s=c[j>>2]|0;break}}}while(0);j=(s|0)==0;b:do{if((o|0)==0){m=32}else{do{if((c[o+12>>2]|0)==(c[o+16>>2]|0)){if(!((wc[c[(c[o>>2]|0)+36>>2]&255](o)|0)==-1)){break}c[e>>2]=0;m=32;break b}}while(0);if(!j){break}i=d;return}}while(0);do{if((m|0)==32){if(j){break}i=d;return}}while(0);c[g>>2]=c[g>>2]|2;i=d;return}function nl(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=b+8|0;b=wc[c[(c[l>>2]|0)+8>>2]&255](l)|0;l=a[b]|0;if((l&1)==0){m=(l&255)>>>1}else{m=c[b+4>>2]|0}l=a[b+12|0]|0;if((l&1)==0){n=(l&255)>>>1}else{n=c[b+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=Fj(e,k,b,b+24|0,h,g,0)|0;g=f-b|0;do{if((f|0)==(b|0)){if((c[d>>2]|0)!=12){break}c[d>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[d>>2]|0;if((g|0)>=12){i=j;return}c[d>>2]=g+12;i=j;return}function ol(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;b=i;h=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[h>>2];h=d|0;d=c[h>>2]|0;do{if((d|0)==0){j=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){j=d;break}if((wc[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[h>>2]=0;j=0;break}else{j=c[h>>2]|0;break}}}while(0);d=(j|0)==0;j=e|0;e=c[j>>2]|0;a:do{if((e|0)==0){k=11}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if(!((wc[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1)){break}c[j>>2]=0;k=11;break a}}while(0);if(d){l=e}else{k=12}}}while(0);if((k|0)==11){if(d){k=12}else{l=0}}if((k|0)==12){c[f>>2]=c[f>>2]|6;i=b;return}d=c[h>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){m=(wc[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{m=a[e]|0}if(!((yc[c[(c[g>>2]|0)+36>>2]&63](g,m,0)|0)<<24>>24==37)){c[f>>2]=c[f>>2]|4;i=b;return}m=c[h>>2]|0;g=m+12|0;e=c[g>>2]|0;if((e|0)==(c[m+16>>2]|0)){wc[c[(c[m>>2]|0)+40>>2]&255](m)|0}else{c[g>>2]=e+1}e=c[h>>2]|0;do{if((e|0)==0){n=0}else{if((c[e+12>>2]|0)!=(c[e+16>>2]|0)){n=e;break}if((wc[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1){c[h>>2]=0;n=0;break}else{n=c[h>>2]|0;break}}}while(0);h=(n|0)==0;b:do{if((l|0)==0){k=31}else{do{if((c[l+12>>2]|0)==(c[l+16>>2]|0)){if(!((wc[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1)){break}c[j>>2]=0;k=31;break b}}while(0);if(!h){break}i=b;return}}while(0);do{if((k|0)==31){if(h){break}i=b;return}}while(0);c[f>>2]=c[f>>2]|2;i=b;return}function pl(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;j=i;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){l=d;break}if((wc[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[k>>2]=0;l=0;break}else{l=c[k>>2]|0;break}}}while(0);d=(l|0)==0;l=e|0;e=c[l>>2]|0;a:do{if((e|0)==0){m=11}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if(!((wc[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1)){break}c[l>>2]=0;m=11;break a}}while(0);if(d){n=e}else{m=12}}}while(0);if((m|0)==11){if(d){m=12}else{n=0}}if((m|0)==12){c[f>>2]=c[f>>2]|6;o=0;i=j;return o|0}d=c[k>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){p=(wc[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{p=a[e]|0}do{if(!(p<<24>>24<0)){e=g+8|0;if((b[(c[e>>2]|0)+(p<<24>>24<<1)>>1]&2048)==0){break}d=g;q=(yc[c[(c[d>>2]|0)+36>>2]&63](g,p,0)|0)<<24>>24;r=c[k>>2]|0;s=r+12|0;t=c[s>>2]|0;if((t|0)==(c[r+16>>2]|0)){wc[c[(c[r>>2]|0)+40>>2]&255](r)|0;u=q;v=h;w=n;x=n}else{c[s>>2]=t+1;u=q;v=h;w=n;x=n}while(1){y=u-48|0;q=v-1|0;t=c[k>>2]|0;do{if((t|0)==0){z=0}else{if((c[t+12>>2]|0)!=(c[t+16>>2]|0)){z=t;break}if((wc[c[(c[t>>2]|0)+36>>2]&255](t)|0)==-1){c[k>>2]=0;z=0;break}else{z=c[k>>2]|0;break}}}while(0);t=(z|0)==0;do{if((w|0)==0){A=0;B=x}else{if((c[w+12>>2]|0)!=(c[w+16>>2]|0)){A=w;B=x;break}if(!((wc[c[(c[w>>2]|0)+36>>2]&255](w)|0)==-1)){A=x;B=x;break}c[l>>2]=0;A=0;B=0}}while(0);C=c[k>>2]|0;if(!((t^(A|0)==0)&(q|0)>0)){m=40;break}s=c[C+12>>2]|0;if((s|0)==(c[C+16>>2]|0)){D=(wc[c[(c[C>>2]|0)+36>>2]&255](C)|0)&255}else{D=a[s]|0}if(D<<24>>24<0){o=y;m=52;break}if((b[(c[e>>2]|0)+(D<<24>>24<<1)>>1]&2048)==0){o=y;m=52;break}s=((yc[c[(c[d>>2]|0)+36>>2]&63](g,D,0)|0)<<24>>24)+(y*10|0)|0;r=c[k>>2]|0;E=r+12|0;F=c[E>>2]|0;if((F|0)==(c[r+16>>2]|0)){wc[c[(c[r>>2]|0)+40>>2]&255](r)|0;u=s;v=q;w=A;x=B;continue}else{c[E>>2]=F+1;u=s;v=q;w=A;x=B;continue}}if((m|0)==40){do{if((C|0)==0){G=0}else{if((c[C+12>>2]|0)!=(c[C+16>>2]|0)){G=C;break}if((wc[c[(c[C>>2]|0)+36>>2]&255](C)|0)==-1){c[k>>2]=0;G=0;break}else{G=c[k>>2]|0;break}}}while(0);d=(G|0)==0;b:do{if((B|0)==0){m=50}else{do{if((c[B+12>>2]|0)==(c[B+16>>2]|0)){if(!((wc[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1)){break}c[l>>2]=0;m=50;break b}}while(0);if(d){o=y}else{break}i=j;return o|0}}while(0);do{if((m|0)==50){if(d){break}else{o=y}i=j;return o|0}}while(0);c[f>>2]=c[f>>2]|2;o=y;i=j;return o|0}else if((m|0)==52){i=j;return o|0}}}while(0);c[f>>2]=c[f>>2]|4;o=0;i=j;return o|0}function ql(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;l=i;i=i+48|0;m=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[m>>2];m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=l|0;n=l+16|0;o=l+24|0;p=l+32|0;q=l+40|0;gi(n,f);r=n|0;n=c[r>>2]|0;if(!((c[5356]|0)==-1)){c[m>>2]=21424;c[m+4>>2]=18;c[m+8>>2]=0;Ih(21424,m,116)}m=(c[5357]|0)-1|0;s=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-s>>2>>>0>m>>>0){t=c[s+(m<<2)>>2]|0;if((t|0)==0){break}u=t;oh(c[r>>2]|0)|0;c[g>>2]=0;v=d|0;a:do{if((j|0)==(k|0)){w=71}else{x=e|0;y=t;z=t;A=t;B=b;C=p|0;D=q|0;E=o|0;F=j;G=0;b:while(1){H=G;while(1){if((H|0)!=0){w=71;break a}I=c[v>>2]|0;do{if((I|0)==0){J=1;K=0}else{L=c[I+12>>2]|0;if((L|0)==(c[I+16>>2]|0)){M=wc[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{M=c[L>>2]|0}if(!((M|0)==-1)){J=0;K=I;break}c[v>>2]=0;J=1;K=0}}while(0);I=c[x>>2]|0;do{if((I|0)==0){w=23}else{L=c[I+12>>2]|0;if((L|0)==(c[I+16>>2]|0)){N=wc[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{N=c[L>>2]|0}if((N|0)==-1){c[x>>2]=0;w=23;break}else{if(J){O=I;break}else{w=25;break b}}}}while(0);if((w|0)==23){w=0;if(J){w=25;break b}else{O=0}}if((yc[c[(c[y>>2]|0)+52>>2]&63](u,c[F>>2]|0,0)|0)<<24>>24==37){w=28;break}if(yc[c[(c[z>>2]|0)+12>>2]&63](u,8192,c[F>>2]|0)|0){P=F;w=38;break}Q=K+12|0;I=c[Q>>2]|0;R=K+16|0;if((I|0)==(c[R>>2]|0)){S=wc[c[(c[K>>2]|0)+36>>2]&255](K)|0}else{S=c[I>>2]|0}I=Fc[c[(c[A>>2]|0)+28>>2]&63](u,S)|0;if((I|0)==(Fc[c[(c[A>>2]|0)+28>>2]&63](u,c[F>>2]|0)|0)){w=66;break}c[g>>2]=4;H=4}c:do{if((w|0)==28){w=0;H=F+4|0;if((H|0)==(k|0)){w=29;break b}I=yc[c[(c[y>>2]|0)+52>>2]&63](u,c[H>>2]|0,0)|0;if((I<<24>>24|0)==69|(I<<24>>24|0)==48){L=F+8|0;if((L|0)==(k|0)){w=32;break b}T=I;U=yc[c[(c[y>>2]|0)+52>>2]&63](u,c[L>>2]|0,0)|0;V=L}else{T=0;U=I;V=H}H=c[(c[B>>2]|0)+36>>2]|0;c[C>>2]=K;c[D>>2]=O;Ec[H&7](o,b,p,q,f,g,h,U,T);c[v>>2]=c[E>>2];W=V+4|0}else if((w|0)==38){while(1){w=0;H=P+4|0;if((H|0)==(k|0)){X=k;break}if(yc[c[(c[z>>2]|0)+12>>2]&63](u,8192,c[H>>2]|0)|0){P=H;w=38}else{X=H;break}}H=K;I=O;L=O;while(1){do{if((H|0)==0){Y=1;Z=0}else{_=c[H+12>>2]|0;if((_|0)==(c[H+16>>2]|0)){$=wc[c[(c[H>>2]|0)+36>>2]&255](H)|0}else{$=c[_>>2]|0}if(!(($|0)==-1)){Y=0;Z=H;break}c[v>>2]=0;Y=1;Z=0}}while(0);do{if((I|0)==0){aa=L;w=53}else{_=c[I+12>>2]|0;if((_|0)==(c[I+16>>2]|0)){ba=wc[c[(c[I>>2]|0)+36>>2]&255](I)|0}else{ba=c[_>>2]|0}if((ba|0)==-1){c[x>>2]=0;aa=0;w=53;break}else{if(Y^(L|0)==0){ca=L;da=L;break}else{W=X;break c}}}}while(0);if((w|0)==53){w=0;if(Y){W=X;break c}else{ca=0;da=aa}}_=Z+12|0;ea=c[_>>2]|0;fa=Z+16|0;if((ea|0)==(c[fa>>2]|0)){ga=wc[c[(c[Z>>2]|0)+36>>2]&255](Z)|0}else{ga=c[ea>>2]|0}if(!(yc[c[(c[z>>2]|0)+12>>2]&63](u,8192,ga)|0)){W=X;break c}ea=c[_>>2]|0;if((ea|0)==(c[fa>>2]|0)){wc[c[(c[Z>>2]|0)+40>>2]&255](Z)|0;H=Z;I=ca;L=da;continue}else{c[_>>2]=ea+4;H=Z;I=ca;L=da;continue}}}else if((w|0)==66){w=0;L=c[Q>>2]|0;if((L|0)==(c[R>>2]|0)){wc[c[(c[K>>2]|0)+40>>2]&255](K)|0}else{c[Q>>2]=L+4}W=F+4|0}}while(0);if((W|0)==(k|0)){w=71;break a}F=W;G=c[g>>2]|0}if((w|0)==25){c[g>>2]=4;ha=K;break}else if((w|0)==29){c[g>>2]=4;ha=K;break}else if((w|0)==32){c[g>>2]=4;ha=K;break}}}while(0);if((w|0)==71){ha=c[v>>2]|0}u=d|0;do{if((ha|0)==0){ia=1;ja=0}else{t=c[ha+12>>2]|0;if((t|0)==(c[ha+16>>2]|0)){ka=wc[c[(c[ha>>2]|0)+36>>2]&255](ha)|0}else{ka=c[t>>2]|0}if(!((ka|0)==-1)){ia=0;ja=ha;break}c[u>>2]=0;ia=1;ja=0}}while(0);u=e|0;v=c[u>>2]|0;do{if((v|0)==0){w=84}else{t=c[v+12>>2]|0;if((t|0)==(c[v+16>>2]|0)){la=wc[c[(c[v>>2]|0)+36>>2]&255](v)|0}else{la=c[t>>2]|0}if((la|0)==-1){c[u>>2]=0;w=84;break}if(!ia){break}ma=a|0;c[ma>>2]=ja;i=l;return}}while(0);do{if((w|0)==84){if(ia){break}ma=a|0;c[ma>>2]=ja;i=l;return}}while(0);c[g>>2]=c[g>>2]|2;ma=a|0;c[ma>>2]=ja;i=l;return}}while(0);l=ic(4)|0;Qp(l);Cb(l|0,14952,168)}function rl(a){a=a|0;mh(a|0);sq(a);return}function sl(a){a=a|0;mh(a|0);return}function tl(a){a=a|0;return 2}function ul(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];ql(a,b,k,l,f,g,h,8176,8208);i=j;return}function vl(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=wc[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[o]|0;if((f&1)==0){p=(f&255)>>>1;q=o+4|0;r=o+4|0}else{f=c[o+8>>2]|0;p=c[o+4>>2]|0;q=f;r=f}ql(b,d,l,m,g,h,j,q,r+(p<<2)|0);i=k;return}function wl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;gi(m,f);f=m|0;m=c[f>>2]|0;if(!((c[5356]|0)==-1)){c[l>>2]=21424;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21424,l,116)}l=(c[5357]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}oh(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=wc[c[c[q>>2]>>2]&255](q)|0;c[k>>2]=p;p=(ck(d,k,r,r+168|0,o,g,0)|0)-r|0;if((p|0)>=168){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+24>>2]=((p|0)/12|0|0)%7|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=ic(4)|0;Qp(j);Cb(j|0,14952,168)}function xl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;gi(m,f);f=m|0;m=c[f>>2]|0;if(!((c[5356]|0)==-1)){c[l>>2]=21424;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21424,l,116)}l=(c[5357]|0)-1|0;n=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-n>>2>>>0>l>>>0){o=c[n+(l<<2)>>2]|0;if((o|0)==0){break}oh(c[f>>2]|0)|0;p=c[e>>2]|0;q=b+8|0;r=wc[c[(c[q>>2]|0)+4>>2]&255](q)|0;c[k>>2]=p;p=(ck(d,k,r,r+288|0,o,g,0)|0)-r|0;if((p|0)>=288){s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}c[h+16>>2]=((p|0)/12|0|0)%12|0;s=d|0;t=c[s>>2]|0;u=a|0;c[u>>2]=t;i=j;return}}while(0);j=ic(4)|0;Qp(j);Cb(j|0,14952,168)}function yl(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;gi(l,f);f=l|0;l=c[f>>2]|0;if(!((c[5356]|0)==-1)){c[k>>2]=21424;c[k+4>>2]=18;c[k+8>>2]=0;Ih(21424,k,116)}k=(c[5357]|0)-1|0;m=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-m>>2>>>0>k>>>0){n=c[m+(k<<2)>>2]|0;if((n|0)==0){break}oh(c[f>>2]|0)|0;c[j>>2]=c[e>>2];o=Dl(d,j,g,n,4)|0;if((c[g>>2]&4|0)!=0){p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}if((o|0)<69){s=o+2e3|0}else{s=(o-69|0)>>>0<31>>>0?o+1900|0:o}c[h+20>>2]=s-1900;p=d|0;q=c[p>>2]|0;r=a|0;c[r>>2]=q;i=b;return}}while(0);b=ic(4)|0;Qp(b);Cb(b|0,14952,168)}function zl(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;x=l+88|0;y=l+96|0;z=l+112|0;A=l+120|0;B=l+128|0;C=l+136|0;D=l+144|0;E=l+152|0;F=l+160|0;G=l+168|0;H=l+176|0;I=l+184|0;J=l+192|0;K=l+200|0;L=l+208|0;M=l+216|0;N=l+224|0;O=l+232|0;P=l+240|0;Q=l+248|0;R=l+256|0;S=l+264|0;T=l+272|0;U=l+280|0;V=l+288|0;W=l+296|0;X=l+304|0;Y=l+312|0;Z=l+320|0;c[h>>2]=0;gi(z,g);_=z|0;z=c[_>>2]|0;if(!((c[5356]|0)==-1)){c[y>>2]=21424;c[y+4>>2]=18;c[y+8>>2]=0;Ih(21424,y,116)}y=(c[5357]|0)-1|0;$=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-$>>2>>>0>y>>>0){aa=c[$+(y<<2)>>2]|0;if((aa|0)==0){break}ba=aa;oh(c[_>>2]|0)|0;a:do{switch(k<<24>>24|0){case 109:{c[r>>2]=c[f>>2];aa=(Dl(e,r,h,ba,2)|0)-1|0;ca=c[h>>2]|0;if((ca&4|0)==0&(aa|0)<12){c[j+16>>2]=aa;break a}else{c[h>>2]=ca|4;break a}break};case 73:{ca=j+8|0;c[t>>2]=c[f>>2];aa=Dl(e,t,h,ba,2)|0;da=c[h>>2]|0;do{if((da&4|0)==0){if(!((aa-1|0)>>>0<12>>>0)){break}c[ca>>2]=aa;break a}}while(0);c[h>>2]=da|4;break};case 82:{aa=e|0;c[P>>2]=c[aa>>2];c[Q>>2]=c[f>>2];ql(O,d,P,Q,g,h,j,8072,8092);c[aa>>2]=c[O>>2];break};case 97:case 65:{aa=c[f>>2]|0;ca=d+8|0;ea=wc[c[c[ca>>2]>>2]&255](ca)|0;c[x>>2]=aa;aa=(ck(e,x,ea,ea+168|0,ba,h,0)|0)-ea|0;if((aa|0)>=168){break a}c[j+24>>2]=((aa|0)/12|0|0)%7|0;break};case 110:case 116:{c[J>>2]=c[f>>2];Al(0,e,J,h,ba);break};case 119:{c[o>>2]=c[f>>2];aa=Dl(e,o,h,ba,1)|0;ea=c[h>>2]|0;if((ea&4|0)==0&(aa|0)<7){c[j+24>>2]=aa;break a}else{c[h>>2]=ea|4;break a}break};case 84:{ea=e|0;c[S>>2]=c[ea>>2];c[T>>2]=c[f>>2];ql(R,d,S,T,g,h,j,8040,8072);c[ea>>2]=c[R>>2];break};case 68:{ea=e|0;c[E>>2]=c[ea>>2];c[F>>2]=c[f>>2];ql(D,d,E,F,g,h,j,8144,8176);c[ea>>2]=c[D>>2];break};case 37:{c[Z>>2]=c[f>>2];Cl(0,e,Z,h,ba);break};case 98:case 66:case 104:{ea=c[f>>2]|0;aa=d+8|0;ca=wc[c[(c[aa>>2]|0)+4>>2]&255](aa)|0;c[w>>2]=ea;ea=(ck(e,w,ca,ca+288|0,ba,h,0)|0)-ca|0;if((ea|0)>=288){break a}c[j+16>>2]=((ea|0)/12|0|0)%12|0;break};case 89:{c[m>>2]=c[f>>2];ea=Dl(e,m,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}c[j+20>>2]=ea-1900;break};case 99:{ea=d+8|0;ca=wc[c[(c[ea>>2]|0)+12>>2]&255](ea)|0;ea=e|0;c[B>>2]=c[ea>>2];c[C>>2]=c[f>>2];aa=a[ca]|0;if((aa&1)==0){fa=(aa&255)>>>1;ga=ca+4|0;ha=ca+4|0}else{aa=c[ca+8>>2]|0;fa=c[ca+4>>2]|0;ga=aa;ha=aa}ql(A,d,B,C,g,h,j,ga,ha+(fa<<2)|0);c[ea>>2]=c[A>>2];break};case 100:case 101:{ea=j+12|0;c[v>>2]=c[f>>2];aa=Dl(e,v,h,ba,2)|0;ca=c[h>>2]|0;do{if((ca&4|0)==0){if(!((aa-1|0)>>>0<31>>>0)){break}c[ea>>2]=aa;break a}}while(0);c[h>>2]=ca|4;break};case 106:{c[s>>2]=c[f>>2];aa=Dl(e,s,h,ba,3)|0;ea=c[h>>2]|0;if((ea&4|0)==0&(aa|0)<366){c[j+28>>2]=aa;break a}else{c[h>>2]=ea|4;break a}break};case 112:{c[K>>2]=c[f>>2];Bl(d,j+8|0,e,K,h,ba);break};case 114:{ea=e|0;c[M>>2]=c[ea>>2];c[N>>2]=c[f>>2];ql(L,d,M,N,g,h,j,8096,8140);c[ea>>2]=c[L>>2];break};case 83:{c[p>>2]=c[f>>2];ea=Dl(e,p,h,ba,2)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(ea|0)<61){c[j>>2]=ea;break a}else{c[h>>2]=aa|4;break a}break};case 121:{c[n>>2]=c[f>>2];aa=Dl(e,n,h,ba,4)|0;if((c[h>>2]&4|0)!=0){break a}if((aa|0)<69){ia=aa+2e3|0}else{ia=(aa-69|0)>>>0<31>>>0?aa+1900|0:aa}c[j+20>>2]=ia-1900;break};case 70:{aa=e|0;c[H>>2]=c[aa>>2];c[I>>2]=c[f>>2];ql(G,d,H,I,g,h,j,8008,8040);c[aa>>2]=c[G>>2];break};case 120:{aa=c[(c[d>>2]|0)+20>>2]|0;c[U>>2]=c[e>>2];c[V>>2]=c[f>>2];Cc[aa&127](b,d,U,V,g,h,j);i=l;return};case 88:{aa=d+8|0;ea=wc[c[(c[aa>>2]|0)+24>>2]&255](aa)|0;aa=e|0;c[X>>2]=c[aa>>2];c[Y>>2]=c[f>>2];da=a[ea]|0;if((da&1)==0){ja=(da&255)>>>1;ka=ea+4|0;la=ea+4|0}else{da=c[ea+8>>2]|0;ja=c[ea+4>>2]|0;ka=da;la=da}ql(W,d,X,Y,g,h,j,ka,la+(ja<<2)|0);c[aa>>2]=c[W>>2];break};case 72:{c[u>>2]=c[f>>2];aa=Dl(e,u,h,ba,2)|0;da=c[h>>2]|0;if((da&4|0)==0&(aa|0)<24){c[j+8>>2]=aa;break a}else{c[h>>2]=da|4;break a}break};case 77:{c[q>>2]=c[f>>2];da=Dl(e,q,h,ba,2)|0;aa=c[h>>2]|0;if((aa&4|0)==0&(da|0)<60){c[j+4>>2]=da;break a}else{c[h>>2]=aa|4;break a}break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=ic(4)|0;Qp(l);Cb(l|0,14952,168)}function Al(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=d|0;d=f;a:while(1){h=c[g>>2]|0;do{if((h|0)==0){j=1}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){l=wc[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[g>>2]=0;j=1;break}else{j=(c[g>>2]|0)==0;break}}}while(0);h=c[b>>2]|0;do{if((h|0)==0){m=15}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){n=wc[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{n=c[k>>2]|0}if((n|0)==-1){c[b>>2]=0;m=15;break}else{if(j){o=h;break}else{p=h;break a}}}}while(0);if((m|0)==15){m=0;if(j){p=0;break}else{o=0}}h=c[g>>2]|0;k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){q=wc[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{q=c[k>>2]|0}if(!(yc[c[(c[d>>2]|0)+12>>2]&63](f,8192,q)|0)){p=o;break}k=c[g>>2]|0;h=k+12|0;r=c[h>>2]|0;if((r|0)==(c[k+16>>2]|0)){wc[c[(c[k>>2]|0)+40>>2]&255](k)|0;continue}else{c[h>>2]=r+4;continue}}o=c[g>>2]|0;do{if((o|0)==0){s=1}else{q=c[o+12>>2]|0;if((q|0)==(c[o+16>>2]|0)){t=wc[c[(c[o>>2]|0)+36>>2]&255](o)|0}else{t=c[q>>2]|0}if((t|0)==-1){c[g>>2]=0;s=1;break}else{s=(c[g>>2]|0)==0;break}}}while(0);do{if((p|0)==0){m=37}else{g=c[p+12>>2]|0;if((g|0)==(c[p+16>>2]|0)){u=wc[c[(c[p>>2]|0)+36>>2]&255](p)|0}else{u=c[g>>2]|0}if((u|0)==-1){c[b>>2]=0;m=37;break}if(!s){break}i=a;return}}while(0);do{if((m|0)==37){if(s){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function Bl(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=b+8|0;b=wc[c[(c[l>>2]|0)+8>>2]&255](l)|0;l=a[b]|0;if((l&1)==0){m=(l&255)>>>1}else{m=c[b+4>>2]|0}l=a[b+12|0]|0;if((l&1)==0){n=(l&255)>>>1}else{n=c[b+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=ck(e,k,b,b+24|0,h,g,0)|0;g=f-b|0;do{if((f|0)==(b|0)){if((c[d>>2]|0)!=12){break}c[d>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[d>>2]|0;if((g|0)>=12){i=j;return}c[d>>2]=g+12;i=j;return}function Cl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=c[g>>2]|0;do{if((b|0)==0){h=1}else{j=c[b+12>>2]|0;if((j|0)==(c[b+16>>2]|0)){k=wc[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{k=c[j>>2]|0}if((k|0)==-1){c[g>>2]=0;h=1;break}else{h=(c[g>>2]|0)==0;break}}}while(0);k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=14}else{b=c[d+12>>2]|0;if((b|0)==(c[d+16>>2]|0)){m=wc[c[(c[d>>2]|0)+36>>2]&255](d)|0}else{m=c[b>>2]|0}if((m|0)==-1){c[k>>2]=0;l=14;break}else{if(h){n=d;break}else{l=16;break}}}}while(0);if((l|0)==14){if(h){l=16}else{n=0}}if((l|0)==16){c[e>>2]=c[e>>2]|6;i=a;return}h=c[g>>2]|0;d=c[h+12>>2]|0;if((d|0)==(c[h+16>>2]|0)){o=wc[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{o=c[d>>2]|0}if(!((yc[c[(c[f>>2]|0)+52>>2]&63](f,o,0)|0)<<24>>24==37)){c[e>>2]=c[e>>2]|4;i=a;return}o=c[g>>2]|0;f=o+12|0;d=c[f>>2]|0;if((d|0)==(c[o+16>>2]|0)){wc[c[(c[o>>2]|0)+40>>2]&255](o)|0}else{c[f>>2]=d+4}d=c[g>>2]|0;do{if((d|0)==0){p=1}else{f=c[d+12>>2]|0;if((f|0)==(c[d+16>>2]|0)){q=wc[c[(c[d>>2]|0)+36>>2]&255](d)|0}else{q=c[f>>2]|0}if((q|0)==-1){c[g>>2]=0;p=1;break}else{p=(c[g>>2]|0)==0;break}}}while(0);do{if((n|0)==0){l=38}else{g=c[n+12>>2]|0;if((g|0)==(c[n+16>>2]|0)){r=wc[c[(c[n>>2]|0)+36>>2]&255](n)|0}else{r=c[g>>2]|0}if((r|0)==-1){c[k>>2]=0;l=38;break}if(!p){break}i=a;return}}while(0);do{if((l|0)==38){if(p){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function Dl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=i;h=b;b=i;i=i+4|0;i=i+7&-8;c[b>>2]=c[h>>2];h=a|0;a=c[h>>2]|0;do{if((a|0)==0){j=1}else{k=c[a+12>>2]|0;if((k|0)==(c[a+16>>2]|0)){l=wc[c[(c[a>>2]|0)+36>>2]&255](a)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[h>>2]=0;j=1;break}else{j=(c[h>>2]|0)==0;break}}}while(0);l=b|0;b=c[l>>2]|0;do{if((b|0)==0){m=14}else{a=c[b+12>>2]|0;if((a|0)==(c[b+16>>2]|0)){n=wc[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{n=c[a>>2]|0}if((n|0)==-1){c[l>>2]=0;m=14;break}else{if(j){o=b;break}else{m=16;break}}}}while(0);if((m|0)==14){if(j){m=16}else{o=0}}if((m|0)==16){c[d>>2]=c[d>>2]|6;p=0;i=g;return p|0}j=c[h>>2]|0;b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0)){q=wc[c[(c[j>>2]|0)+36>>2]&255](j)|0}else{q=c[b>>2]|0}b=e;if(!(yc[c[(c[b>>2]|0)+12>>2]&63](e,2048,q)|0)){c[d>>2]=c[d>>2]|4;p=0;i=g;return p|0}j=e;n=(yc[c[(c[j>>2]|0)+52>>2]&63](e,q,0)|0)<<24>>24;q=c[h>>2]|0;a=q+12|0;k=c[a>>2]|0;if((k|0)==(c[q+16>>2]|0)){wc[c[(c[q>>2]|0)+40>>2]&255](q)|0;r=n;s=f;t=o;u=o}else{c[a>>2]=k+4;r=n;s=f;t=o;u=o}while(1){v=r-48|0;o=s-1|0;f=c[h>>2]|0;do{if((f|0)==0){w=1}else{n=c[f+12>>2]|0;if((n|0)==(c[f+16>>2]|0)){x=wc[c[(c[f>>2]|0)+36>>2]&255](f)|0}else{x=c[n>>2]|0}if((x|0)==-1){c[h>>2]=0;w=1;break}else{w=(c[h>>2]|0)==0;break}}}while(0);do{if((t|0)==0){y=1;z=0;A=u}else{f=c[t+12>>2]|0;if((f|0)==(c[t+16>>2]|0)){B=wc[c[(c[t>>2]|0)+36>>2]&255](t)|0}else{B=c[f>>2]|0}if((B|0)==-1){c[l>>2]=0;y=1;z=0;A=0;break}else{y=(u|0)==0;z=u;A=u;break}}}while(0);C=c[h>>2]|0;if(!((w^y)&(o|0)>0)){break}f=c[C+12>>2]|0;if((f|0)==(c[C+16>>2]|0)){D=wc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{D=c[f>>2]|0}if(!(yc[c[(c[b>>2]|0)+12>>2]&63](e,2048,D)|0)){p=v;m=63;break}f=((yc[c[(c[j>>2]|0)+52>>2]&63](e,D,0)|0)<<24>>24)+(v*10|0)|0;n=c[h>>2]|0;k=n+12|0;a=c[k>>2]|0;if((a|0)==(c[n+16>>2]|0)){wc[c[(c[n>>2]|0)+40>>2]&255](n)|0;r=f;s=o;t=z;u=A;continue}else{c[k>>2]=a+4;r=f;s=o;t=z;u=A;continue}}if((m|0)==63){i=g;return p|0}do{if((C|0)==0){E=1}else{u=c[C+12>>2]|0;if((u|0)==(c[C+16>>2]|0)){F=wc[c[(c[C>>2]|0)+36>>2]&255](C)|0}else{F=c[u>>2]|0}if((F|0)==-1){c[h>>2]=0;E=1;break}else{E=(c[h>>2]|0)==0;break}}}while(0);do{if((A|0)==0){m=60}else{h=c[A+12>>2]|0;if((h|0)==(c[A+16>>2]|0)){G=wc[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{G=c[h>>2]|0}if((G|0)==-1){c[l>>2]=0;m=60;break}if(E){p=v}else{break}i=g;return p|0}}while(0);do{if((m|0)==60){if(E){break}else{p=v}i=g;return p|0}}while(0);c[d>>2]=c[d>>2]|2;p=v;i=g;return p|0}function El(b){b=b|0;var d=0,e=0;d=b+8|0;e=c[d>>2]|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);if((e|0)!=(c[4980]|0)){mb(c[d>>2]|0)}mh(b|0);sq(b);return}function Fl(b){b=b|0;var d=0,e=0,f=0;d=b+8|0;e=c[d>>2]|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);if((e|0)==(c[4980]|0)){f=b|0;mh(f);return}mb(c[d>>2]|0);f=b|0;mh(f);return}function Gl(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=i;i=i+112|0;f=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[f>>2];f=g|0;l=g+8|0;m=l|0;n=f|0;a[n]=37;o=f+1|0;a[o]=j;p=f+2|0;a[p]=k;a[f+3|0]=0;if(!(k<<24>>24==0)){a[o]=k;a[p]=j}j=_b(m|0,100,n|0,h|0,c[d+8>>2]|0)|0;d=l+j|0;l=c[e>>2]|0;if((j|0)==0){q=l;r=b|0;c[r>>2]=q;i=g;return}else{s=m;t=l;u=l}while(1){l=a[s]|0;do{if((t|0)==0){v=0;w=u}else{m=t+24|0;j=c[m>>2]|0;if((j|0)==(c[t+28>>2]|0)){e=(Fc[c[(c[t>>2]|0)+52>>2]&63](t,l&255)|0)==-1;v=e?0:t;w=e?0:u;break}else{c[m>>2]=j+1;a[j]=l;v=t;w=u;break}}}while(0);l=s+1|0;if((l|0)==(d|0)){q=w;break}else{s=l;t=v;u=w}}r=b|0;c[r>>2]=q;i=g;return}function Hl(b){b=b|0;var d=0,e=0;d=b+8|0;e=c[d>>2]|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);if((e|0)!=(c[4980]|0)){mb(c[d>>2]|0)}mh(b|0);sq(b);return}function Il(b){b=b|0;var d=0,e=0,f=0;d=b+8|0;e=c[d>>2]|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);if((e|0)==(c[4980]|0)){f=b|0;mh(f);return}mb(c[d>>2]|0);f=b|0;mh(f);return}function Jl(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;f=i;i=i+408|0;e=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[e>>2];e=f|0;k=f+400|0;l=e|0;c[k>>2]=e+400;Kl(b+8|0,l,k,g,h,j);j=c[k>>2]|0;k=c[d>>2]|0;if((l|0)==(j|0)){m=k;n=a|0;c[n>>2]=m;i=f;return}else{o=l;p=k;q=k}while(1){k=c[o>>2]|0;if((p|0)==0){r=0;s=q}else{l=p+24|0;d=c[l>>2]|0;if((d|0)==(c[p+28>>2]|0)){t=Fc[c[(c[p>>2]|0)+52>>2]&63](p,k)|0}else{c[l>>2]=d+4;c[d>>2]=k;t=k}k=(t|0)==-1;r=k?0:p;s=k?0:q}k=o+4|0;if((k|0)==(j|0)){m=s;break}else{o=k;p=r;q=s}}n=a|0;c[n>>2]=m;i=f;return}function Kl(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+120|0;k=j|0;l=j+112|0;m=i;i=i+4|0;i=i+7&-8;n=j+8|0;o=k|0;a[o]=37;p=k+1|0;a[p]=g;q=k+2|0;a[q]=h;a[k+3|0]=0;if(!(h<<24>>24==0)){a[p]=h;a[q]=g}g=b|0;_b(n|0,100,o|0,f|0,c[g>>2]|0)|0;c[l>>2]=0;c[l+4>>2]=0;c[m>>2]=n;n=(c[e>>2]|0)-d>>2;f=Vb(c[g>>2]|0)|0;g=Gp(d,m,n,l)|0;if((f|0)!=0){Vb(f|0)|0}if((g|0)==-1){Gm(3328)}else{c[e>>2]=d+(g<<2);i=j;return}}function Ll(a){a=a|0;mh(a|0);sq(a);return}function Ml(a){a=a|0;mh(a|0);return}function Nl(a){a=a|0;return 127}function Ol(a){a=a|0;return 127}function Pl(a,b){a=a|0;b=b|0;Kq(a|0,0,12)|0;return}function Ql(a,b){a=a|0;b=b|0;Kq(a|0,0,12)|0;return}function Rl(a,b){a=a|0;b=b|0;Kq(a|0,0,12)|0;return}function Sl(a,b){a=a|0;b=b|0;Mh(a,1,45);return}function Tl(a){a=a|0;return 0}function Ul(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function Vl(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function Wl(a){a=a|0;mh(a|0);sq(a);return}function Xl(a){a=a|0;mh(a|0);return}function Yl(a){a=a|0;return 127}function Zl(a){a=a|0;return 127}function _l(a,b){a=a|0;b=b|0;Kq(a|0,0,12)|0;return}function $l(a,b){a=a|0;b=b|0;Kq(a|0,0,12)|0;return}function am(a,b){a=a|0;b=b|0;Kq(a|0,0,12)|0;return}function bm(a,b){a=a|0;b=b|0;Mh(a,1,45);return}function cm(a){a=a|0;return 0}function dm(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function em(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function fm(a){a=a|0;mh(a|0);sq(a);return}function gm(a){a=a|0;mh(a|0);return}function hm(a){a=a|0;return 2147483647}function im(a){a=a|0;return 2147483647}function jm(a,b){a=a|0;b=b|0;Kq(a|0,0,12)|0;return}function km(a,b){a=a|0;b=b|0;Kq(a|0,0,12)|0;return}function lm(a,b){a=a|0;b=b|0;Kq(a|0,0,12)|0;return}function mm(a,b){a=a|0;b=b|0;Yh(a,1,45);return}function nm(a){a=a|0;return 0}function om(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function pm(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function qm(a){a=a|0;mh(a|0);sq(a);return}function rm(a){a=a|0;mh(a|0);return}function sm(a){a=a|0;return 2147483647}function tm(a){a=a|0;return 2147483647}function um(a,b){a=a|0;b=b|0;Kq(a|0,0,12)|0;return}function vm(a,b){a=a|0;b=b|0;Kq(a|0,0,12)|0;return}function wm(a,b){a=a|0;b=b|0;Kq(a|0,0,12)|0;return}function xm(a,b){a=a|0;b=b|0;Yh(a,1,45);return}function ym(a){a=a|0;return 0}function zm(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function Am(b,c){b=b|0;c=c|0;c=b;B=67109634;a[c]=B;B=B>>8;a[c+1|0]=B;B=B>>8;a[c+2|0]=B;B=B>>8;a[c+3|0]=B;return}function Bm(a){a=a|0;mh(a|0);sq(a);return}function Cm(a){a=a|0;mh(a|0);return}function Dm(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=d+160|0;t=d+176|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=210;w=m+100|0;gi(p,h);m=p|0;x=c[m>>2]|0;if(!((c[5358]|0)==-1)){c[l>>2]=21432;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21432,l,116)}l=(c[5359]|0)-1|0;y=c[x+8>>2]|0;do{if((c[x+12>>2]|0)-y>>2>>>0>l>>>0){z=c[y+(l<<2)>>2]|0;if((z|0)==0){break}A=z;a[q]=0;B=f|0;c[r>>2]=c[B>>2];do{if(Fm(e,r,g,p,c[h+4>>2]|0,j,q,A,n,o,w)|0){C=s|0;Hc[c[(c[z>>2]|0)+32>>2]&15](A,7992,8002,C)|0;D=t|0;E=c[o>>2]|0;F=c[u>>2]|0;G=E-F|0;do{if((G|0)>98){H=jq(G+2|0)|0;if((H|0)!=0){I=H;J=H;break}yq();I=0;J=0}else{I=D;J=0}}while(0);if((a[q]|0)==0){K=I}else{a[I]=45;K=I+1|0}if(F>>>0<E>>>0){G=s+10|0;H=s;L=K;M=F;while(1){N=C;while(1){if((N|0)==(G|0)){O=G;break}if((a[N]|0)==(a[M]|0)){O=N;break}else{N=N+1|0}}a[L]=a[7992+(O-H)|0]|0;N=M+1|0;P=L+1|0;if(N>>>0<(c[o>>2]|0)>>>0){L=P;M=N}else{Q=P;break}}}else{Q=K}a[Q]=0;M=Xb(D|0,5608,(L=i,i=i+8|0,c[L>>2]=k,L)|0)|0;i=L;if((M|0)==1){if((J|0)==0){break}kq(J);break}M=ic(8)|0;uh(M,5520);Cb(M|0,14968,98)}}while(0);A=e|0;z=c[A>>2]|0;do{if((z|0)==0){R=0}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){R=z;break}if(!((wc[c[(c[z>>2]|0)+36>>2]&255](z)|0)==-1)){R=z;break}c[A>>2]=0;R=0}}while(0);A=(R|0)==0;z=c[B>>2]|0;do{if((z|0)==0){S=45}else{if((c[z+12>>2]|0)!=(c[z+16>>2]|0)){if(A){break}else{S=47;break}}if((wc[c[(c[z>>2]|0)+36>>2]&255](z)|0)==-1){c[B>>2]=0;S=45;break}else{if(A){break}else{S=47;break}}}}while(0);if((S|0)==45){if(A){S=47}}if((S|0)==47){c[j>>2]=c[j>>2]|2}c[b>>2]=R;oh(c[m>>2]|0)|0;B=c[u>>2]|0;c[u>>2]=0;if((B|0)==0){i=d;return}uc[c[v>>2]&511](B);i=d;return}}while(0);d=ic(4)|0;Qp(d);Cb(d|0,14952,168)}function Em(a){a=a|0;return}function Fm(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0;q=i;i=i+520|0;r=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[r>>2];r=q|0;s=q+400|0;t=q+408|0;u=q+416|0;v=q+424|0;w=q+440|0;x=q+456|0;y=q+472|0;z=q+488|0;A=q+504|0;B=q+512|0;C=r|0;D=v;Kq(D|0,0,12)|0;E=w;Kq(E|0,0,12)|0;F=x;Kq(F|0,0,12)|0;G=y;Kq(G|0,0,12)|0;H=z;Kq(H|0,0,12)|0;Jm(g,h,s,t,u,v,w,x,y,A);h=n|0;c[o>>2]=c[h>>2];g=e|0;e=f|0;f=m+8|0;m=y+1|0;I=y+4|0;J=y+8|0;K=x+1|0;L=x+4|0;M=x+8|0;N=(j&512|0)!=0;j=w+1|0;O=w+8|0;P=w+4|0;Q=z;R=Q+1|0;S=z+8|0;T=z+4|0;U=s+3|0;V=v+4|0;W=n+4|0;n=p;p=210;X=C;Y=C;C=r+400|0;r=0;Z=0;a:while(1){_=c[g>>2]|0;do{if((_|0)==0){$=0}else{if((c[_+12>>2]|0)!=(c[_+16>>2]|0)){$=_;break}if((wc[c[(c[_>>2]|0)+36>>2]&255](_)|0)==-1){c[g>>2]=0;$=0;break}else{$=c[g>>2]|0;break}}}while(0);_=($|0)==0;aa=c[e>>2]|0;do{if((aa|0)==0){ba=15}else{if((c[aa+12>>2]|0)!=(c[aa+16>>2]|0)){if(_){ca=aa;break}else{da=p;ea=X;fa=Y;ga=Z;ba=310;break a}}if((wc[c[(c[aa>>2]|0)+36>>2]&255](aa)|0)==-1){c[e>>2]=0;ba=15;break}else{if(_){ca=aa;break}else{da=p;ea=X;fa=Y;ga=Z;ba=310;break a}}}}while(0);if((ba|0)==15){ba=0;if(_){da=p;ea=X;fa=Y;ga=Z;ba=310;break}else{ca=0}}b:do{switch(a[s+r|0]|0){case 3:{aa=a[F]|0;ha=(aa&1)==0;if(ha){ia=(aa&255)>>>1}else{ia=c[L>>2]|0}ja=a[G]|0;ka=(ja&1)==0;if(ka){la=(ja&255)>>>1}else{la=c[I>>2]|0}if((ia|0)==(-la|0)){ma=Z;na=C;oa=Y;pa=X;qa=p;ra=n;break b}if(ha){sa=(aa&255)>>>1}else{sa=c[L>>2]|0}do{if((sa|0)!=0){if(ka){ta=(ja&255)>>>1}else{ta=c[I>>2]|0}if((ta|0)==0){break}ua=c[g>>2]|0;va=c[ua+12>>2]|0;wa=c[ua+16>>2]|0;if((va|0)==(wa|0)){xa=(wc[c[(c[ua>>2]|0)+36>>2]&255](ua)|0)&255;ya=c[g>>2]|0;za=xa;Aa=a[F]|0;Ba=ya;Ca=c[ya+12>>2]|0;Da=c[ya+16>>2]|0}else{za=a[va]|0;Aa=aa;Ba=ua;Ca=va;Da=wa}wa=Ba+12|0;va=(Ca|0)==(Da|0);if(za<<24>>24==(a[(Aa&1)==0?K:c[M>>2]|0]|0)){if(va){wc[c[(c[Ba>>2]|0)+40>>2]&255](Ba)|0}else{c[wa>>2]=Ca+1}wa=a[F]|0;if((wa&1)==0){Ea=(wa&255)>>>1}else{Ea=c[L>>2]|0}ma=Ea>>>0>1>>>0?x:Z;na=C;oa=Y;pa=X;qa=p;ra=n;break b}if(va){Fa=(wc[c[(c[Ba>>2]|0)+36>>2]&255](Ba)|0)&255}else{Fa=a[Ca]|0}if(!(Fa<<24>>24==(a[(a[G]&1)==0?m:c[J>>2]|0]|0))){ba=136;break a}va=c[g>>2]|0;wa=va+12|0;ua=c[wa>>2]|0;if((ua|0)==(c[va+16>>2]|0)){wc[c[(c[va>>2]|0)+40>>2]&255](va)|0}else{c[wa>>2]=ua+1}a[l]=1;ua=a[G]|0;if((ua&1)==0){Ga=(ua&255)>>>1}else{Ga=c[I>>2]|0}ma=Ga>>>0>1>>>0?y:Z;na=C;oa=Y;pa=X;qa=p;ra=n;break b}}while(0);if(ha){Ha=(aa&255)>>>1}else{Ha=c[L>>2]|0}ka=c[g>>2]|0;ua=c[ka+12>>2]|0;wa=(ua|0)==(c[ka+16>>2]|0);if((Ha|0)==0){if(wa){va=(wc[c[(c[ka>>2]|0)+36>>2]&255](ka)|0)&255;Ia=va;Ja=a[G]|0}else{Ia=a[ua]|0;Ja=ja}if(!(Ia<<24>>24==(a[(Ja&1)==0?m:c[J>>2]|0]|0))){ma=Z;na=C;oa=Y;pa=X;qa=p;ra=n;break b}va=c[g>>2]|0;ya=va+12|0;xa=c[ya>>2]|0;if((xa|0)==(c[va+16>>2]|0)){wc[c[(c[va>>2]|0)+40>>2]&255](va)|0}else{c[ya>>2]=xa+1}a[l]=1;xa=a[G]|0;if((xa&1)==0){Ka=(xa&255)>>>1}else{Ka=c[I>>2]|0}ma=Ka>>>0>1>>>0?y:Z;na=C;oa=Y;pa=X;qa=p;ra=n;break b}if(wa){wa=(wc[c[(c[ka>>2]|0)+36>>2]&255](ka)|0)&255;La=wa;Ma=a[F]|0}else{La=a[ua]|0;Ma=aa}if(!(La<<24>>24==(a[(Ma&1)==0?K:c[M>>2]|0]|0))){a[l]=1;ma=Z;na=C;oa=Y;pa=X;qa=p;ra=n;break b}ua=c[g>>2]|0;wa=ua+12|0;ka=c[wa>>2]|0;if((ka|0)==(c[ua+16>>2]|0)){wc[c[(c[ua>>2]|0)+40>>2]&255](ua)|0}else{c[wa>>2]=ka+1}ka=a[F]|0;if((ka&1)==0){Na=(ka&255)>>>1}else{Na=c[L>>2]|0}ma=Na>>>0>1>>>0?x:Z;na=C;oa=Y;pa=X;qa=p;ra=n;break};case 1:{if((r|0)==3){da=p;ea=X;fa=Y;ga=Z;ba=310;break a}ka=c[g>>2]|0;wa=c[ka+12>>2]|0;if((wa|0)==(c[ka+16>>2]|0)){Oa=(wc[c[(c[ka>>2]|0)+36>>2]&255](ka)|0)&255}else{Oa=a[wa]|0}if(Oa<<24>>24<0){ba=41;break a}if((b[(c[f>>2]|0)+(Oa<<24>>24<<1)>>1]&8192)==0){ba=41;break a}wa=c[g>>2]|0;ka=wa+12|0;ua=c[ka>>2]|0;if((ua|0)==(c[wa+16>>2]|0)){Pa=(wc[c[(c[wa>>2]|0)+40>>2]&255](wa)|0)&255}else{c[ka>>2]=ua+1;Pa=a[ua]|0}Th(z,Pa);ba=42;break};case 0:{ba=42;break};case 2:{if(!((Z|0)!=0|r>>>0<2>>>0)){if((r|0)==2){Qa=(a[U]|0)!=0}else{Qa=0}if(!(N|Qa)){ma=0;na=C;oa=Y;pa=X;qa=p;ra=n;break b}}ua=a[E]|0;ka=(ua&1)==0;wa=ka?j:c[O>>2]|0;c:do{if((r|0)==0){Ra=wa;Sa=ua;Ta=ca;Ua=ca}else{if(!((d[s+(r-1)|0]|0)>>>0<2>>>0)){Ra=wa;Sa=ua;Ta=ca;Ua=ca;break}xa=wa+(ka?(ua&255)>>>1:c[P>>2]|0)|0;ya=wa;while(1){if((ya|0)==(xa|0)){Va=xa;break}va=a[ya]|0;if(va<<24>>24<0){Va=ya;break}if((b[(c[f>>2]|0)+(va<<24>>24<<1)>>1]&8192)==0){Va=ya;break}else{ya=ya+1|0}}ya=Va-wa|0;xa=a[H]|0;va=(xa&1)==0;if(va){Wa=(xa&255)>>>1}else{Wa=c[T>>2]|0}if(ya>>>0>Wa>>>0){Ra=wa;Sa=ua;Ta=ca;Ua=ca;break}if(va){va=(xa&255)>>>1;Xa=va;Ya=R;Za=va-ya+(Q+1)|0}else{va=c[S>>2]|0;xa=c[T>>2]|0;Xa=xa;Ya=va;Za=va+(xa-ya)|0}ya=Ya+Xa|0;if((Za|0)==(ya|0)){Ra=Va;Sa=ua;Ta=ca;Ua=ca;break}else{_a=Za;$a=wa}while(1){if((a[_a]|0)!=(a[$a]|0)){Ra=wa;Sa=ua;Ta=ca;Ua=ca;break c}xa=_a+1|0;if((xa|0)==(ya|0)){Ra=Va;Sa=ua;Ta=ca;Ua=ca;break}else{_a=xa;$a=$a+1|0}}}}while(0);d:while(1){if((Sa&1)==0){ab=(Sa&255)>>>1;bb=j}else{ab=c[P>>2]|0;bb=c[O>>2]|0}if((Ra|0)==(bb+ab|0)){break}ua=c[g>>2]|0;do{if((ua|0)==0){cb=0}else{if((c[ua+12>>2]|0)!=(c[ua+16>>2]|0)){cb=ua;break}if((wc[c[(c[ua>>2]|0)+36>>2]&255](ua)|0)==-1){c[g>>2]=0;cb=0;break}else{cb=c[g>>2]|0;break}}}while(0);ua=(cb|0)==0;do{if((Ta|0)==0){db=Ua;ba=173}else{if((c[Ta+12>>2]|0)!=(c[Ta+16>>2]|0)){if(ua){eb=Ta;fb=Ua;break}else{break d}}if((wc[c[(c[Ta>>2]|0)+36>>2]&255](Ta)|0)==-1){c[e>>2]=0;db=0;ba=173;break}else{if(ua^(Ua|0)==0){eb=Ua;fb=Ua;break}else{break d}}}}while(0);if((ba|0)==173){ba=0;if(ua){break}else{eb=0;fb=db}}wa=c[g>>2]|0;ka=c[wa+12>>2]|0;if((ka|0)==(c[wa+16>>2]|0)){gb=(wc[c[(c[wa>>2]|0)+36>>2]&255](wa)|0)&255}else{gb=a[ka]|0}if(!(gb<<24>>24==(a[Ra]|0))){break}ka=c[g>>2]|0;wa=ka+12|0;aa=c[wa>>2]|0;if((aa|0)==(c[ka+16>>2]|0)){wc[c[(c[ka>>2]|0)+40>>2]&255](ka)|0}else{c[wa>>2]=aa+1}Ra=Ra+1|0;Sa=a[E]|0;Ta=eb;Ua=fb}if(!N){ma=Z;na=C;oa=Y;pa=X;qa=p;ra=n;break b}aa=a[E]|0;if((aa&1)==0){hb=(aa&255)>>>1;ib=j}else{hb=c[P>>2]|0;ib=c[O>>2]|0}if((Ra|0)==(ib+hb|0)){ma=Z;na=C;oa=Y;pa=X;qa=p;ra=n}else{ba=189;break a}break};case 4:{aa=0;wa=C;ka=Y;ja=X;ha=p;ya=n;e:while(1){xa=c[g>>2]|0;do{if((xa|0)==0){jb=0}else{if((c[xa+12>>2]|0)!=(c[xa+16>>2]|0)){jb=xa;break}if((wc[c[(c[xa>>2]|0)+36>>2]&255](xa)|0)==-1){c[g>>2]=0;jb=0;break}else{jb=c[g>>2]|0;break}}}while(0);xa=(jb|0)==0;ua=c[e>>2]|0;do{if((ua|0)==0){ba=202}else{if((c[ua+12>>2]|0)!=(c[ua+16>>2]|0)){if(xa){break}else{break e}}if((wc[c[(c[ua>>2]|0)+36>>2]&255](ua)|0)==-1){c[e>>2]=0;ba=202;break}else{if(xa){break}else{break e}}}}while(0);if((ba|0)==202){ba=0;if(xa){break}}ua=c[g>>2]|0;va=c[ua+12>>2]|0;if((va|0)==(c[ua+16>>2]|0)){kb=(wc[c[(c[ua>>2]|0)+36>>2]&255](ua)|0)&255}else{kb=a[va]|0}do{if(kb<<24>>24<0){ba=221}else{if((b[(c[f>>2]|0)+(kb<<24>>24<<1)>>1]&2048)==0){ba=221;break}va=c[o>>2]|0;if((va|0)==(ya|0)){ua=(c[W>>2]|0)!=210;lb=c[h>>2]|0;mb=ya-lb|0;nb=mb>>>0<2147483647>>>0?mb<<1:-1;ob=lq(ua?lb:0,nb)|0;if((ob|0)==0){yq()}do{if(ua){c[h>>2]=ob;pb=ob}else{lb=c[h>>2]|0;c[h>>2]=ob;if((lb|0)==0){pb=ob;break}uc[c[W>>2]&511](lb);pb=c[h>>2]|0}}while(0);c[W>>2]=96;ob=pb+mb|0;c[o>>2]=ob;qb=(c[h>>2]|0)+nb|0;rb=ob}else{qb=ya;rb=va}c[o>>2]=rb+1;a[rb]=kb;sb=aa+1|0;tb=wa;ub=ka;vb=ja;wb=ha;xb=qb}}while(0);if((ba|0)==221){ba=0;xa=a[D]|0;if((xa&1)==0){yb=(xa&255)>>>1}else{yb=c[V>>2]|0}if((yb|0)==0|(aa|0)==0){break}if(!(kb<<24>>24==(a[u]|0))){break}if((ka|0)==(wa|0)){xa=ka-ja|0;ob=xa>>>0<2147483647>>>0?xa<<1:-1;if((ha|0)==210){zb=0}else{zb=ja}ua=lq(zb,ob)|0;lb=ua;if((ua|0)==0){yq()}Ab=lb+(ob>>>2<<2)|0;Bb=lb+(xa>>2<<2)|0;Cb=lb;Db=96}else{Ab=wa;Bb=ka;Cb=ja;Db=ha}c[Bb>>2]=aa;sb=0;tb=Ab;ub=Bb+4|0;vb=Cb;wb=Db;xb=ya}lb=c[g>>2]|0;xa=lb+12|0;ob=c[xa>>2]|0;if((ob|0)==(c[lb+16>>2]|0)){wc[c[(c[lb>>2]|0)+40>>2]&255](lb)|0;aa=sb;wa=tb;ka=ub;ja=vb;ha=wb;ya=xb;continue}else{c[xa>>2]=ob+1;aa=sb;wa=tb;ka=ub;ja=vb;ha=wb;ya=xb;continue}}if((ja|0)==(ka|0)|(aa|0)==0){Eb=wa;Fb=ka;Gb=ja;Hb=ha}else{if((ka|0)==(wa|0)){ob=ka-ja|0;xa=ob>>>0<2147483647>>>0?ob<<1:-1;if((ha|0)==210){Ib=0}else{Ib=ja}lb=lq(Ib,xa)|0;ua=lb;if((lb|0)==0){yq()}Jb=ua+(xa>>>2<<2)|0;Kb=ua+(ob>>2<<2)|0;Lb=ua;Mb=96}else{Jb=wa;Kb=ka;Lb=ja;Mb=ha}c[Kb>>2]=aa;Eb=Jb;Fb=Kb+4|0;Gb=Lb;Hb=Mb}if((c[A>>2]|0)>0){ua=c[g>>2]|0;do{if((ua|0)==0){Nb=0}else{if((c[ua+12>>2]|0)!=(c[ua+16>>2]|0)){Nb=ua;break}if((wc[c[(c[ua>>2]|0)+36>>2]&255](ua)|0)==-1){c[g>>2]=0;Nb=0;break}else{Nb=c[g>>2]|0;break}}}while(0);ua=(Nb|0)==0;aa=c[e>>2]|0;do{if((aa|0)==0){ba=257}else{if((c[aa+12>>2]|0)!=(c[aa+16>>2]|0)){if(ua){Ob=aa;break}else{ba=264;break a}}if((wc[c[(c[aa>>2]|0)+36>>2]&255](aa)|0)==-1){c[e>>2]=0;ba=257;break}else{if(ua){Ob=aa;break}else{ba=264;break a}}}}while(0);if((ba|0)==257){ba=0;if(ua){ba=264;break a}else{Ob=0}}aa=c[g>>2]|0;ha=c[aa+12>>2]|0;if((ha|0)==(c[aa+16>>2]|0)){Pb=(wc[c[(c[aa>>2]|0)+36>>2]&255](aa)|0)&255}else{Pb=a[ha]|0}if(!(Pb<<24>>24==(a[t]|0))){ba=264;break a}ha=c[g>>2]|0;aa=ha+12|0;ja=c[aa>>2]|0;if((ja|0)==(c[ha+16>>2]|0)){wc[c[(c[ha>>2]|0)+40>>2]&255](ha)|0;Qb=ya;Rb=Ob;Sb=Ob}else{c[aa>>2]=ja+1;Qb=ya;Rb=Ob;Sb=Ob}while(1){ja=c[g>>2]|0;do{if((ja|0)==0){Tb=0}else{if((c[ja+12>>2]|0)!=(c[ja+16>>2]|0)){Tb=ja;break}if((wc[c[(c[ja>>2]|0)+36>>2]&255](ja)|0)==-1){c[g>>2]=0;Tb=0;break}else{Tb=c[g>>2]|0;break}}}while(0);ja=(Tb|0)==0;do{if((Rb|0)==0){Ub=Sb;ba=280}else{if((c[Rb+12>>2]|0)!=(c[Rb+16>>2]|0)){if(ja){Vb=Sb;Wb=Rb;break}else{ba=288;break a}}if((wc[c[(c[Rb>>2]|0)+36>>2]&255](Rb)|0)==-1){c[e>>2]=0;Ub=0;ba=280;break}else{if(ja^(Sb|0)==0){Vb=Sb;Wb=Sb;break}else{ba=288;break a}}}}while(0);if((ba|0)==280){ba=0;if(ja){ba=288;break a}else{Vb=Ub;Wb=0}}aa=c[g>>2]|0;ha=c[aa+12>>2]|0;if((ha|0)==(c[aa+16>>2]|0)){Xb=(wc[c[(c[aa>>2]|0)+36>>2]&255](aa)|0)&255}else{Xb=a[ha]|0}if(Xb<<24>>24<0){ba=288;break a}if((b[(c[f>>2]|0)+(Xb<<24>>24<<1)>>1]&2048)==0){ba=288;break a}ha=c[o>>2]|0;if((ha|0)==(Qb|0)){aa=(c[W>>2]|0)!=210;ka=c[h>>2]|0;wa=Qb-ka|0;ob=wa>>>0<2147483647>>>0?wa<<1:-1;xa=lq(aa?ka:0,ob)|0;if((xa|0)==0){yq()}do{if(aa){c[h>>2]=xa;Yb=xa}else{ka=c[h>>2]|0;c[h>>2]=xa;if((ka|0)==0){Yb=xa;break}uc[c[W>>2]&511](ka);Yb=c[h>>2]|0}}while(0);c[W>>2]=96;xa=Yb+wa|0;c[o>>2]=xa;Zb=(c[h>>2]|0)+ob|0;_b=xa}else{Zb=Qb;_b=ha}xa=c[g>>2]|0;aa=c[xa+12>>2]|0;if((aa|0)==(c[xa+16>>2]|0)){ja=(wc[c[(c[xa>>2]|0)+36>>2]&255](xa)|0)&255;$b=ja;ac=c[o>>2]|0}else{$b=a[aa]|0;ac=_b}c[o>>2]=ac+1;a[ac]=$b;aa=(c[A>>2]|0)-1|0;c[A>>2]=aa;ja=c[g>>2]|0;xa=ja+12|0;ka=c[xa>>2]|0;if((ka|0)==(c[ja+16>>2]|0)){wc[c[(c[ja>>2]|0)+40>>2]&255](ja)|0}else{c[xa>>2]=ka+1}if((aa|0)>0){Qb=Zb;Rb=Wb;Sb=Vb}else{bc=Zb;break}}}else{bc=ya}if((c[o>>2]|0)==(c[h>>2]|0)){ba=308;break a}else{ma=Z;na=Eb;oa=Fb;pa=Gb;qa=Hb;ra=bc}break};default:{ma=Z;na=C;oa=Y;pa=X;qa=p;ra=n}}}while(0);f:do{if((ba|0)==42){ba=0;if((r|0)==3){da=p;ea=X;fa=Y;ga=Z;ba=310;break a}else{cc=ca;dc=ca}while(1){_=c[g>>2]|0;do{if((_|0)==0){ec=0}else{if((c[_+12>>2]|0)!=(c[_+16>>2]|0)){ec=_;break}if((wc[c[(c[_>>2]|0)+36>>2]&255](_)|0)==-1){c[g>>2]=0;ec=0;break}else{ec=c[g>>2]|0;break}}}while(0);_=(ec|0)==0;do{if((cc|0)==0){fc=dc;ba=55}else{if((c[cc+12>>2]|0)!=(c[cc+16>>2]|0)){if(_){gc=cc;hc=dc;break}else{ma=Z;na=C;oa=Y;pa=X;qa=p;ra=n;break f}}if((wc[c[(c[cc>>2]|0)+36>>2]&255](cc)|0)==-1){c[e>>2]=0;fc=0;ba=55;break}else{if(_^(dc|0)==0){gc=dc;hc=dc;break}else{ma=Z;na=C;oa=Y;pa=X;qa=p;ra=n;break f}}}}while(0);if((ba|0)==55){ba=0;if(_){ma=Z;na=C;oa=Y;pa=X;qa=p;ra=n;break f}else{gc=0;hc=fc}}ha=c[g>>2]|0;ob=c[ha+12>>2]|0;if((ob|0)==(c[ha+16>>2]|0)){ic=(wc[c[(c[ha>>2]|0)+36>>2]&255](ha)|0)&255}else{ic=a[ob]|0}if(ic<<24>>24<0){ma=Z;na=C;oa=Y;pa=X;qa=p;ra=n;break f}if((b[(c[f>>2]|0)+(ic<<24>>24<<1)>>1]&8192)==0){ma=Z;na=C;oa=Y;pa=X;qa=p;ra=n;break f}ob=c[g>>2]|0;ha=ob+12|0;wa=c[ha>>2]|0;if((wa|0)==(c[ob+16>>2]|0)){jc=(wc[c[(c[ob>>2]|0)+40>>2]&255](ob)|0)&255}else{c[ha>>2]=wa+1;jc=a[wa]|0}Th(z,jc);cc=gc;dc=hc}}}while(0);ya=r+1|0;if(ya>>>0<4>>>0){n=ra;p=qa;X=pa;Y=oa;C=na;r=ya;Z=ma}else{da=qa;ea=pa;fa=oa;ga=ma;ba=310;break}}g:do{if((ba|0)==41){c[k>>2]=c[k>>2]|4;kc=0;lc=X;mc=p}else if((ba|0)==136){c[k>>2]=c[k>>2]|4;kc=0;lc=X;mc=p}else if((ba|0)==189){c[k>>2]=c[k>>2]|4;kc=0;lc=X;mc=p}else if((ba|0)==264){c[k>>2]=c[k>>2]|4;kc=0;lc=Gb;mc=Hb}else if((ba|0)==288){c[k>>2]=c[k>>2]|4;kc=0;lc=Gb;mc=Hb}else if((ba|0)==308){c[k>>2]=c[k>>2]|4;kc=0;lc=Gb;mc=Hb}else if((ba|0)==310){h:do{if((ga|0)!=0){ma=ga;oa=ga+1|0;pa=ga+8|0;qa=ga+4|0;Z=1;i:while(1){r=a[ma]|0;if((r&1)==0){nc=(r&255)>>>1}else{nc=c[qa>>2]|0}if(!(Z>>>0<nc>>>0)){break h}r=c[g>>2]|0;do{if((r|0)==0){oc=0}else{if((c[r+12>>2]|0)!=(c[r+16>>2]|0)){oc=r;break}if((wc[c[(c[r>>2]|0)+36>>2]&255](r)|0)==-1){c[g>>2]=0;oc=0;break}else{oc=c[g>>2]|0;break}}}while(0);r=(oc|0)==0;_=c[e>>2]|0;do{if((_|0)==0){ba=328}else{if((c[_+12>>2]|0)!=(c[_+16>>2]|0)){if(r){break}else{break i}}if((wc[c[(c[_>>2]|0)+36>>2]&255](_)|0)==-1){c[e>>2]=0;ba=328;break}else{if(r){break}else{break i}}}}while(0);if((ba|0)==328){ba=0;if(r){break}}_=c[g>>2]|0;na=c[_+12>>2]|0;if((na|0)==(c[_+16>>2]|0)){pc=(wc[c[(c[_>>2]|0)+36>>2]&255](_)|0)&255}else{pc=a[na]|0}if((a[ma]&1)==0){qc=oa}else{qc=c[pa>>2]|0}if(!(pc<<24>>24==(a[qc+Z|0]|0))){break}na=Z+1|0;_=c[g>>2]|0;C=_+12|0;Y=c[C>>2]|0;if((Y|0)==(c[_+16>>2]|0)){wc[c[(c[_>>2]|0)+40>>2]&255](_)|0;Z=na;continue}else{c[C>>2]=Y+1;Z=na;continue}}c[k>>2]=c[k>>2]|4;kc=0;lc=ea;mc=da;break g}}while(0);if((ea|0)==(fa|0)){kc=1;lc=fa;mc=da;break}c[B>>2]=0;Km(v,ea,fa,B);if((c[B>>2]|0)==0){kc=1;lc=ea;mc=da;break}c[k>>2]=c[k>>2]|4;kc=0;lc=ea;mc=da}}while(0);Nh(z);Nh(y);Nh(x);Nh(w);Nh(v);if((lc|0)==0){i=q;return kc|0}uc[mc&511](lc);i=q;return kc|0}function Gm(a){a=a|0;var b=0;b=ic(8)|0;uh(b,a);Cb(b|0,14968,98)}function Hm(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+160|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=210;u=m+100|0;gi(p,h);m=p|0;v=c[m>>2]|0;if(!((c[5358]|0)==-1)){c[l>>2]=21432;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21432,l,116)}l=(c[5359]|0)-1|0;w=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-w>>2>>>0>l>>>0){x=c[w+(l<<2)>>2]|0;if((x|0)==0){break}y=x;a[q]=0;z=f|0;A=c[z>>2]|0;c[r>>2]=A;if(Fm(e,r,g,p,c[h+4>>2]|0,j,q,y,n,o,u)|0){B=k;if((a[B]&1)==0){a[k+1|0]=0;a[B]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}B=x;if((a[q]|0)!=0){Th(k,Fc[c[(c[B>>2]|0)+28>>2]&63](y,45)|0)}x=Fc[c[(c[B>>2]|0)+28>>2]&63](y,48)|0;y=c[o>>2]|0;B=y-1|0;C=c[s>>2]|0;while(1){if(!(C>>>0<B>>>0)){break}if((a[C]|0)==x<<24>>24){C=C+1|0}else{break}}Im(k,C,y)|0}x=e|0;B=c[x>>2]|0;do{if((B|0)==0){D=0}else{if((c[B+12>>2]|0)!=(c[B+16>>2]|0)){D=B;break}if(!((wc[c[(c[B>>2]|0)+36>>2]&255](B)|0)==-1)){D=B;break}c[x>>2]=0;D=0}}while(0);x=(D|0)==0;do{if((A|0)==0){E=33}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){if(x){break}else{E=35;break}}if((wc[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1){c[z>>2]=0;E=33;break}else{if(x^(A|0)==0){break}else{E=35;break}}}}while(0);if((E|0)==33){if(x){E=35}}if((E|0)==35){c[j>>2]=c[j>>2]|2}c[b>>2]=D;oh(c[m>>2]|0)|0;A=c[s>>2]|0;c[s>>2]=0;if((A|0)==0){i=d;return}uc[c[t>>2]&511](A);i=d;return}}while(0);d=ic(4)|0;Qp(d);Cb(d|0,14952,168)}function Im(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b;g=d;h=a[f]|0;if((h&1)==0){i=10;j=h;k=(h&255)>>>1}else{h=c[b>>2]|0;i=(h&-2)-1|0;j=h&255;k=c[b+4>>2]|0}h=e-g|0;if((e|0)==(d|0)){return b|0}if((i-k|0)>>>0<h>>>0){Wh(b,i,k+h-i|0,k,k,0,0);l=a[f]|0}else{l=j}if((l&1)==0){m=b+1|0}else{m=c[b+8>>2]|0}l=e+(k-g)|0;g=d;d=m+k|0;while(1){a[d]=a[g]|0;j=g+1|0;if((j|0)==(e|0)){break}else{g=j;d=d+1|0}}a[m+l|0]=0;l=k+h|0;if((a[f]&1)==0){a[f]=l<<1;return b|0}else{c[b+4>>2]=l;return b|0}return 0}function Jm(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,C=0,D=0,E=0,F=0,G=0;n=i;i=i+176|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=n+56|0;t=n+72|0;u=n+88|0;v=n+104|0;w=n+112|0;x=n+128|0;y=n+144|0;z=n+160|0;if(b){b=c[d>>2]|0;if(!((c[5476]|0)==-1)){c[p>>2]=21904;c[p+4>>2]=18;c[p+8>>2]=0;Ih(21904,p,116)}p=(c[5477]|0)-1|0;A=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-A>>2>>>0>p>>>0)){C=ic(4)|0;D=C;Qp(D);Cb(C|0,14952,168)}b=c[A+(p<<2)>>2]|0;if((b|0)==0){C=ic(4)|0;D=C;Qp(D);Cb(C|0,14952,168)}C=b;vc[c[(c[b>>2]|0)+44>>2]&127](q,C);D=e;B=c[q>>2]|0;a[D]=B;B=B>>8;a[D+1|0]=B;B=B>>8;a[D+2|0]=B;B=B>>8;a[D+3|0]=B;D=b;vc[c[(c[D>>2]|0)+32>>2]&127](r,C);q=l;if((a[q]&1)==0){a[l+1|0]=0;a[q]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Sh(l,0);p=r;c[q>>2]=c[p>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];Kq(p|0,0,12)|0;Nh(r);vc[c[(c[D>>2]|0)+28>>2]&127](s,C);r=k;if((a[r]&1)==0){a[k+1|0]=0;a[r]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Sh(k,0);p=s;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2];Kq(p|0,0,12)|0;Nh(s);s=b;a[f]=wc[c[(c[s>>2]|0)+12>>2]&255](C)|0;a[g]=wc[c[(c[s>>2]|0)+16>>2]&255](C)|0;vc[c[(c[D>>2]|0)+20>>2]&127](t,C);s=h;if((a[s]&1)==0){a[h+1|0]=0;a[s]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Sh(h,0);p=t;c[s>>2]=c[p>>2];c[s+4>>2]=c[p+4>>2];c[s+8>>2]=c[p+8>>2];Kq(p|0,0,12)|0;Nh(t);vc[c[(c[D>>2]|0)+24>>2]&127](u,C);D=j;if((a[D]&1)==0){a[j+1|0]=0;a[D]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Sh(j,0);t=u;c[D>>2]=c[t>>2];c[D+4>>2]=c[t+4>>2];c[D+8>>2]=c[t+8>>2];Kq(t|0,0,12)|0;Nh(u);E=wc[c[(c[b>>2]|0)+36>>2]&255](C)|0;c[m>>2]=E;i=n;return}else{C=c[d>>2]|0;if(!((c[5478]|0)==-1)){c[o>>2]=21912;c[o+4>>2]=18;c[o+8>>2]=0;Ih(21912,o,116)}o=(c[5479]|0)-1|0;d=c[C+8>>2]|0;if(!((c[C+12>>2]|0)-d>>2>>>0>o>>>0)){F=ic(4)|0;G=F;Qp(G);Cb(F|0,14952,168)}C=c[d+(o<<2)>>2]|0;if((C|0)==0){F=ic(4)|0;G=F;Qp(G);Cb(F|0,14952,168)}F=C;vc[c[(c[C>>2]|0)+44>>2]&127](v,F);G=e;B=c[v>>2]|0;a[G]=B;B=B>>8;a[G+1|0]=B;B=B>>8;a[G+2|0]=B;B=B>>8;a[G+3|0]=B;G=C;vc[c[(c[G>>2]|0)+32>>2]&127](w,F);v=l;if((a[v]&1)==0){a[l+1|0]=0;a[v]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Sh(l,0);l=w;c[v>>2]=c[l>>2];c[v+4>>2]=c[l+4>>2];c[v+8>>2]=c[l+8>>2];Kq(l|0,0,12)|0;Nh(w);vc[c[(c[G>>2]|0)+28>>2]&127](x,F);w=k;if((a[w]&1)==0){a[k+1|0]=0;a[w]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Sh(k,0);k=x;c[w>>2]=c[k>>2];c[w+4>>2]=c[k+4>>2];c[w+8>>2]=c[k+8>>2];Kq(k|0,0,12)|0;Nh(x);x=C;a[f]=wc[c[(c[x>>2]|0)+12>>2]&255](F)|0;a[g]=wc[c[(c[x>>2]|0)+16>>2]&255](F)|0;vc[c[(c[G>>2]|0)+20>>2]&127](y,F);x=h;if((a[x]&1)==0){a[h+1|0]=0;a[x]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Sh(h,0);h=y;c[x>>2]=c[h>>2];c[x+4>>2]=c[h+4>>2];c[x+8>>2]=c[h+8>>2];Kq(h|0,0,12)|0;Nh(y);vc[c[(c[G>>2]|0)+24>>2]&127](z,F);G=j;if((a[G]&1)==0){a[j+1|0]=0;a[G]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Sh(j,0);j=z;c[G>>2]=c[j>>2];c[G+4>>2]=c[j+4>>2];c[G+8>>2]=c[j+8>>2];Kq(j|0,0,12)|0;Nh(z);E=wc[c[(c[C>>2]|0)+36>>2]&255](F)|0;c[m>>2]=E;i=n;return}}function Km(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=b;h=a[g]|0;if((h&1)==0){i=(h&255)>>>1}else{i=c[b+4>>2]|0}if((i|0)==0){return}do{if((d|0)==(e|0)){j=h}else{i=e-4|0;if(i>>>0>d>>>0){k=d;l=i}else{j=h;break}do{i=c[k>>2]|0;c[k>>2]=c[l>>2];c[l>>2]=i;k=k+4|0;l=l-4|0;}while(k>>>0<l>>>0);j=a[g]|0}}while(0);if((j&1)==0){m=(j&255)>>>1;n=b+1|0}else{m=c[b+4>>2]|0;n=c[b+8>>2]|0}b=e-4|0;e=a[n]|0;j=e<<24>>24<1|e<<24>>24==127;a:do{if(b>>>0>d>>>0){g=n+m|0;l=n;k=d;h=e;i=j;while(1){if(!i){if((h<<24>>24|0)!=(c[k>>2]|0)){break}}o=(g-l|0)>1?l+1|0:l;p=k+4|0;q=a[o]|0;r=q<<24>>24<1|q<<24>>24==127;if(p>>>0<b>>>0){l=o;k=p;h=q;i=r}else{s=q;t=r;break a}}c[f>>2]=4;return}else{s=e;t=j}}while(0);if(t){return}t=c[b>>2]|0;if(!(s<<24>>24>>>0<t>>>0|(t|0)==0)){return}c[f>>2]=4;return}function Lm(a){a=a|0;mh(a|0);sq(a);return}function Mm(a){a=a|0;mh(a|0);return}function Nm(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+600|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=d+456|0;t=d+496|0;u=n|0;c[u>>2]=m;v=n+4|0;c[v>>2]=210;w=m+400|0;gi(p,h);m=p|0;x=c[m>>2]|0;if(!((c[5356]|0)==-1)){c[l>>2]=21424;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21424,l,116)}l=(c[5357]|0)-1|0;y=c[x+8>>2]|0;do{if((c[x+12>>2]|0)-y>>2>>>0>l>>>0){z=c[y+(l<<2)>>2]|0;if((z|0)==0){break}A=z;a[q]=0;B=f|0;c[r>>2]=c[B>>2];do{if(Om(e,r,g,p,c[h+4>>2]|0,j,q,A,n,o,w)|0){C=s|0;Hc[c[(c[z>>2]|0)+48>>2]&15](A,7976,7986,C)|0;D=t|0;E=c[o>>2]|0;F=c[u>>2]|0;G=E-F|0;do{if((G|0)>392){H=jq((G>>2)+2|0)|0;if((H|0)!=0){I=H;J=H;break}yq();I=0;J=0}else{I=D;J=0}}while(0);if((a[q]|0)==0){K=I}else{a[I]=45;K=I+1|0}if(F>>>0<E>>>0){G=s+40|0;H=s;L=K;M=F;while(1){N=C;while(1){if((N|0)==(G|0)){O=G;break}if((c[N>>2]|0)==(c[M>>2]|0)){O=N;break}else{N=N+4|0}}a[L]=a[7976+(O-H>>2)|0]|0;N=M+4|0;P=L+1|0;if(N>>>0<(c[o>>2]|0)>>>0){L=P;M=N}else{Q=P;break}}}else{Q=K}a[Q]=0;M=Xb(D|0,5608,(L=i,i=i+8|0,c[L>>2]=k,L)|0)|0;i=L;if((M|0)==1){if((J|0)==0){break}kq(J);break}M=ic(8)|0;uh(M,5520);Cb(M|0,14968,98)}}while(0);A=e|0;z=c[A>>2]|0;do{if((z|0)==0){R=1}else{M=c[z+12>>2]|0;if((M|0)==(c[z+16>>2]|0)){S=wc[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{S=c[M>>2]|0}if((S|0)==-1){c[A>>2]=0;R=1;break}else{R=(c[A>>2]|0)==0;break}}}while(0);z=c[B>>2]|0;do{if((z|0)==0){T=47}else{M=c[z+12>>2]|0;if((M|0)==(c[z+16>>2]|0)){U=wc[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{U=c[M>>2]|0}if((U|0)==-1){c[B>>2]=0;T=47;break}else{if(R){break}else{T=49;break}}}}while(0);if((T|0)==47){if(R){T=49}}if((T|0)==49){c[j>>2]=c[j>>2]|2}c[b>>2]=c[A>>2];oh(c[m>>2]|0)|0;B=c[u>>2]|0;c[u>>2]=0;if((B|0)==0){i=d;return}uc[c[v>>2]&511](B);i=d;return}}while(0);d=ic(4)|0;Qp(d);Cb(d|0,14952,168)}function Om(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0;p=i;i=i+528|0;q=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[q>>2];q=p|0;r=p+8|0;s=p+408|0;t=p+416|0;u=p+424|0;v=p+432|0;w=p+448|0;x=p+464|0;y=p+480|0;z=p+496|0;A=p+512|0;B=p+520|0;c[q>>2]=o;o=r|0;C=v;Kq(C|0,0,12)|0;D=w;Kq(D|0,0,12)|0;E=x;Kq(E|0,0,12)|0;F=y;Kq(F|0,0,12)|0;G=z;Kq(G|0,0,12)|0;Rm(f,g,s,t,u,v,w,x,y,A);g=m|0;c[n>>2]=c[g>>2];f=b|0;b=e|0;e=l;H=y+4|0;I=y+8|0;J=x+4|0;K=x+8|0;L=(h&512|0)!=0;h=w+4|0;M=w+8|0;N=z+4|0;O=z+8|0;P=s+3|0;Q=v+4|0;R=210;S=o;T=o;o=r+400|0;r=0;U=0;a:while(1){V=c[f>>2]|0;do{if((V|0)==0){W=1}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){Y=wc[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{Y=c[X>>2]|0}if((Y|0)==-1){c[f>>2]=0;W=1;break}else{W=(c[f>>2]|0)==0;break}}}while(0);V=c[b>>2]|0;do{if((V|0)==0){Z=16}else{X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){_=wc[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{_=c[X>>2]|0}if((_|0)==-1){c[b>>2]=0;Z=16;break}else{if(W){$=V;break}else{aa=R;ba=S;ca=T;da=U;Z=302;break a}}}}while(0);if((Z|0)==16){Z=0;if(W){aa=R;ba=S;ca=T;da=U;Z=302;break}else{$=0}}b:do{switch(a[s+r|0]|0){case 1:{if((r|0)==3){aa=R;ba=S;ca=T;da=U;Z=302;break a}V=c[f>>2]|0;X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){ea=wc[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{ea=c[X>>2]|0}if(!(yc[c[(c[e>>2]|0)+12>>2]&63](l,8192,ea)|0)){Z=41;break a}X=c[f>>2]|0;V=X+12|0;fa=c[V>>2]|0;if((fa|0)==(c[X+16>>2]|0)){ga=wc[c[(c[X>>2]|0)+40>>2]&255](X)|0}else{c[V>>2]=fa+4;ga=c[fa>>2]|0}bi(z,ga);Z=42;break};case 0:{Z=42;break};case 3:{fa=a[E]|0;V=(fa&1)==0;if(V){ha=(fa&255)>>>1}else{ha=c[J>>2]|0}X=a[F]|0;ia=(X&1)==0;if(ia){ja=(X&255)>>>1}else{ja=c[H>>2]|0}if((ha|0)==(-ja|0)){ka=U;la=o;ma=T;na=S;oa=R;break b}if(V){pa=(fa&255)>>>1}else{pa=c[J>>2]|0}do{if((pa|0)!=0){if(ia){qa=(X&255)>>>1}else{qa=c[H>>2]|0}if((qa|0)==0){break}ra=c[f>>2]|0;sa=c[ra+12>>2]|0;if((sa|0)==(c[ra+16>>2]|0)){ta=wc[c[(c[ra>>2]|0)+36>>2]&255](ra)|0;ua=ta;va=a[E]|0}else{ua=c[sa>>2]|0;va=fa}sa=c[f>>2]|0;ta=sa+12|0;ra=c[ta>>2]|0;wa=(ra|0)==(c[sa+16>>2]|0);if((ua|0)==(c[((va&1)==0?J:c[K>>2]|0)>>2]|0)){if(wa){wc[c[(c[sa>>2]|0)+40>>2]&255](sa)|0}else{c[ta>>2]=ra+4}ta=a[E]|0;if((ta&1)==0){xa=(ta&255)>>>1}else{xa=c[J>>2]|0}ka=xa>>>0>1>>>0?x:U;la=o;ma=T;na=S;oa=R;break b}if(wa){ya=wc[c[(c[sa>>2]|0)+36>>2]&255](sa)|0}else{ya=c[ra>>2]|0}if((ya|0)!=(c[((a[F]&1)==0?H:c[I>>2]|0)>>2]|0)){Z=134;break a}ra=c[f>>2]|0;sa=ra+12|0;wa=c[sa>>2]|0;if((wa|0)==(c[ra+16>>2]|0)){wc[c[(c[ra>>2]|0)+40>>2]&255](ra)|0}else{c[sa>>2]=wa+4}a[k]=1;wa=a[F]|0;if((wa&1)==0){za=(wa&255)>>>1}else{za=c[H>>2]|0}ka=za>>>0>1>>>0?y:U;la=o;ma=T;na=S;oa=R;break b}}while(0);if(V){Aa=(fa&255)>>>1}else{Aa=c[J>>2]|0}ia=c[f>>2]|0;wa=c[ia+12>>2]|0;sa=(wa|0)==(c[ia+16>>2]|0);if((Aa|0)==0){if(sa){ra=wc[c[(c[ia>>2]|0)+36>>2]&255](ia)|0;Ba=ra;Ca=a[F]|0}else{Ba=c[wa>>2]|0;Ca=X}if((Ba|0)!=(c[((Ca&1)==0?H:c[I>>2]|0)>>2]|0)){ka=U;la=o;ma=T;na=S;oa=R;break b}ra=c[f>>2]|0;ta=ra+12|0;Da=c[ta>>2]|0;if((Da|0)==(c[ra+16>>2]|0)){wc[c[(c[ra>>2]|0)+40>>2]&255](ra)|0}else{c[ta>>2]=Da+4}a[k]=1;Da=a[F]|0;if((Da&1)==0){Ea=(Da&255)>>>1}else{Ea=c[H>>2]|0}ka=Ea>>>0>1>>>0?y:U;la=o;ma=T;na=S;oa=R;break b}if(sa){sa=wc[c[(c[ia>>2]|0)+36>>2]&255](ia)|0;Fa=sa;Ga=a[E]|0}else{Fa=c[wa>>2]|0;Ga=fa}if((Fa|0)!=(c[((Ga&1)==0?J:c[K>>2]|0)>>2]|0)){a[k]=1;ka=U;la=o;ma=T;na=S;oa=R;break b}wa=c[f>>2]|0;sa=wa+12|0;ia=c[sa>>2]|0;if((ia|0)==(c[wa+16>>2]|0)){wc[c[(c[wa>>2]|0)+40>>2]&255](wa)|0}else{c[sa>>2]=ia+4}ia=a[E]|0;if((ia&1)==0){Ha=(ia&255)>>>1}else{Ha=c[J>>2]|0}ka=Ha>>>0>1>>>0?x:U;la=o;ma=T;na=S;oa=R;break};case 2:{if(!((U|0)!=0|r>>>0<2>>>0)){if((r|0)==2){Ia=(a[P]|0)!=0}else{Ia=0}if(!(L|Ia)){ka=0;la=o;ma=T;na=S;oa=R;break b}}ia=a[D]|0;sa=(ia&1)==0?h:c[M>>2]|0;c:do{if((r|0)==0){Ja=sa;Ka=ia;La=$;Ma=$}else{if((d[s+(r-1)|0]|0)>>>0<2>>>0){Na=sa;Oa=ia}else{Ja=sa;Ka=ia;La=$;Ma=$;break}while(1){if((Oa&1)==0){Pa=(Oa&255)>>>1;Qa=h}else{Pa=c[h>>2]|0;Qa=c[M>>2]|0}if((Na|0)==(Qa+(Pa<<2)|0)){Ra=Oa;break}if(!(yc[c[(c[e>>2]|0)+12>>2]&63](l,8192,c[Na>>2]|0)|0)){Z=148;break}Na=Na+4|0;Oa=a[D]|0}if((Z|0)==148){Z=0;Ra=a[D]|0}wa=(Ra&1)==0;Da=Na-(wa?h:c[M>>2]|0)>>2;ta=a[G]|0;ra=(ta&1)==0;if(ra){Sa=(ta&255)>>>1}else{Sa=c[N>>2]|0}d:do{if(!(Da>>>0>Sa>>>0)){if(ra){Ta=(ta&255)>>>1;Ua=N;Va=N+(((ta&255)>>>1)-Da<<2)|0}else{Wa=c[O>>2]|0;Xa=c[N>>2]|0;Ta=Xa;Ua=Wa;Va=Wa+(Xa-Da<<2)|0}Xa=Ua+(Ta<<2)|0;if((Va|0)==(Xa|0)){Ja=Na;Ka=Ra;La=$;Ma=$;break c}else{Ya=Va;Za=wa?h:c[M>>2]|0}while(1){if((c[Ya>>2]|0)!=(c[Za>>2]|0)){break d}Wa=Ya+4|0;if((Wa|0)==(Xa|0)){Ja=Na;Ka=Ra;La=$;Ma=$;break c}Ya=Wa;Za=Za+4|0}}}while(0);Ja=wa?h:c[M>>2]|0;Ka=Ra;La=$;Ma=$}}while(0);e:while(1){if((Ka&1)==0){_a=(Ka&255)>>>1;$a=h}else{_a=c[h>>2]|0;$a=c[M>>2]|0}if((Ja|0)==($a+(_a<<2)|0)){break}ia=c[f>>2]|0;do{if((ia|0)==0){ab=1}else{sa=c[ia+12>>2]|0;if((sa|0)==(c[ia+16>>2]|0)){bb=wc[c[(c[ia>>2]|0)+36>>2]&255](ia)|0}else{bb=c[sa>>2]|0}if((bb|0)==-1){c[f>>2]=0;ab=1;break}else{ab=(c[f>>2]|0)==0;break}}}while(0);do{if((La|0)==0){cb=Ma;Z=178}else{ia=c[La+12>>2]|0;if((ia|0)==(c[La+16>>2]|0)){db=wc[c[(c[La>>2]|0)+36>>2]&255](La)|0}else{db=c[ia>>2]|0}if((db|0)==-1){c[b>>2]=0;cb=0;Z=178;break}else{if(ab^(Ma|0)==0){eb=Ma;fb=Ma;break}else{break e}}}}while(0);if((Z|0)==178){Z=0;if(ab){break}else{eb=0;fb=cb}}ia=c[f>>2]|0;wa=c[ia+12>>2]|0;if((wa|0)==(c[ia+16>>2]|0)){gb=wc[c[(c[ia>>2]|0)+36>>2]&255](ia)|0}else{gb=c[wa>>2]|0}if((gb|0)!=(c[Ja>>2]|0)){break}wa=c[f>>2]|0;ia=wa+12|0;sa=c[ia>>2]|0;if((sa|0)==(c[wa+16>>2]|0)){wc[c[(c[wa>>2]|0)+40>>2]&255](wa)|0}else{c[ia>>2]=sa+4}Ja=Ja+4|0;Ka=a[D]|0;La=eb;Ma=fb}if(!L){ka=U;la=o;ma=T;na=S;oa=R;break b}sa=a[D]|0;if((sa&1)==0){hb=(sa&255)>>>1;ib=h}else{hb=c[h>>2]|0;ib=c[M>>2]|0}if((Ja|0)==(ib+(hb<<2)|0)){ka=U;la=o;ma=T;na=S;oa=R}else{Z=193;break a}break};case 4:{sa=0;ia=o;wa=T;fa=S;X=R;f:while(1){V=c[f>>2]|0;do{if((V|0)==0){jb=1}else{Da=c[V+12>>2]|0;if((Da|0)==(c[V+16>>2]|0)){kb=wc[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{kb=c[Da>>2]|0}if((kb|0)==-1){c[f>>2]=0;jb=1;break}else{jb=(c[f>>2]|0)==0;break}}}while(0);V=c[b>>2]|0;do{if((V|0)==0){Z=207}else{Da=c[V+12>>2]|0;if((Da|0)==(c[V+16>>2]|0)){lb=wc[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{lb=c[Da>>2]|0}if((lb|0)==-1){c[b>>2]=0;Z=207;break}else{if(jb){break}else{break f}}}}while(0);if((Z|0)==207){Z=0;if(jb){break}}V=c[f>>2]|0;Da=c[V+12>>2]|0;if((Da|0)==(c[V+16>>2]|0)){mb=wc[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{mb=c[Da>>2]|0}if(yc[c[(c[e>>2]|0)+12>>2]&63](l,2048,mb)|0){Da=c[n>>2]|0;if((Da|0)==(c[q>>2]|0)){Sm(m,n,q);nb=c[n>>2]|0}else{nb=Da}c[n>>2]=nb+4;c[nb>>2]=mb;ob=sa+1|0;pb=ia;qb=wa;rb=fa;sb=X}else{Da=a[C]|0;if((Da&1)==0){tb=(Da&255)>>>1}else{tb=c[Q>>2]|0}if((tb|0)==0|(sa|0)==0){break}if((mb|0)!=(c[u>>2]|0)){break}if((wa|0)==(ia|0)){Da=(X|0)!=210;V=wa-fa|0;ta=V>>>0<2147483647>>>0?V<<1:-1;if(Da){ub=fa}else{ub=0}Da=lq(ub,ta)|0;ra=Da;if((Da|0)==0){yq()}vb=ra+(ta>>>2<<2)|0;wb=ra+(V>>2<<2)|0;xb=ra;yb=96}else{vb=ia;wb=wa;xb=fa;yb=X}c[wb>>2]=sa;ob=0;pb=vb;qb=wb+4|0;rb=xb;sb=yb}ra=c[f>>2]|0;V=ra+12|0;ta=c[V>>2]|0;if((ta|0)==(c[ra+16>>2]|0)){wc[c[(c[ra>>2]|0)+40>>2]&255](ra)|0;sa=ob;ia=pb;wa=qb;fa=rb;X=sb;continue}else{c[V>>2]=ta+4;sa=ob;ia=pb;wa=qb;fa=rb;X=sb;continue}}if((fa|0)==(wa|0)|(sa|0)==0){zb=ia;Ab=wa;Bb=fa;Cb=X}else{if((wa|0)==(ia|0)){ta=(X|0)!=210;V=wa-fa|0;ra=V>>>0<2147483647>>>0?V<<1:-1;if(ta){Db=fa}else{Db=0}ta=lq(Db,ra)|0;Da=ta;if((ta|0)==0){yq()}Eb=Da+(ra>>>2<<2)|0;Fb=Da+(V>>2<<2)|0;Gb=Da;Hb=96}else{Eb=ia;Fb=wa;Gb=fa;Hb=X}c[Fb>>2]=sa;zb=Eb;Ab=Fb+4|0;Bb=Gb;Cb=Hb}Da=c[A>>2]|0;if((Da|0)>0){V=c[f>>2]|0;do{if((V|0)==0){Ib=1}else{ra=c[V+12>>2]|0;if((ra|0)==(c[V+16>>2]|0)){Jb=wc[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{Jb=c[ra>>2]|0}if((Jb|0)==-1){c[f>>2]=0;Ib=1;break}else{Ib=(c[f>>2]|0)==0;break}}}while(0);V=c[b>>2]|0;do{if((V|0)==0){Z=259}else{sa=c[V+12>>2]|0;if((sa|0)==(c[V+16>>2]|0)){Kb=wc[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{Kb=c[sa>>2]|0}if((Kb|0)==-1){c[b>>2]=0;Z=259;break}else{if(Ib){Lb=V;break}else{Z=265;break a}}}}while(0);if((Z|0)==259){Z=0;if(Ib){Z=265;break a}else{Lb=0}}V=c[f>>2]|0;sa=c[V+12>>2]|0;if((sa|0)==(c[V+16>>2]|0)){Mb=wc[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{Mb=c[sa>>2]|0}if((Mb|0)!=(c[t>>2]|0)){Z=265;break a}sa=c[f>>2]|0;V=sa+12|0;X=c[V>>2]|0;if((X|0)==(c[sa+16>>2]|0)){wc[c[(c[sa>>2]|0)+40>>2]&255](sa)|0;Nb=Lb;Ob=Da;Pb=Lb}else{c[V>>2]=X+4;Nb=Lb;Ob=Da;Pb=Lb}while(1){X=c[f>>2]|0;do{if((X|0)==0){Qb=1}else{V=c[X+12>>2]|0;if((V|0)==(c[X+16>>2]|0)){Rb=wc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{Rb=c[V>>2]|0}if((Rb|0)==-1){c[f>>2]=0;Qb=1;break}else{Qb=(c[f>>2]|0)==0;break}}}while(0);do{if((Nb|0)==0){Sb=Pb;Z=282}else{X=c[Nb+12>>2]|0;if((X|0)==(c[Nb+16>>2]|0)){Tb=wc[c[(c[Nb>>2]|0)+36>>2]&255](Nb)|0}else{Tb=c[X>>2]|0}if((Tb|0)==-1){c[b>>2]=0;Sb=0;Z=282;break}else{if(Qb^(Pb|0)==0){Ub=Pb;Vb=Pb;break}else{Z=289;break a}}}}while(0);if((Z|0)==282){Z=0;if(Qb){Z=289;break a}else{Ub=Sb;Vb=0}}X=c[f>>2]|0;V=c[X+12>>2]|0;if((V|0)==(c[X+16>>2]|0)){Wb=wc[c[(c[X>>2]|0)+36>>2]&255](X)|0}else{Wb=c[V>>2]|0}if(!(yc[c[(c[e>>2]|0)+12>>2]&63](l,2048,Wb)|0)){Z=289;break a}if((c[n>>2]|0)==(c[q>>2]|0)){Sm(m,n,q)}V=c[f>>2]|0;X=c[V+12>>2]|0;if((X|0)==(c[V+16>>2]|0)){Xb=wc[c[(c[V>>2]|0)+36>>2]&255](V)|0}else{Xb=c[X>>2]|0}X=c[n>>2]|0;c[n>>2]=X+4;c[X>>2]=Xb;X=Ob-1|0;c[A>>2]=X;V=c[f>>2]|0;sa=V+12|0;fa=c[sa>>2]|0;if((fa|0)==(c[V+16>>2]|0)){wc[c[(c[V>>2]|0)+40>>2]&255](V)|0}else{c[sa>>2]=fa+4}if((X|0)>0){Nb=Vb;Ob=X;Pb=Ub}else{break}}}if((c[n>>2]|0)==(c[g>>2]|0)){Z=300;break a}else{ka=U;la=zb;ma=Ab;na=Bb;oa=Cb}break};default:{ka=U;la=o;ma=T;na=S;oa=R}}}while(0);g:do{if((Z|0)==42){Z=0;if((r|0)==3){aa=R;ba=S;ca=T;da=U;Z=302;break a}else{Yb=$;Zb=$}while(1){Da=c[f>>2]|0;do{if((Da|0)==0){_b=1}else{X=c[Da+12>>2]|0;if((X|0)==(c[Da+16>>2]|0)){$b=wc[c[(c[Da>>2]|0)+36>>2]&255](Da)|0}else{$b=c[X>>2]|0}if(($b|0)==-1){c[f>>2]=0;_b=1;break}else{_b=(c[f>>2]|0)==0;break}}}while(0);do{if((Yb|0)==0){ac=Zb;Z=56}else{Da=c[Yb+12>>2]|0;if((Da|0)==(c[Yb+16>>2]|0)){bc=wc[c[(c[Yb>>2]|0)+36>>2]&255](Yb)|0}else{bc=c[Da>>2]|0}if((bc|0)==-1){c[b>>2]=0;ac=0;Z=56;break}else{if(_b^(Zb|0)==0){cc=Zb;dc=Zb;break}else{ka=U;la=o;ma=T;na=S;oa=R;break g}}}}while(0);if((Z|0)==56){Z=0;if(_b){ka=U;la=o;ma=T;na=S;oa=R;break g}else{cc=0;dc=ac}}Da=c[f>>2]|0;X=c[Da+12>>2]|0;if((X|0)==(c[Da+16>>2]|0)){ec=wc[c[(c[Da>>2]|0)+36>>2]&255](Da)|0}else{ec=c[X>>2]|0}if(!(yc[c[(c[e>>2]|0)+12>>2]&63](l,8192,ec)|0)){ka=U;la=o;ma=T;na=S;oa=R;break g}X=c[f>>2]|0;Da=X+12|0;fa=c[Da>>2]|0;if((fa|0)==(c[X+16>>2]|0)){fc=wc[c[(c[X>>2]|0)+40>>2]&255](X)|0}else{c[Da>>2]=fa+4;fc=c[fa>>2]|0}bi(z,fc);Yb=cc;Zb=dc}}}while(0);fa=r+1|0;if(fa>>>0<4>>>0){R=oa;S=na;T=ma;o=la;r=fa;U=ka}else{aa=oa;ba=na;ca=ma;da=ka;Z=302;break}}h:do{if((Z|0)==41){c[j>>2]=c[j>>2]|4;gc=0;hc=S;ic=R}else if((Z|0)==134){c[j>>2]=c[j>>2]|4;gc=0;hc=S;ic=R}else if((Z|0)==193){c[j>>2]=c[j>>2]|4;gc=0;hc=S;ic=R}else if((Z|0)==265){c[j>>2]=c[j>>2]|4;gc=0;hc=Bb;ic=Cb}else if((Z|0)==289){c[j>>2]=c[j>>2]|4;gc=0;hc=Bb;ic=Cb}else if((Z|0)==300){c[j>>2]=c[j>>2]|4;gc=0;hc=Bb;ic=Cb}else if((Z|0)==302){i:do{if((da|0)!=0){ka=da;ma=da+4|0;na=da+8|0;oa=1;j:while(1){U=a[ka]|0;if((U&1)==0){jc=(U&255)>>>1}else{jc=c[ma>>2]|0}if(!(oa>>>0<jc>>>0)){break i}U=c[f>>2]|0;do{if((U|0)==0){kc=1}else{r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){lc=wc[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{lc=c[r>>2]|0}if((lc|0)==-1){c[f>>2]=0;kc=1;break}else{kc=(c[f>>2]|0)==0;break}}}while(0);U=c[b>>2]|0;do{if((U|0)==0){Z=321}else{r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){mc=wc[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{mc=c[r>>2]|0}if((mc|0)==-1){c[b>>2]=0;Z=321;break}else{if(kc){break}else{break j}}}}while(0);if((Z|0)==321){Z=0;if(kc){break}}U=c[f>>2]|0;r=c[U+12>>2]|0;if((r|0)==(c[U+16>>2]|0)){nc=wc[c[(c[U>>2]|0)+36>>2]&255](U)|0}else{nc=c[r>>2]|0}if((a[ka]&1)==0){oc=ma}else{oc=c[na>>2]|0}if((nc|0)!=(c[oc+(oa<<2)>>2]|0)){break}r=oa+1|0;U=c[f>>2]|0;la=U+12|0;o=c[la>>2]|0;if((o|0)==(c[U+16>>2]|0)){wc[c[(c[U>>2]|0)+40>>2]&255](U)|0;oa=r;continue}else{c[la>>2]=o+4;oa=r;continue}}c[j>>2]=c[j>>2]|4;gc=0;hc=ba;ic=aa;break h}}while(0);if((ba|0)==(ca|0)){gc=1;hc=ca;ic=aa;break}c[B>>2]=0;Km(v,ba,ca,B);if((c[B>>2]|0)==0){gc=1;hc=ba;ic=aa;break}c[j>>2]=c[j>>2]|4;gc=0;hc=ba;ic=aa}}while(0);Zh(z);Zh(y);Zh(x);Zh(w);Nh(v);if((hc|0)==0){i=p;return gc|0}uc[ic&511](hc);i=p;return gc|0}function Pm(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;d=i;i=i+456|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=n|0;c[s>>2]=m;t=n+4|0;c[t>>2]=210;u=m+400|0;gi(p,h);m=p|0;v=c[m>>2]|0;if(!((c[5356]|0)==-1)){c[l>>2]=21424;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21424,l,116)}l=(c[5357]|0)-1|0;w=c[v+8>>2]|0;do{if((c[v+12>>2]|0)-w>>2>>>0>l>>>0){x=c[w+(l<<2)>>2]|0;if((x|0)==0){break}y=x;a[q]=0;z=f|0;A=c[z>>2]|0;c[r>>2]=A;if(Om(e,r,g,p,c[h+4>>2]|0,j,q,y,n,o,u)|0){B=k;if((a[B]&1)==0){c[k+4>>2]=0;a[B]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}B=x;if((a[q]|0)!=0){bi(k,Fc[c[(c[B>>2]|0)+44>>2]&63](y,45)|0)}x=Fc[c[(c[B>>2]|0)+44>>2]&63](y,48)|0;y=c[o>>2]|0;B=y-4|0;C=c[s>>2]|0;while(1){if(!(C>>>0<B>>>0)){break}if((c[C>>2]|0)==(x|0)){C=C+4|0}else{break}}Qm(k,C,y)|0}x=e|0;B=c[x>>2]|0;do{if((B|0)==0){D=1}else{E=c[B+12>>2]|0;if((E|0)==(c[B+16>>2]|0)){F=wc[c[(c[B>>2]|0)+36>>2]&255](B)|0}else{F=c[E>>2]|0}if((F|0)==-1){c[x>>2]=0;D=1;break}else{D=(c[x>>2]|0)==0;break}}}while(0);do{if((A|0)==0){G=35}else{B=c[A+12>>2]|0;if((B|0)==(c[A+16>>2]|0)){H=wc[c[(c[A>>2]|0)+36>>2]&255](A)|0}else{H=c[B>>2]|0}if((H|0)==-1){c[z>>2]=0;G=35;break}else{if(D){break}else{G=37;break}}}}while(0);if((G|0)==35){if(D){G=37}}if((G|0)==37){c[j>>2]=c[j>>2]|2}c[b>>2]=c[x>>2];oh(c[m>>2]|0)|0;z=c[s>>2]|0;c[s>>2]=0;if((z|0)==0){i=d;return}uc[c[t>>2]&511](z);i=d;return}}while(0);d=ic(4)|0;Qp(d);Cb(d|0,14952,168)}function Qm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=b;g=d;h=a[f]|0;if((h&1)==0){i=1;j=h;k=(h&255)>>>1}else{h=c[b>>2]|0;i=(h&-2)-1|0;j=h&255;k=c[b+4>>2]|0}h=e-g>>2;if((h|0)==0){return b|0}if((i-k|0)>>>0<h>>>0){di(b,i,k+h-i|0,k,k,0,0);l=a[f]|0}else{l=j}if((l&1)==0){m=b+4|0}else{m=c[b+8>>2]|0}l=m+(k<<2)|0;if((d|0)==(e|0)){n=l}else{j=k+((e-4+(-g|0)|0)>>>2)+1|0;g=d;d=l;while(1){c[d>>2]=c[g>>2];l=g+4|0;if((l|0)==(e|0)){break}else{g=l;d=d+4|0}}n=m+(j<<2)|0}c[n>>2]=0;n=k+h|0;if((a[f]&1)==0){a[f]=n<<1;return b|0}else{c[b+4>>2]=n;return b|0}return 0}function Rm(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,C=0,D=0,E=0,F=0,G=0;n=i;i=i+176|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=n+56|0;t=n+72|0;u=n+88|0;v=n+104|0;w=n+112|0;x=n+128|0;y=n+144|0;z=n+160|0;if(b){b=c[d>>2]|0;if(!((c[5472]|0)==-1)){c[p>>2]=21888;c[p+4>>2]=18;c[p+8>>2]=0;Ih(21888,p,116)}p=(c[5473]|0)-1|0;A=c[b+8>>2]|0;if(!((c[b+12>>2]|0)-A>>2>>>0>p>>>0)){C=ic(4)|0;D=C;Qp(D);Cb(C|0,14952,168)}b=c[A+(p<<2)>>2]|0;if((b|0)==0){C=ic(4)|0;D=C;Qp(D);Cb(C|0,14952,168)}C=b;vc[c[(c[b>>2]|0)+44>>2]&127](q,C);D=e;B=c[q>>2]|0;a[D]=B;B=B>>8;a[D+1|0]=B;B=B>>8;a[D+2|0]=B;B=B>>8;a[D+3|0]=B;D=b;vc[c[(c[D>>2]|0)+32>>2]&127](r,C);q=l;if((a[q]&1)==0){c[l+4>>2]=0;a[q]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}ai(l,0);p=r;c[q>>2]=c[p>>2];c[q+4>>2]=c[p+4>>2];c[q+8>>2]=c[p+8>>2];Kq(p|0,0,12)|0;Zh(r);vc[c[(c[D>>2]|0)+28>>2]&127](s,C);r=k;if((a[r]&1)==0){c[k+4>>2]=0;a[r]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}ai(k,0);p=s;c[r>>2]=c[p>>2];c[r+4>>2]=c[p+4>>2];c[r+8>>2]=c[p+8>>2];Kq(p|0,0,12)|0;Zh(s);s=b;c[f>>2]=wc[c[(c[s>>2]|0)+12>>2]&255](C)|0;c[g>>2]=wc[c[(c[s>>2]|0)+16>>2]&255](C)|0;vc[c[(c[b>>2]|0)+20>>2]&127](t,C);b=h;if((a[b]&1)==0){a[h+1|0]=0;a[b]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Sh(h,0);p=t;c[b>>2]=c[p>>2];c[b+4>>2]=c[p+4>>2];c[b+8>>2]=c[p+8>>2];Kq(p|0,0,12)|0;Nh(t);vc[c[(c[D>>2]|0)+24>>2]&127](u,C);D=j;if((a[D]&1)==0){c[j+4>>2]=0;a[D]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}ai(j,0);t=u;c[D>>2]=c[t>>2];c[D+4>>2]=c[t+4>>2];c[D+8>>2]=c[t+8>>2];Kq(t|0,0,12)|0;Zh(u);E=wc[c[(c[s>>2]|0)+36>>2]&255](C)|0;c[m>>2]=E;i=n;return}else{C=c[d>>2]|0;if(!((c[5474]|0)==-1)){c[o>>2]=21896;c[o+4>>2]=18;c[o+8>>2]=0;Ih(21896,o,116)}o=(c[5475]|0)-1|0;d=c[C+8>>2]|0;if(!((c[C+12>>2]|0)-d>>2>>>0>o>>>0)){F=ic(4)|0;G=F;Qp(G);Cb(F|0,14952,168)}C=c[d+(o<<2)>>2]|0;if((C|0)==0){F=ic(4)|0;G=F;Qp(G);Cb(F|0,14952,168)}F=C;vc[c[(c[C>>2]|0)+44>>2]&127](v,F);G=e;B=c[v>>2]|0;a[G]=B;B=B>>8;a[G+1|0]=B;B=B>>8;a[G+2|0]=B;B=B>>8;a[G+3|0]=B;G=C;vc[c[(c[G>>2]|0)+32>>2]&127](w,F);v=l;if((a[v]&1)==0){c[l+4>>2]=0;a[v]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}ai(l,0);l=w;c[v>>2]=c[l>>2];c[v+4>>2]=c[l+4>>2];c[v+8>>2]=c[l+8>>2];Kq(l|0,0,12)|0;Zh(w);vc[c[(c[G>>2]|0)+28>>2]&127](x,F);w=k;if((a[w]&1)==0){c[k+4>>2]=0;a[w]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}ai(k,0);k=x;c[w>>2]=c[k>>2];c[w+4>>2]=c[k+4>>2];c[w+8>>2]=c[k+8>>2];Kq(k|0,0,12)|0;Zh(x);x=C;c[f>>2]=wc[c[(c[x>>2]|0)+12>>2]&255](F)|0;c[g>>2]=wc[c[(c[x>>2]|0)+16>>2]&255](F)|0;vc[c[(c[C>>2]|0)+20>>2]&127](y,F);C=h;if((a[C]&1)==0){a[h+1|0]=0;a[C]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}Sh(h,0);h=y;c[C>>2]=c[h>>2];c[C+4>>2]=c[h+4>>2];c[C+8>>2]=c[h+8>>2];Kq(h|0,0,12)|0;Nh(y);vc[c[(c[G>>2]|0)+24>>2]&127](z,F);G=j;if((a[G]&1)==0){c[j+4>>2]=0;a[G]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}ai(j,0);j=z;c[G>>2]=c[j>>2];c[G+4>>2]=c[j+4>>2];c[G+8>>2]=c[j+8>>2];Kq(j|0,0,12)|0;Zh(z);E=wc[c[(c[x>>2]|0)+36>>2]&255](F)|0;c[m>>2]=E;i=n;return}}function Sm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a+4|0;f=(c[e>>2]|0)!=210;g=a|0;a=c[g>>2]|0;h=a;i=(c[d>>2]|0)-h|0;j=i>>>0<2147483647>>>0?i<<1:-1;i=(c[b>>2]|0)-h>>2;if(f){k=a}else{k=0}a=lq(k,j)|0;k=a;if((a|0)==0){yq()}do{if(f){c[g>>2]=k;l=k}else{a=c[g>>2]|0;c[g>>2]=k;if((a|0)==0){l=k;break}uc[c[e>>2]&511](a);l=c[g>>2]|0}}while(0);c[e>>2]=96;c[b>>2]=l+(i<<2);c[d>>2]=(c[g>>2]|0)+(j>>>2<<2);return}function Tm(a){a=a|0;mh(a|0);sq(a);return}function Um(a){a=a|0;mh(a|0);return}function Vm(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=+k;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+448|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=d|0;m=d+120|0;n=d+232|0;o=d+240|0;p=d+248|0;q=d+256|0;r=d+264|0;s=d+280|0;t=d+296|0;u=d+312|0;v=d+320|0;w=d+424|0;x=d+432|0;y=d+440|0;z=d+16|0;c[m>>2]=z;A=d+128|0;B=bb(z|0,100,5416,(z=i,i=i+8|0,h[z>>3]=k,z)|0)|0;i=z;do{if(B>>>0>99>>>0){do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);C=Nk(m,c[4980]|0,5416,(z=i,i=i+8|0,h[z>>3]=k,z)|0)|0;i=z;D=c[m>>2]|0;if((D|0)==0){yq();E=c[m>>2]|0}else{E=D}D=jq(C)|0;if((D|0)!=0){F=D;G=C;H=D;I=E;break}yq();F=0;G=C;H=0;I=E}else{F=A;G=B;H=0;I=0}}while(0);gi(n,g);B=n|0;A=c[B>>2]|0;if(!((c[5358]|0)==-1)){c[l>>2]=21432;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21432,l,116)}l=(c[5359]|0)-1|0;E=c[A+8>>2]|0;do{if((c[A+12>>2]|0)-E>>2>>>0>l>>>0){z=c[E+(l<<2)>>2]|0;if((z|0)==0){break}C=z;D=c[m>>2]|0;Hc[c[(c[z>>2]|0)+32>>2]&15](C,D,D+G|0,F)|0;if((G|0)==0){J=0}else{J=(a[c[m>>2]|0]|0)==45}Kq(r|0,0,12)|0;D=s;Kq(D|0,0,12)|0;z=t;Kq(z|0,0,12)|0;Wm(f,J,n,o,p,q,r,s,t,u);K=v|0;L=c[u>>2]|0;if((G|0)>(L|0)){M=a[z]|0;if((M&1)==0){N=(M&255)>>>1}else{N=c[t+4>>2]|0}M=a[D]|0;if((M&1)==0){O=(M&255)>>>1}else{O=c[s+4>>2]|0}P=N+(G-L<<1|1)+O|0}else{M=a[z]|0;if((M&1)==0){Q=(M&255)>>>1}else{Q=c[t+4>>2]|0}M=a[D]|0;if((M&1)==0){R=(M&255)>>>1}else{R=c[s+4>>2]|0}P=Q+2+R|0}M=P+L|0;do{if(M>>>0>100>>>0){D=jq(M)|0;if((D|0)!=0){S=D;T=D;break}yq();S=0;T=0}else{S=K;T=0}}while(0);Xm(S,w,x,c[g+4>>2]|0,F,F+G|0,C,J,o,a[p]|0,a[q]|0,r,s,t,L);c[y>>2]=c[e>>2];Gd(b,y,S,c[w>>2]|0,c[x>>2]|0,g,j);if((T|0)!=0){kq(T)}Nh(t);Nh(s);Nh(r);oh(c[B>>2]|0)|0;if((H|0)!=0){kq(H)}if((I|0)==0){i=d;return}kq(I);i=d;return}}while(0);d=ic(4)|0;Qp(d);Cb(d|0,14952,168)}function Wm(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=i;i=i+12|0;i=i+7&-8;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=C;E=i;i=i+12|0;i=i+7&-8;F=i;i=i+12|0;i=i+7&-8;G=i;i=i+12|0;i=i+7&-8;H=c[e>>2]|0;if(b){if(!((c[5476]|0)==-1)){c[p>>2]=21904;c[p+4>>2]=18;c[p+8>>2]=0;Ih(21904,p,116)}p=(c[5477]|0)-1|0;b=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-b>>2>>>0>p>>>0)){I=ic(4)|0;J=I;Qp(J);Cb(I|0,14952,168)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){I=ic(4)|0;J=I;Qp(J);Cb(I|0,14952,168)}I=e;J=c[e>>2]|0;if(d){vc[c[J+44>>2]&127](r,I);r=f;B=c[q>>2]|0;a[r]=B;B=B>>8;a[r+1|0]=B;B=B>>8;a[r+2|0]=B;B=B>>8;a[r+3|0]=B;vc[c[(c[e>>2]|0)+32>>2]&127](s,I);r=l;if((a[r]&1)==0){a[l+1|0]=0;a[r]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Sh(l,0);q=s;c[r>>2]=c[q>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2];Kq(q|0,0,12)|0;Nh(s)}else{vc[c[J+40>>2]&127](u,I);u=f;B=c[t>>2]|0;a[u]=B;B=B>>8;a[u+1|0]=B;B=B>>8;a[u+2|0]=B;B=B>>8;a[u+3|0]=B;vc[c[(c[e>>2]|0)+28>>2]&127](v,I);u=l;if((a[u]&1)==0){a[l+1|0]=0;a[u]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Sh(l,0);t=v;c[u>>2]=c[t>>2];c[u+4>>2]=c[t+4>>2];c[u+8>>2]=c[t+8>>2];Kq(t|0,0,12)|0;Nh(v)}v=e;a[g]=wc[c[(c[v>>2]|0)+12>>2]&255](I)|0;a[h]=wc[c[(c[v>>2]|0)+16>>2]&255](I)|0;v=e;vc[c[(c[v>>2]|0)+20>>2]&127](w,I);t=j;if((a[t]&1)==0){a[j+1|0]=0;a[t]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Sh(j,0);u=w;c[t>>2]=c[u>>2];c[t+4>>2]=c[u+4>>2];c[t+8>>2]=c[u+8>>2];Kq(u|0,0,12)|0;Nh(w);vc[c[(c[v>>2]|0)+24>>2]&127](x,I);v=k;if((a[v]&1)==0){a[k+1|0]=0;a[v]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Sh(k,0);w=x;c[v>>2]=c[w>>2];c[v+4>>2]=c[w+4>>2];c[v+8>>2]=c[w+8>>2];Kq(w|0,0,12)|0;Nh(x);K=wc[c[(c[e>>2]|0)+36>>2]&255](I)|0;c[m>>2]=K;i=n;return}else{if(!((c[5478]|0)==-1)){c[o>>2]=21912;c[o+4>>2]=18;c[o+8>>2]=0;Ih(21912,o,116)}o=(c[5479]|0)-1|0;I=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-I>>2>>>0>o>>>0)){L=ic(4)|0;M=L;Qp(M);Cb(L|0,14952,168)}H=c[I+(o<<2)>>2]|0;if((H|0)==0){L=ic(4)|0;M=L;Qp(M);Cb(L|0,14952,168)}L=H;M=c[H>>2]|0;if(d){vc[c[M+44>>2]&127](z,L);z=f;B=c[y>>2]|0;a[z]=B;B=B>>8;a[z+1|0]=B;B=B>>8;a[z+2|0]=B;B=B>>8;a[z+3|0]=B;vc[c[(c[H>>2]|0)+32>>2]&127](A,L);z=l;if((a[z]&1)==0){a[l+1|0]=0;a[z]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Sh(l,0);y=A;c[z>>2]=c[y>>2];c[z+4>>2]=c[y+4>>2];c[z+8>>2]=c[y+8>>2];Kq(y|0,0,12)|0;Nh(A)}else{vc[c[M+40>>2]&127](D,L);D=f;B=c[C>>2]|0;a[D]=B;B=B>>8;a[D+1|0]=B;B=B>>8;a[D+2|0]=B;B=B>>8;a[D+3|0]=B;vc[c[(c[H>>2]|0)+28>>2]&127](E,L);D=l;if((a[D]&1)==0){a[l+1|0]=0;a[D]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}Sh(l,0);l=E;c[D>>2]=c[l>>2];c[D+4>>2]=c[l+4>>2];c[D+8>>2]=c[l+8>>2];Kq(l|0,0,12)|0;Nh(E)}E=H;a[g]=wc[c[(c[E>>2]|0)+12>>2]&255](L)|0;a[h]=wc[c[(c[E>>2]|0)+16>>2]&255](L)|0;E=H;vc[c[(c[E>>2]|0)+20>>2]&127](F,L);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Sh(j,0);j=F;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];Kq(j|0,0,12)|0;Nh(F);vc[c[(c[E>>2]|0)+24>>2]&127](G,L);E=k;if((a[E]&1)==0){a[k+1|0]=0;a[E]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}Sh(k,0);k=G;c[E>>2]=c[k>>2];c[E+4>>2]=c[k+4>>2];c[E+8>>2]=c[k+8>>2];Kq(k|0,0,12)|0;Nh(G);K=wc[c[(c[H>>2]|0)+36>>2]&255](L)|0;c[m>>2]=K;i=n;return}}function Xm(d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0;c[f>>2]=d;s=j;t=q;u=q+1|0;v=q+8|0;w=q+4|0;q=p;x=(g&512|0)==0;y=p+1|0;z=p+8|0;A=p+4|0;p=j+8|0;B=(r|0)>0;C=o;D=o+1|0;E=o+8|0;F=o+4|0;o=-r|0;G=0;H=h;while(1){a:do{switch(a[l+G|0]|0){case 0:{c[e>>2]=c[f>>2];I=H;break};case 1:{c[e>>2]=c[f>>2];h=Fc[c[(c[s>>2]|0)+28>>2]&63](j,32)|0;J=c[f>>2]|0;c[f>>2]=J+1;a[J]=h;I=H;break};case 3:{h=a[t]|0;J=(h&1)==0;if(J){K=(h&255)>>>1}else{K=c[w>>2]|0}if((K|0)==0){I=H;break a}if(J){L=u}else{L=c[v>>2]|0}J=a[L]|0;h=c[f>>2]|0;c[f>>2]=h+1;a[h]=J;I=H;break};case 2:{J=a[q]|0;h=(J&1)==0;if(h){M=(J&255)>>>1}else{M=c[A>>2]|0}if((M|0)==0|x){I=H;break a}if(h){N=(J&255)>>>1;O=y;P=y}else{J=c[z>>2]|0;N=c[A>>2]|0;O=J;P=J}J=O+N|0;h=c[f>>2]|0;if((P|0)==(J|0)){Q=h}else{R=h;h=P;while(1){a[R]=a[h]|0;S=h+1|0;T=R+1|0;if((S|0)==(J|0)){Q=T;break}else{R=T;h=S}}}c[f>>2]=Q;I=H;break};case 4:{h=c[f>>2]|0;R=k?H+1|0:H;J=R;while(1){if(!(J>>>0<i>>>0)){break}S=a[J]|0;if(S<<24>>24<0){break}if((b[(c[p>>2]|0)+(S<<24>>24<<1)>>1]&2048)==0){break}else{J=J+1|0}}S=J;if(B){if(J>>>0>R>>>0){T=R+(-S|0)|0;S=T>>>0<o>>>0?o:T;T=S+r|0;U=J;V=r;W=h;while(1){X=U-1|0;Y=a[X]|0;c[f>>2]=W+1;a[W]=Y;Y=V-1|0;Z=(Y|0)>0;if(!(X>>>0>R>>>0&Z)){break}U=X;V=Y;W=c[f>>2]|0}W=J+S|0;if(Z){_=T;$=W;aa=32}else{ba=0;ca=T;da=W}}else{_=r;$=J;aa=32}if((aa|0)==32){aa=0;ba=Fc[c[(c[s>>2]|0)+28>>2]&63](j,48)|0;ca=_;da=$}W=c[f>>2]|0;c[f>>2]=W+1;if((ca|0)>0){V=ca;U=W;while(1){a[U]=ba;Y=V-1|0;X=c[f>>2]|0;c[f>>2]=X+1;if((Y|0)>0){V=Y;U=X}else{ea=X;break}}}else{ea=W}a[ea]=m;fa=da}else{fa=J}if((fa|0)==(R|0)){U=Fc[c[(c[s>>2]|0)+28>>2]&63](j,48)|0;V=c[f>>2]|0;c[f>>2]=V+1;a[V]=U}else{U=a[C]|0;V=(U&1)==0;if(V){ga=(U&255)>>>1}else{ga=c[F>>2]|0}if((ga|0)==0){ha=fa;ia=0;ja=0;ka=-1}else{if(V){la=D}else{la=c[E>>2]|0}ha=fa;ia=0;ja=0;ka=a[la]|0}while(1){do{if((ia|0)==(ka|0)){V=c[f>>2]|0;c[f>>2]=V+1;a[V]=n;V=ja+1|0;U=a[C]|0;T=(U&1)==0;if(T){ma=(U&255)>>>1}else{ma=c[F>>2]|0}if(!(V>>>0<ma>>>0)){na=ka;oa=V;pa=0;break}if(T){qa=D}else{qa=c[E>>2]|0}if((a[qa+V|0]|0)==127){na=-1;oa=V;pa=0;break}if(T){ra=D}else{ra=c[E>>2]|0}na=a[ra+V|0]|0;oa=V;pa=0}else{na=ka;oa=ja;pa=ia}}while(0);V=ha-1|0;T=a[V]|0;U=c[f>>2]|0;c[f>>2]=U+1;a[U]=T;if((V|0)==(R|0)){break}else{ha=V;ia=pa+1|0;ja=oa;ka=na}}}J=c[f>>2]|0;if((h|0)==(J|0)){I=R;break a}W=J-1|0;if(W>>>0>h>>>0){sa=h;ta=W}else{I=R;break a}while(1){W=a[sa]|0;a[sa]=a[ta]|0;a[ta]=W;W=sa+1|0;J=ta-1|0;if(W>>>0<J>>>0){sa=W;ta=J}else{I=R;break}}break};default:{I=H}}}while(0);R=G+1|0;if(R>>>0<4>>>0){G=R;H=I}else{break}}I=a[t]|0;t=(I&1)==0;if(t){ua=(I&255)>>>1}else{ua=c[w>>2]|0}if(ua>>>0>1>>>0){if(t){va=(I&255)>>>1;wa=u;xa=u}else{u=c[v>>2]|0;va=c[w>>2]|0;wa=u;xa=u}u=xa+1|0;xa=wa+va|0;va=c[f>>2]|0;if((u|0)==(xa|0)){ya=va}else{wa=va;va=u;while(1){a[wa]=a[va]|0;u=va+1|0;w=wa+1|0;if((u|0)==(xa|0)){ya=w;break}else{wa=w;va=u}}}c[f>>2]=ya}ya=g&176;if((ya|0)==16){return}else if((ya|0)==32){c[e>>2]=c[f>>2];return}else{c[e>>2]=d;return}}function Ym(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+24|0;n=d+32|0;o=d+40|0;p=d+48|0;q=d+64|0;r=d+80|0;s=d+96|0;t=d+104|0;u=d+208|0;v=d+216|0;w=d+224|0;gi(l,g);x=l|0;y=c[x>>2]|0;if(!((c[5358]|0)==-1)){c[k>>2]=21432;c[k+4>>2]=18;c[k+8>>2]=0;Ih(21432,k,116)}k=(c[5359]|0)-1|0;z=c[y+8>>2]|0;do{if((c[y+12>>2]|0)-z>>2>>>0>k>>>0){A=c[z+(k<<2)>>2]|0;if((A|0)==0){break}B=A;C=j;D=a[C]|0;E=(D&1)==0;if(E){F=(D&255)>>>1}else{F=c[j+4>>2]|0}if((F|0)==0){G=0}else{if(E){H=j+1|0}else{H=c[j+8>>2]|0}E=a[H]|0;G=E<<24>>24==(Fc[c[(c[A>>2]|0)+28>>2]&63](B,45)|0)<<24>>24}Kq(p|0,0,12)|0;A=q;Kq(A|0,0,12)|0;E=r;Kq(E|0,0,12)|0;Wm(f,G,l,m,n,o,p,q,r,s);D=t|0;I=a[C]|0;J=(I&1)==0;if(J){K=(I&255)>>>1}else{K=c[j+4>>2]|0}L=c[s>>2]|0;if((K|0)>(L|0)){if(J){M=(I&255)>>>1}else{M=c[j+4>>2]|0}J=a[E]|0;if((J&1)==0){N=(J&255)>>>1}else{N=c[r+4>>2]|0}J=a[A]|0;if((J&1)==0){O=(J&255)>>>1}else{O=c[q+4>>2]|0}P=N+(M-L<<1|1)+O|0}else{J=a[E]|0;if((J&1)==0){Q=(J&255)>>>1}else{Q=c[r+4>>2]|0}J=a[A]|0;if((J&1)==0){R=(J&255)>>>1}else{R=c[q+4>>2]|0}P=Q+2+R|0}J=P+L|0;do{if(J>>>0>100>>>0){A=jq(J)|0;if((A|0)!=0){S=A;T=A;U=I;break}yq();S=0;T=0;U=a[C]|0}else{S=D;T=0;U=I}}while(0);if((U&1)==0){V=(U&255)>>>1;W=j+1|0}else{V=c[j+4>>2]|0;W=c[j+8>>2]|0}Xm(S,u,v,c[g+4>>2]|0,W,W+V|0,B,G,m,a[n]|0,a[o]|0,p,q,r,L);c[w>>2]=c[e>>2];Gd(b,w,S,c[u>>2]|0,c[v>>2]|0,g,h);if((T|0)==0){Nh(r);Nh(q);Nh(p);X=c[x>>2]|0;Y=X|0;Z=oh(Y)|0;i=d;return}kq(T);Nh(r);Nh(q);Nh(p);X=c[x>>2]|0;Y=X|0;Z=oh(Y)|0;i=d;return}}while(0);d=ic(4)|0;Qp(d);Cb(d|0,14952,168)}function Zm(a){a=a|0;mh(a|0);sq(a);return}function _m(a){a=a|0;mh(a|0);return}function $m(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=+k;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+1040|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=d|0;m=d+120|0;n=d+528|0;o=d+536|0;p=d+544|0;q=d+552|0;r=d+560|0;s=d+576|0;t=d+592|0;u=d+608|0;v=d+616|0;w=d+1016|0;x=d+1024|0;y=d+1032|0;z=d+16|0;c[m>>2]=z;A=d+128|0;B=bb(z|0,100,5416,(z=i,i=i+8|0,h[z>>3]=k,z)|0)|0;i=z;do{if(B>>>0>99>>>0){do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);C=Nk(m,c[4980]|0,5416,(z=i,i=i+8|0,h[z>>3]=k,z)|0)|0;i=z;D=c[m>>2]|0;if((D|0)==0){yq();E=c[m>>2]|0}else{E=D}D=jq(C<<2)|0;F=D;if((D|0)!=0){G=F;H=C;I=F;J=E;break}yq();G=0;H=C;I=0;J=E}else{G=A;H=B;I=0;J=0}}while(0);gi(n,g);B=n|0;A=c[B>>2]|0;if(!((c[5356]|0)==-1)){c[l>>2]=21424;c[l+4>>2]=18;c[l+8>>2]=0;Ih(21424,l,116)}l=(c[5357]|0)-1|0;E=c[A+8>>2]|0;do{if((c[A+12>>2]|0)-E>>2>>>0>l>>>0){z=c[E+(l<<2)>>2]|0;if((z|0)==0){break}C=z;F=c[m>>2]|0;Hc[c[(c[z>>2]|0)+48>>2]&15](C,F,F+H|0,G)|0;if((H|0)==0){K=0}else{K=(a[c[m>>2]|0]|0)==45}Kq(r|0,0,12)|0;F=s;Kq(F|0,0,12)|0;z=t;Kq(z|0,0,12)|0;an(f,K,n,o,p,q,r,s,t,u);D=v|0;L=c[u>>2]|0;if((H|0)>(L|0)){M=a[z]|0;if((M&1)==0){N=(M&255)>>>1}else{N=c[t+4>>2]|0}M=a[F]|0;if((M&1)==0){O=(M&255)>>>1}else{O=c[s+4>>2]|0}P=N+(H-L<<1|1)+O|0}else{M=a[z]|0;if((M&1)==0){Q=(M&255)>>>1}else{Q=c[t+4>>2]|0}M=a[F]|0;if((M&1)==0){R=(M&255)>>>1}else{R=c[s+4>>2]|0}P=Q+2+R|0}M=P+L|0;do{if(M>>>0>100>>>0){F=jq(M<<2)|0;z=F;if((F|0)!=0){S=z;T=z;break}yq();S=0;T=0}else{S=D;T=0}}while(0);bn(S,w,x,c[g+4>>2]|0,G,G+(H<<2)|0,C,K,o,c[p>>2]|0,c[q>>2]|0,r,s,t,L);c[y>>2]=c[e>>2];Wk(b,y,S,c[w>>2]|0,c[x>>2]|0,g,j);if((T|0)!=0){kq(T)}Zh(t);Zh(s);Nh(r);oh(c[B>>2]|0)|0;if((I|0)!=0){kq(I)}if((J|0)==0){i=d;return}kq(J);i=d;return}}while(0);d=ic(4)|0;Qp(d);Cb(d|0,14952,168)}function an(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=i;i=i+12|0;i=i+7&-8;x=i;i=i+12|0;i=i+7&-8;y=i;i=i+4|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=C;E=i;i=i+12|0;i=i+7&-8;F=i;i=i+12|0;i=i+7&-8;G=i;i=i+12|0;i=i+7&-8;H=c[e>>2]|0;if(b){if(!((c[5472]|0)==-1)){c[p>>2]=21888;c[p+4>>2]=18;c[p+8>>2]=0;Ih(21888,p,116)}p=(c[5473]|0)-1|0;b=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-b>>2>>>0>p>>>0)){I=ic(4)|0;J=I;Qp(J);Cb(I|0,14952,168)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){I=ic(4)|0;J=I;Qp(J);Cb(I|0,14952,168)}I=e;J=c[e>>2]|0;if(d){vc[c[J+44>>2]&127](r,I);r=f;B=c[q>>2]|0;a[r]=B;B=B>>8;a[r+1|0]=B;B=B>>8;a[r+2|0]=B;B=B>>8;a[r+3|0]=B;vc[c[(c[e>>2]|0)+32>>2]&127](s,I);r=l;if((a[r]&1)==0){c[l+4>>2]=0;a[r]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}ai(l,0);q=s;c[r>>2]=c[q>>2];c[r+4>>2]=c[q+4>>2];c[r+8>>2]=c[q+8>>2];Kq(q|0,0,12)|0;Zh(s)}else{vc[c[J+40>>2]&127](u,I);u=f;B=c[t>>2]|0;a[u]=B;B=B>>8;a[u+1|0]=B;B=B>>8;a[u+2|0]=B;B=B>>8;a[u+3|0]=B;vc[c[(c[e>>2]|0)+28>>2]&127](v,I);u=l;if((a[u]&1)==0){c[l+4>>2]=0;a[u]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}ai(l,0);t=v;c[u>>2]=c[t>>2];c[u+4>>2]=c[t+4>>2];c[u+8>>2]=c[t+8>>2];Kq(t|0,0,12)|0;Zh(v)}v=e;c[g>>2]=wc[c[(c[v>>2]|0)+12>>2]&255](I)|0;c[h>>2]=wc[c[(c[v>>2]|0)+16>>2]&255](I)|0;vc[c[(c[e>>2]|0)+20>>2]&127](w,I);t=j;if((a[t]&1)==0){a[j+1|0]=0;a[t]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Sh(j,0);u=w;c[t>>2]=c[u>>2];c[t+4>>2]=c[u+4>>2];c[t+8>>2]=c[u+8>>2];Kq(u|0,0,12)|0;Nh(w);vc[c[(c[e>>2]|0)+24>>2]&127](x,I);e=k;if((a[e]&1)==0){c[k+4>>2]=0;a[e]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}ai(k,0);w=x;c[e>>2]=c[w>>2];c[e+4>>2]=c[w+4>>2];c[e+8>>2]=c[w+8>>2];Kq(w|0,0,12)|0;Zh(x);K=wc[c[(c[v>>2]|0)+36>>2]&255](I)|0;c[m>>2]=K;i=n;return}else{if(!((c[5474]|0)==-1)){c[o>>2]=21896;c[o+4>>2]=18;c[o+8>>2]=0;Ih(21896,o,116)}o=(c[5475]|0)-1|0;I=c[H+8>>2]|0;if(!((c[H+12>>2]|0)-I>>2>>>0>o>>>0)){L=ic(4)|0;M=L;Qp(M);Cb(L|0,14952,168)}H=c[I+(o<<2)>>2]|0;if((H|0)==0){L=ic(4)|0;M=L;Qp(M);Cb(L|0,14952,168)}L=H;M=c[H>>2]|0;if(d){vc[c[M+44>>2]&127](z,L);z=f;B=c[y>>2]|0;a[z]=B;B=B>>8;a[z+1|0]=B;B=B>>8;a[z+2|0]=B;B=B>>8;a[z+3|0]=B;vc[c[(c[H>>2]|0)+32>>2]&127](A,L);z=l;if((a[z]&1)==0){c[l+4>>2]=0;a[z]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}ai(l,0);y=A;c[z>>2]=c[y>>2];c[z+4>>2]=c[y+4>>2];c[z+8>>2]=c[y+8>>2];Kq(y|0,0,12)|0;Zh(A)}else{vc[c[M+40>>2]&127](D,L);D=f;B=c[C>>2]|0;a[D]=B;B=B>>8;a[D+1|0]=B;B=B>>8;a[D+2|0]=B;B=B>>8;a[D+3|0]=B;vc[c[(c[H>>2]|0)+28>>2]&127](E,L);D=l;if((a[D]&1)==0){c[l+4>>2]=0;a[D]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}ai(l,0);l=E;c[D>>2]=c[l>>2];c[D+4>>2]=c[l+4>>2];c[D+8>>2]=c[l+8>>2];Kq(l|0,0,12)|0;Zh(E)}E=H;c[g>>2]=wc[c[(c[E>>2]|0)+12>>2]&255](L)|0;c[h>>2]=wc[c[(c[E>>2]|0)+16>>2]&255](L)|0;vc[c[(c[H>>2]|0)+20>>2]&127](F,L);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}Sh(j,0);j=F;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];Kq(j|0,0,12)|0;Nh(F);vc[c[(c[H>>2]|0)+24>>2]&127](G,L);H=k;if((a[H]&1)==0){c[k+4>>2]=0;a[H]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}ai(k,0);k=G;c[H>>2]=c[k>>2];c[H+4>>2]=c[k+4>>2];c[H+8>>2]=c[k+8>>2];Kq(k|0,0,12)|0;Zh(G);K=wc[c[(c[E>>2]|0)+36>>2]&255](L)|0;c[m>>2]=K;i=n;return}}function bn(b,d,e,f,g,h,i,j,k,l,m,n,o,p,q){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0;c[e>>2]=b;r=i;s=p;t=p+4|0;u=p+8|0;p=o;v=(f&512|0)==0;w=o+4|0;x=o+8|0;o=i;y=(q|0)>0;z=n;A=n+1|0;B=n+8|0;C=n+4|0;n=0;D=g;while(1){a:do{switch(a[k+n|0]|0){case 0:{c[d>>2]=c[e>>2];E=D;break};case 1:{c[d>>2]=c[e>>2];g=Fc[c[(c[r>>2]|0)+44>>2]&63](i,32)|0;F=c[e>>2]|0;c[e>>2]=F+4;c[F>>2]=g;E=D;break};case 3:{g=a[s]|0;F=(g&1)==0;if(F){G=(g&255)>>>1}else{G=c[t>>2]|0}if((G|0)==0){E=D;break a}if(F){H=t}else{H=c[u>>2]|0}F=c[H>>2]|0;g=c[e>>2]|0;c[e>>2]=g+4;c[g>>2]=F;E=D;break};case 2:{F=a[p]|0;g=(F&1)==0;if(g){I=(F&255)>>>1}else{I=c[w>>2]|0}if((I|0)==0|v){E=D;break a}if(g){J=(F&255)>>>1;K=w;L=w}else{F=c[x>>2]|0;J=c[w>>2]|0;K=F;L=F}F=K+(J<<2)|0;g=c[e>>2]|0;if((L|0)==(F|0)){M=g}else{N=(K+(J-1<<2)+(-L|0)|0)>>>2;O=g;P=L;while(1){c[O>>2]=c[P>>2];Q=P+4|0;if((Q|0)==(F|0)){break}O=O+4|0;P=Q}M=g+(N+1<<2)|0}c[e>>2]=M;E=D;break};case 4:{P=c[e>>2]|0;O=j?D+4|0:D;F=O;while(1){if(!(F>>>0<h>>>0)){break}if(yc[c[(c[o>>2]|0)+12>>2]&63](i,2048,c[F>>2]|0)|0){F=F+4|0}else{break}}if(y){do{if(F>>>0>O>>>0){N=F;g=q;Q=c[e>>2]|0;while(1){R=N-4|0;S=Q+4|0;c[Q>>2]=c[R>>2];T=g-1|0;U=(T|0)>0;if(R>>>0>O>>>0&U){N=R;g=T;Q=S}else{break}}c[e>>2]=S;if(U){V=T;W=R;X=34;break}Q=c[e>>2]|0;c[e>>2]=Q+4;Y=Q;Z=R}else{V=q;W=F;X=34}}while(0);do{if((X|0)==34){X=0;Q=Fc[c[(c[r>>2]|0)+44>>2]&63](i,48)|0;g=c[e>>2]|0;N=g+4|0;c[e>>2]=N;if((V|0)>0){_=V;$=g;aa=N}else{Y=g;Z=W;break}while(1){c[$>>2]=Q;N=_-1|0;if((N|0)>0){_=N;$=aa;aa=aa+4|0}else{break}}c[e>>2]=g+(V+1<<2);Y=g+(V<<2)|0;Z=W}}while(0);c[Y>>2]=l;ba=Z}else{ba=F}if((ba|0)==(O|0)){Q=Fc[c[(c[r>>2]|0)+44>>2]&63](i,48)|0;N=c[e>>2]|0;ca=N+4|0;c[e>>2]=ca;c[N>>2]=Q;da=ca}else{ca=a[z]|0;Q=(ca&1)==0;if(Q){ea=(ca&255)>>>1}else{ea=c[C>>2]|0}if((ea|0)==0){fa=ba;ga=0;ha=0;ia=-1}else{if(Q){ja=A}else{ja=c[B>>2]|0}fa=ba;ga=0;ha=0;ia=a[ja]|0}while(1){do{if((ga|0)==(ia|0)){Q=c[e>>2]|0;c[e>>2]=Q+4;c[Q>>2]=m;Q=ha+1|0;ca=a[z]|0;N=(ca&1)==0;if(N){ka=(ca&255)>>>1}else{ka=c[C>>2]|0}if(!(Q>>>0<ka>>>0)){la=ia;ma=Q;na=0;break}if(N){oa=A}else{oa=c[B>>2]|0}if((a[oa+Q|0]|0)==127){la=-1;ma=Q;na=0;break}if(N){pa=A}else{pa=c[B>>2]|0}la=a[pa+Q|0]|0;ma=Q;na=0}else{la=ia;ma=ha;na=ga}}while(0);g=fa-4|0;Q=c[g>>2]|0;N=c[e>>2]|0;c[e>>2]=N+4;c[N>>2]=Q;if((g|0)==(O|0)){break}else{fa=g;ga=na+1|0;ha=ma;ia=la}}da=c[e>>2]|0}if((P|0)==(da|0)){E=O;break a}F=da-4|0;if(F>>>0>P>>>0){qa=P;ra=F}else{E=O;break a}while(1){F=c[qa>>2]|0;c[qa>>2]=c[ra>>2];c[ra>>2]=F;F=qa+4|0;g=ra-4|0;if(F>>>0<g>>>0){qa=F;ra=g}else{E=O;break}}break};default:{E=D}}}while(0);O=n+1|0;if(O>>>0<4>>>0){n=O;D=E}else{break}}E=a[s]|0;s=(E&1)==0;if(s){sa=(E&255)>>>1}else{sa=c[t>>2]|0}if(sa>>>0>1>>>0){if(s){ta=(E&255)>>>1;ua=t;va=t}else{E=c[u>>2]|0;ta=c[t>>2]|0;ua=E;va=E}E=va+4|0;va=ua+(ta<<2)|0;t=c[e>>2]|0;if((E|0)==(va|0)){wa=t}else{u=(ua+(ta-1<<2)+(-E|0)|0)>>>2;ta=t;ua=E;while(1){c[ta>>2]=c[ua>>2];E=ua+4|0;if((E|0)==(va|0)){break}else{ta=ta+4|0;ua=E}}wa=t+(u+1<<2)|0}c[e>>2]=wa}wa=f&176;if((wa|0)==32){c[d>>2]=c[e>>2];return}else if((wa|0)==16){return}else{c[d>>2]=b;return}}function cn(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;d=i;i=i+528|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+16|0;m=d+24|0;n=d+32|0;o=d+40|0;p=d+48|0;q=d+64|0;r=d+80|0;s=d+96|0;t=d+104|0;u=d+504|0;v=d+512|0;w=d+520|0;gi(l,g);x=l|0;y=c[x>>2]|0;if(!((c[5356]|0)==-1)){c[k>>2]=21424;c[k+4>>2]=18;c[k+8>>2]=0;Ih(21424,k,116)}k=(c[5357]|0)-1|0;z=c[y+8>>2]|0;do{if((c[y+12>>2]|0)-z>>2>>>0>k>>>0){A=c[z+(k<<2)>>2]|0;if((A|0)==0){break}B=A;C=j;D=a[C]|0;E=(D&1)==0;if(E){F=(D&255)>>>1}else{F=c[j+4>>2]|0}if((F|0)==0){G=0}else{if(E){H=j+4|0}else{H=c[j+8>>2]|0}E=c[H>>2]|0;G=(E|0)==(Fc[c[(c[A>>2]|0)+44>>2]&63](B,45)|0)}Kq(p|0,0,12)|0;A=q;Kq(A|0,0,12)|0;E=r;Kq(E|0,0,12)|0;an(f,G,l,m,n,o,p,q,r,s);D=t|0;I=a[C]|0;J=(I&1)==0;if(J){K=(I&255)>>>1}else{K=c[j+4>>2]|0}L=c[s>>2]|0;if((K|0)>(L|0)){if(J){M=(I&255)>>>1}else{M=c[j+4>>2]|0}J=a[E]|0;if((J&1)==0){N=(J&255)>>>1}else{N=c[r+4>>2]|0}J=a[A]|0;if((J&1)==0){O=(J&255)>>>1}else{O=c[q+4>>2]|0}P=N+(M-L<<1|1)+O|0}else{J=a[E]|0;if((J&1)==0){Q=(J&255)>>>1}else{Q=c[r+4>>2]|0}J=a[A]|0;if((J&1)==0){R=(J&255)>>>1}else{R=c[q+4>>2]|0}P=Q+2+R|0}J=P+L|0;do{if(J>>>0>100>>>0){A=jq(J<<2)|0;E=A;if((A|0)!=0){S=E;T=E;U=I;break}yq();S=0;T=0;U=a[C]|0}else{S=D;T=0;U=I}}while(0);if((U&1)==0){V=(U&255)>>>1;W=j+4|0}else{V=c[j+4>>2]|0;W=c[j+8>>2]|0}bn(S,u,v,c[g+4>>2]|0,W,W+(V<<2)|0,B,G,m,c[n>>2]|0,c[o>>2]|0,p,q,r,L);c[w>>2]=c[e>>2];Wk(b,w,S,c[u>>2]|0,c[v>>2]|0,g,h);if((T|0)==0){Zh(r);Zh(q);Nh(p);X=c[x>>2]|0;Y=X|0;Z=oh(Y)|0;i=d;return}kq(T);Zh(r);Zh(q);Nh(p);X=c[x>>2]|0;Y=X|0;Z=oh(Y)|0;i=d;return}}while(0);d=ic(4)|0;Qp(d);Cb(d|0,14952,168)}function dn(a){a=a|0;mh(a|0);sq(a);return}function en(a){a=a|0;mh(a|0);return}function fn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=lc(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function gn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;i=i+16|0;j=d|0;k=j;Kq(k|0,0,12)|0;l=a[h]|0;if((l&1)==0){m=(l&255)>>>1;n=h+1|0;o=h+1|0}else{l=c[h+8>>2]|0;m=c[h+4>>2]|0;n=l;o=l}l=o+m|0;do{if(n>>>0<l>>>0){m=n;do{Th(j,a[m]|0);m=m+1|0;}while(m>>>0<l>>>0);m=(e|0)==-1?-1:e<<1;if((a[k]&1)==0){p=m;q=10;break}r=c[j+8>>2]|0;s=m}else{p=(e|0)==-1?-1:e<<1;q=10}}while(0);if((q|0)==10){r=j+1|0;s=p}p=nb(s|0,f|0,g|0,r|0)|0;Kq(b|0,0,12)|0;r=Lq(p|0)|0;g=p+r|0;if((r|0)>0){t=p}else{Nh(j);i=d;return}do{Th(b,a[t]|0);t=t+1|0;}while(t>>>0<g>>>0);Nh(j);i=d;return}function hn(a,b){a=a|0;b=b|0;Rb(((b|0)==-1?-1:b<<1)|0)|0;return}function jn(a){a=a|0;mh(a|0);sq(a);return}function kn(a){a=a|0;mh(a|0);return}function ln(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=lc(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function mn(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;d=i;i=i+240|0;j=d|0;k=d+8|0;l=d+40|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+192|0;q=d+200|0;r=d+208|0;s=d+224|0;t=d+232|0;u=r;Kq(u|0,0,12)|0;c[s+4>>2]=0;c[s>>2]=10120;v=a[h]|0;if((v&1)==0){w=(v&255)>>>1;x=h+4|0;y=h+4|0}else{v=c[h+8>>2]|0;w=c[h+4>>2]|0;x=v;y=v}v=y+(w<<2)|0;w=k|0;a:do{if(x>>>0<v>>>0){y=s|0;h=s;z=k+32|0;A=x;B=10120;while(1){c[m>>2]=A;C=(Lc[c[B+12>>2]&31](y,j,A,v,m,w,z,l)|0)==2;D=c[m>>2]|0;if(C|(D|0)==(A|0)){break}if(w>>>0<(c[l>>2]|0)>>>0){C=w;do{Th(r,a[C]|0);C=C+1|0;}while(C>>>0<(c[l>>2]|0)>>>0);E=c[m>>2]|0}else{E=D}if(!(E>>>0<v>>>0)){break a}A=E;B=c[h>>2]|0}Gm(3328)}}while(0);mh(s|0);if((a[u]&1)==0){F=r+1|0}else{F=c[r+8>>2]|0}u=nb(((e|0)==-1?-1:e<<1)|0,f|0,g|0,F|0)|0;Kq(b|0,0,12)|0;c[t+4>>2]=0;c[t>>2]=10064;F=Lq(u|0)|0;g=u+F|0;if((F|0)<=0){G=t|0;mh(G);Nh(r);i=d;return}F=t|0;f=t;e=g;s=o|0;E=o+128|0;o=u;u=10064;while(1){c[q>>2]=o;v=(Lc[c[u+16>>2]&31](F,n,o,(e-o|0)>32?o+32|0:g,q,s,E,p)|0)==2;m=c[q>>2]|0;if(v|(m|0)==(o|0)){break}if(s>>>0<(c[p>>2]|0)>>>0){v=s;do{bi(b,c[v>>2]|0);v=v+4|0;}while(v>>>0<(c[p>>2]|0)>>>0);H=c[q>>2]|0}else{H=m}if(!(H>>>0<g>>>0)){I=37;break}o=H;u=c[f>>2]|0}if((I|0)==37){G=t|0;mh(G);Nh(r);i=d;return}Gm(3328)}function nn(a,b){a=a|0;b=b|0;Rb(((b|0)==-1?-1:b<<1)|0)|0;return}function on(b){b=b|0;var d=0,e=0,f=0;c[b>>2]=9464;d=b+8|0;e=c[d>>2]|0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);if((e|0)==(c[4980]|0)){f=b|0;mh(f);return}mb(c[d>>2]|0);f=b|0;mh(f);return}function pn(a){a=a|0;a=ic(8)|0;ph(a,5272);c[a>>2]=8400;Cb(a|0,14984,44)}function qn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;e=i;i=i+448|0;f=e|0;g=e+16|0;h=e+32|0;j=e+48|0;k=e+64|0;l=e+80|0;m=e+96|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+160|0;r=e+176|0;s=e+192|0;t=e+208|0;u=e+224|0;v=e+240|0;w=e+256|0;x=e+272|0;y=e+288|0;z=e+304|0;A=e+320|0;B=e+336|0;C=e+352|0;D=e+368|0;E=e+384|0;F=e+400|0;G=e+416|0;H=e+432|0;c[b+4>>2]=d-1;c[b>>2]=9720;d=b+8|0;I=b+12|0;J=b+136|0;a[J]=1;K=b+24|0;c[I>>2]=K;c[d>>2]=K;c[b+16>>2]=J;J=28;L=K;do{if((L|0)==0){M=0}else{c[L>>2]=0;M=c[I>>2]|0}L=M+4|0;c[I>>2]=L;J=J-1|0;}while((J|0)!=0);Lh(b+144|0,5160,1);J=c[d>>2]|0;d=c[I>>2]|0;if((d|0)!=(J|0)){c[I>>2]=d+(~((d-4+(-J|0)|0)>>>2)<<2)}c[5013]=0;c[5012]=9424;if(!((c[5278]|0)==-1)){c[G>>2]=21112;c[G+4>>2]=18;c[G+8>>2]=0;Ih(21112,G,116)}rn(b,20048,(c[5279]|0)-1|0);c[5011]=0;c[5010]=9384;if(!((c[5276]|0)==-1)){c[F>>2]=21104;c[F+4>>2]=18;c[F+8>>2]=0;Ih(21104,F,116)}rn(b,20040,(c[5277]|0)-1|0);c[5063]=0;c[5062]=9832;c[5064]=0;a[20260]=0;c[5064]=c[(lb()|0)>>2];if(!((c[5358]|0)==-1)){c[E>>2]=21432;c[E+4>>2]=18;c[E+8>>2]=0;Ih(21432,E,116)}rn(b,20248,(c[5359]|0)-1|0);c[5061]=0;c[5060]=9752;if(!((c[5356]|0)==-1)){c[D>>2]=21424;c[D+4>>2]=18;c[D+8>>2]=0;Ih(21424,D,116)}rn(b,20240,(c[5357]|0)-1|0);c[5015]=0;c[5014]=9520;if(!((c[5282]|0)==-1)){c[C>>2]=21128;c[C+4>>2]=18;c[C+8>>2]=0;Ih(21128,C,116)}rn(b,20056,(c[5283]|0)-1|0);c[1991]=0;c[1990]=9464;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);c[1992]=c[4980];if(!((c[5280]|0)==-1)){c[B>>2]=21120;c[B+4>>2]=18;c[B+8>>2]=0;Ih(21120,B,116)}rn(b,7960,(c[5281]|0)-1|0);c[5017]=0;c[5016]=9576;if(!((c[5284]|0)==-1)){c[A>>2]=21136;c[A+4>>2]=18;c[A+8>>2]=0;Ih(21136,A,116)}rn(b,20064,(c[5285]|0)-1|0);c[5019]=0;c[5018]=9632;if(!((c[5286]|0)==-1)){c[z>>2]=21144;c[z+4>>2]=18;c[z+8>>2]=0;Ih(21144,z,116)}rn(b,20072,(c[5287]|0)-1|0);c[4993]=0;c[4992]=8928;a[19976]=46;a[19977]=44;Kq(19980,0,12)|0;if(!((c[5262]|0)==-1)){c[y>>2]=21048;c[y+4>>2]=18;c[y+8>>2]=0;Ih(21048,y,116)}rn(b,19968,(c[5263]|0)-1|0);c[1983]=0;c[1982]=8880;c[1984]=46;c[1985]=44;Kq(7944,0,12)|0;if(!((c[5260]|0)==-1)){c[x>>2]=21040;c[x+4>>2]=18;c[x+8>>2]=0;Ih(21040,x,116)}rn(b,7928,(c[5261]|0)-1|0);c[5009]=0;c[5008]=9312;if(!((c[5274]|0)==-1)){c[w>>2]=21096;c[w+4>>2]=18;c[w+8>>2]=0;Ih(21096,w,116)}rn(b,20032,(c[5275]|0)-1|0);c[5007]=0;c[5006]=9240;if(!((c[5272]|0)==-1)){c[v>>2]=21088;c[v+4>>2]=18;c[v+8>>2]=0;Ih(21088,v,116)}rn(b,20024,(c[5273]|0)-1|0);c[5005]=0;c[5004]=9176;if(!((c[5270]|0)==-1)){c[u>>2]=21080;c[u+4>>2]=18;c[u+8>>2]=0;Ih(21080,u,116)}rn(b,20016,(c[5271]|0)-1|0);c[5003]=0;c[5002]=9112;if(!((c[5268]|0)==-1)){c[t>>2]=21072;c[t+4>>2]=18;c[t+8>>2]=0;Ih(21072,t,116)}rn(b,20008,(c[5269]|0)-1|0);c[5073]=0;c[5072]=10952;if(!((c[5478]|0)==-1)){c[s>>2]=21912;c[s+4>>2]=18;c[s+8>>2]=0;Ih(21912,s,116)}rn(b,20288,(c[5479]|0)-1|0);c[5071]=0;c[5070]=10888;if(!((c[5476]|0)==-1)){c[r>>2]=21904;c[r+4>>2]=18;c[r+8>>2]=0;Ih(21904,r,116)}rn(b,20280,(c[5477]|0)-1|0);c[5069]=0;c[5068]=10824;if(!((c[5474]|0)==-1)){c[q>>2]=21896;c[q+4>>2]=18;c[q+8>>2]=0;Ih(21896,q,116)}rn(b,20272,(c[5475]|0)-1|0);c[5067]=0;c[5066]=10760;if(!((c[5472]|0)==-1)){c[p>>2]=21888;c[p+4>>2]=18;c[p+8>>2]=0;Ih(21888,p,116)}rn(b,20264,(c[5473]|0)-1|0);c[4991]=0;c[4990]=8584;if(!((c[5250]|0)==-1)){c[o>>2]=21e3;c[o+4>>2]=18;c[o+8>>2]=0;Ih(21e3,o,116)}rn(b,19960,(c[5251]|0)-1|0);c[4989]=0;c[4988]=8544;if(!((c[5248]|0)==-1)){c[n>>2]=20992;c[n+4>>2]=18;c[n+8>>2]=0;Ih(20992,n,116)}rn(b,19952,(c[5249]|0)-1|0);c[4987]=0;c[4986]=8504;if(!((c[5246]|0)==-1)){c[m>>2]=20984;c[m+4>>2]=18;c[m+8>>2]=0;Ih(20984,m,116)}rn(b,19944,(c[5247]|0)-1|0);c[4985]=0;c[4984]=8464;if(!((c[5244]|0)==-1)){c[l>>2]=20976;c[l+4>>2]=18;c[l+8>>2]=0;Ih(20976,l,116)}rn(b,19936,(c[5245]|0)-1|0);c[1979]=0;c[1978]=8784;c[1980]=8832;if(!((c[5258]|0)==-1)){c[k>>2]=21032;c[k+4>>2]=18;c[k+8>>2]=0;Ih(21032,k,116)}rn(b,7912,(c[5259]|0)-1|0);c[1975]=0;c[1974]=8688;c[1976]=8736;if(!((c[5256]|0)==-1)){c[j>>2]=21024;c[j+4>>2]=18;c[j+8>>2]=0;Ih(21024,j,116)}rn(b,7896,(c[5257]|0)-1|0);c[1971]=0;c[1970]=9688;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);c[1972]=c[4980];c[1970]=8656;if(!((c[5254]|0)==-1)){c[h>>2]=21016;c[h+4>>2]=18;c[h+8>>2]=0;Ih(21016,h,116)}rn(b,7880,(c[5255]|0)-1|0);c[1967]=0;c[1966]=9688;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);c[1968]=c[4980];c[1966]=8624;if(!((c[5252]|0)==-1)){c[g>>2]=21008;c[g+4>>2]=18;c[g+8>>2]=0;Ih(21008,g,116)}rn(b,7864,(c[5253]|0)-1|0);c[5001]=0;c[5e3]=9016;if(!((c[5266]|0)==-1)){c[f>>2]=21064;c[f+4>>2]=18;c[f+8>>2]=0;Ih(21064,f,116)}rn(b,2e4,(c[5267]|0)-1|0);c[4999]=0;c[4998]=8976;if(!((c[5264]|0)==-1)){c[H>>2]=21056;c[H+4>>2]=18;c[H+8>>2]=0;Ih(21056,H,116)}rn(b,19992,(c[5265]|0)-1|0);i=e;return}function rn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;nh(b|0);e=a+8|0;f=a+12|0;a=c[f>>2]|0;g=e|0;h=c[g>>2]|0;i=a-h>>2;do{if(i>>>0>d>>>0){j=h}else{k=d+1|0;if(i>>>0<k>>>0){wp(e,k-i|0);j=c[g>>2]|0;break}if(!(i>>>0>k>>>0)){j=h;break}l=h+(k<<2)|0;if((a|0)==(l|0)){j=h;break}c[f>>2]=a+(~((a-4+(-l|0)|0)>>>2)<<2);j=h}}while(0);h=c[j+(d<<2)>>2]|0;if((h|0)==0){m=j;n=m+(d<<2)|0;c[n>>2]=b;return}oh(h|0)|0;m=c[g>>2]|0;n=m+(d<<2)|0;c[n>>2]=b;return}function sn(a){a=a|0;tn(a);sq(a);return}function tn(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;c[b>>2]=9720;d=b+12|0;e=c[d>>2]|0;f=b+8|0;g=c[f>>2]|0;if((e|0)!=(g|0)){h=0;i=g;g=e;while(1){e=c[i+(h<<2)>>2]|0;if((e|0)==0){j=g;k=i}else{oh(e|0)|0;j=c[d>>2]|0;k=c[f>>2]|0}e=h+1|0;if(e>>>0<j-k>>2>>>0){h=e;i=k;g=j}else{break}}}Nh(b+144|0);j=c[f>>2]|0;if((j|0)==0){l=b|0;mh(l);return}f=c[d>>2]|0;if((f|0)!=(j|0)){c[d>>2]=f+(~((f-4+(-j|0)|0)>>>2)<<2)}if((b+24|0)==(j|0)){a[b+136|0]=0;l=b|0;mh(l);return}else{sq(j);l=b|0;mh(l);return}}function un(){var b=0,d=0;if((a[21976]|0)!=0){b=c[4972]|0;return b|0}if((rb(21976)|0)==0){b=c[4972]|0;return b|0}do{if((a[21984]|0)==0){if((rb(21984)|0)==0){break}qn(20080,1);c[4976]=20080;c[4974]=19904}}while(0);d=c[c[4974]>>2]|0;c[4978]=d;nh(d|0);c[4972]=19912;b=c[4972]|0;return b|0}function vn(a){a=a|0;var b=0;b=c[(un()|0)>>2]|0;c[a>>2]=b;nh(b|0);return}function wn(a,b){a=a|0;b=b|0;var d=0;d=c[b>>2]|0;c[a>>2]=d;nh(d|0);return}function xn(a){a=a|0;oh(c[a>>2]|0)|0;return}function yn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;f=c[a>>2]|0;a=b|0;if(!((c[a>>2]|0)==-1)){c[e>>2]=b;c[e+4>>2]=18;c[e+8>>2]=0;Ih(a,e,116)}e=(c[b+4>>2]|0)-1|0;b=c[f+8>>2]|0;if(!((c[f+12>>2]|0)-b>>2>>>0>e>>>0)){g=ic(4)|0;h=g;Qp(h);Cb(g|0,14952,168);return 0}f=c[b+(e<<2)>>2]|0;if((f|0)==0){g=ic(4)|0;h=g;Qp(h);Cb(g|0,14952,168);return 0}else{i=d;return f|0}return 0}function zn(a){a=a|0;mh(a|0);sq(a);return}function An(a){a=a|0;if((a|0)==0){return}uc[c[(c[a>>2]|0)+4>>2]&511](a);return}function Bn(a){a=a|0;c[a+4>>2]=(H=c[5288]|0,c[5288]=H+1,H)+1;return}function Cn(a){a=a|0;mh(a|0);sq(a);return}function Dn(a,d,e){a=a|0;d=d|0;e=e|0;var f=0;if(!(e>>>0<128>>>0)){f=0;return f|0}f=(b[(c[(lb()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0;return f|0}function En(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){f=c[h>>2]|0;if(f>>>0<128>>>0){j=b[(c[(lb()|0)>>2]|0)+(f<<1)>>1]|0}else{j=0}b[i>>1]=j;f=h+4|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+2|0}}return g|0}function Fn(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((e|0)==(f|0)){g=e;return g|0}else{h=e}while(1){e=c[h>>2]|0;if(e>>>0<128>>>0){if(!((b[(c[(lb()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16==0)){g=h;i=7;break}}e=h+4|0;if((e|0)==(f|0)){g=f;i=7;break}else{h=e}}if((i|0)==7){return g|0}return 0}function Gn(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a=e;while(1){if((a|0)==(f|0)){g=f;h=7;break}e=c[a>>2]|0;if(!(e>>>0<128>>>0)){g=a;h=7;break}if((b[(c[(lb()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16==0){g=a;h=7;break}else{a=a+4|0}}if((h|0)==7){return g|0}return 0}function Hn(a,b){a=a|0;b=b|0;var d=0;if(!(b>>>0<128>>>0)){d=b;return d|0}d=c[(c[(mc()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function In(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(mc()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function Jn(a,b){a=a|0;b=b|0;var d=0;if(!(b>>>0<128>>>0)){d=b;return d|0}d=c[(c[(nc()|0)>>2]|0)+(b<<2)>>2]|0;return d|0}function Kn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128>>>0){g=c[(c[(nc()|0)>>2]|0)+(b<<2)>>2]|0}else{g=b}c[f>>2]=g;b=f+4|0;if((b|0)==(d|0)){e=d;break}else{f=b}}return e|0}function Ln(a,b){a=a|0;b=b|0;return b<<24>>24|0}function Mn(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){c[i>>2]=a[h]|0;f=h+1|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+4|0}}return g|0}function Nn(a,b,c){a=a|0;b=b|0;c=c|0;return(b>>>0<128>>>0?b&255:c)|0}function On(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if((d|0)==(e|0)){h=d;return h|0}b=((e-4+(-d|0)|0)>>>2)+1|0;i=d;j=g;while(1){g=c[i>>2]|0;a[j]=g>>>0<128>>>0?g&255:f;g=i+4|0;if((g|0)==(e|0)){break}else{i=g;j=j+1|0}}h=d+(b<<2)|0;return h|0}function Pn(b){b=b|0;var d=0;c[b>>2]=9832;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]|0)==0){break}tq(d)}}while(0);mh(b|0);sq(b);return}function Qn(b){b=b|0;var d=0;c[b>>2]=9832;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]|0)==0){break}tq(d)}}while(0);mh(b|0);return}function Rn(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24<0){d=b;return d|0}d=c[(c[(mc()|0)>>2]|0)+((b&255)<<2)>>2]&255;return d|0}function Sn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24<0){h=d}else{h=c[(c[(mc()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function Tn(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24<0){d=b;return d|0}d=c[(c[(nc()|0)>>2]|0)+(b<<24>>24<<2)>>2]&255;return d|0}function Un(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24<0){h=d}else{h=c[(c[(nc()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;break}else{g=d}}return f|0}function Vn(a,b){a=a|0;b=b|0;return b|0}function Wn(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((c|0)==(d|0)){f=c;return f|0}else{g=c;h=e}while(1){a[h]=a[g]|0;e=g+1|0;if((e|0)==(d|0)){f=d;break}else{g=e;h=h+1|0}}return f|0}function Xn(a,b,c){a=a|0;b=b|0;c=c|0;return(b<<24>>24<0?c:b)|0}function Yn(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((c|0)==(d|0)){g=c;return g|0}else{h=c;i=f}while(1){f=a[h]|0;a[i]=f<<24>>24<0?e:f;f=h+1|0;if((f|0)==(d|0)){g=d;break}else{h=f;i=i+1|0}}return g|0}function Zn(a){a=a|0;mh(a|0);sq(a);return}function _n(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function $n(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function ao(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function bo(a){a=a|0;return 1}function co(a){a=a|0;return 1}function eo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;return(b>>>0<e>>>0?b:e)|0}function fo(a){a=a|0;return 1}function go(a){a=a|0;on(a);sq(a);return}function ho(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;l=i;i=i+8|0;m=l|0;n=m;o=i;i=i+4|0;i=i+7&-8;p=e;while(1){if((p|0)==(f|0)){q=f;break}if((c[p>>2]|0)==0){q=p;break}else{p=p+4|0}}c[k>>2]=h;c[g>>2]=e;a:do{if((e|0)==(f|0)|(h|0)==(j|0)){r=e}else{p=d;s=j;t=b+8|0;u=o|0;v=h;w=e;x=q;while(1){y=c[p+4>>2]|0;c[m>>2]=c[p>>2];c[m+4>>2]=y;y=Vb(c[t>>2]|0)|0;z=Jp(v,g,x-w>>2,s-v|0,d)|0;if((y|0)!=0){Vb(y|0)|0}if((z|0)==(-1|0)){A=15;break}else if((z|0)==0){B=1;A=50;break}y=(c[k>>2]|0)+z|0;c[k>>2]=y;if((y|0)==(j|0)){A=48;break}if((x|0)==(f|0)){C=f;D=y;E=c[g>>2]|0}else{y=Vb(c[t>>2]|0)|0;z=Ip(u,0,d)|0;if((y|0)!=0){Vb(y|0)|0}if((z|0)==-1){B=2;A=50;break}y=c[k>>2]|0;if(z>>>0>(s-y|0)>>>0){B=1;A=50;break}b:do{if((z|0)!=0){F=z;G=u;H=y;while(1){I=a[G]|0;c[k>>2]=H+1;a[H]=I;I=F-1|0;if((I|0)==0){break b}F=I;G=G+1|0;H=c[k>>2]|0}}}while(0);y=(c[g>>2]|0)+4|0;c[g>>2]=y;z=y;while(1){if((z|0)==(f|0)){J=f;break}if((c[z>>2]|0)==0){J=z;break}else{z=z+4|0}}C=J;D=c[k>>2]|0;E=y}if((E|0)==(f|0)|(D|0)==(j|0)){r=E;break a}else{v=D;w=E;x=C}}if((A|0)==15){c[k>>2]=v;c:do{if((w|0)==(c[g>>2]|0)){K=w}else{x=w;u=v;while(1){s=c[x>>2]|0;p=Vb(c[t>>2]|0)|0;z=Ip(u,s,n)|0;if((p|0)!=0){Vb(p|0)|0}if((z|0)==-1){K=x;break c}p=(c[k>>2]|0)+z|0;c[k>>2]=p;z=x+4|0;if((z|0)==(c[g>>2]|0)){K=z;break}else{x=z;u=p}}}}while(0);c[g>>2]=K;B=2;i=l;return B|0}else if((A|0)==48){r=c[g>>2]|0;break}else if((A|0)==50){i=l;return B|0}}}while(0);B=(r|0)!=(f|0)|0;i=l;return B|0}function io(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;l=i;i=i+8|0;m=l|0;n=m;o=e;while(1){if((o|0)==(f|0)){p=f;break}if((a[o]|0)==0){p=o;break}else{o=o+1|0}}c[k>>2]=h;c[g>>2]=e;a:do{if((e|0)==(f|0)|(h|0)==(j|0)){q=e}else{o=d;r=j;s=b+8|0;t=h;u=e;v=p;while(1){w=c[o+4>>2]|0;c[m>>2]=c[o>>2];c[m+4>>2]=w;x=v;w=Vb(c[s>>2]|0)|0;y=Fp(t,g,x-u|0,r-t>>2,d)|0;if((w|0)!=0){Vb(w|0)|0}if((y|0)==(-1|0)){z=15;break}else if((y|0)==0){A=2;z=49;break}w=(c[k>>2]|0)+(y<<2)|0;c[k>>2]=w;if((w|0)==(j|0)){z=47;break}y=c[g>>2]|0;if((v|0)==(f|0)){B=f;C=w;D=y}else{E=Vb(c[s>>2]|0)|0;F=Ep(w,y,1,d)|0;if((E|0)!=0){Vb(E|0)|0}if((F|0)!=0){A=2;z=49;break}c[k>>2]=(c[k>>2]|0)+4;F=(c[g>>2]|0)+1|0;c[g>>2]=F;E=F;while(1){if((E|0)==(f|0)){G=f;break}if((a[E]|0)==0){G=E;break}else{E=E+1|0}}B=G;C=c[k>>2]|0;D=F}if((D|0)==(f|0)|(C|0)==(j|0)){q=D;break a}else{t=C;u=D;v=B}}if((z|0)==15){c[k>>2]=t;b:do{if((u|0)==(c[g>>2]|0)){H=u}else{v=t;r=u;while(1){o=Vb(c[s>>2]|0)|0;E=Ep(v,r,x-r|0,n)|0;if((o|0)!=0){Vb(o|0)|0}if((E|0)==0){I=r+1|0}else if((E|0)==(-1|0)){z=26;break}else if((E|0)==(-2|0)){z=27;break}else{I=r+E|0}E=(c[k>>2]|0)+4|0;c[k>>2]=E;if((I|0)==(c[g>>2]|0)){H=I;break b}else{v=E;r=I}}if((z|0)==26){c[g>>2]=r;A=2;i=l;return A|0}else if((z|0)==27){c[g>>2]=r;A=1;i=l;return A|0}}}while(0);c[g>>2]=H;A=(H|0)!=(f|0)|0;i=l;return A|0}else if((z|0)==47){q=c[g>>2]|0;break}else if((z|0)==49){i=l;return A|0}}}while(0);A=(q|0)!=(f|0)|0;i=l;return A|0}function jo(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+8|0;c[g>>2]=e;e=h|0;j=Vb(c[b+8>>2]|0)|0;b=Ip(e,0,d)|0;if((j|0)!=0){Vb(j|0)|0}if((b|0)==(-1|0)|(b|0)==0){k=2;i=h;return k|0}j=b-1|0;b=c[g>>2]|0;if(j>>>0>(f-b|0)>>>0){k=1;i=h;return k|0}if((j|0)==0){k=0;i=h;return k|0}else{l=j;m=e;n=b}while(1){b=a[m]|0;c[g>>2]=n+1;a[n]=b;b=l-1|0;if((b|0)==0){k=0;break}l=b;m=m+1|0;n=c[g>>2]|0}i=h;return k|0}function ko(a){a=a|0;var b=0,d=0,e=0;b=a+8|0;a=Vb(c[b>>2]|0)|0;d=Hp(0,0,4)|0;if((a|0)!=0){Vb(a|0)|0}if((d|0)!=0){e=-1;return e|0}d=c[b>>2]|0;if((d|0)==0){e=1;return e|0}b=Vb(d|0)|0;if((b|0)==0){e=0;return e|0}Vb(b|0)|0;e=0;return e|0}function lo(a){a=a|0;return 0}function mo(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if((f|0)==0|(d|0)==(e|0)){g=0;return g|0}h=e;i=a+8|0;a=d;d=0;j=0;while(1){k=Vb(c[i>>2]|0)|0;l=Dp(a,h-a|0,b)|0;if((k|0)!=0){Vb(k|0)|0}if((l|0)==0){m=1;n=a+1|0}else if((l|0)==(-1|0)|(l|0)==(-2|0)){g=d;o=15;break}else{m=l;n=a+l|0}l=m+d|0;k=j+1|0;if(k>>>0>=f>>>0|(n|0)==(e|0)){g=l;o=15;break}else{a=n;d=l;j=k}}if((o|0)==15){return g|0}return 0}function no(a){a=a|0;var b=0,d=0;b=c[a+8>>2]|0;do{if((b|0)==0){d=1}else{a=Vb(b|0)|0;if((a|0)==0){d=4;break}Vb(a|0)|0;d=4}}while(0);return d|0}function oo(a){a=a|0;mh(a|0);sq(a);return}function po(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=qo(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>1<<1);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function qo(d,f,g,h,i,j,k,l){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;c[g>>2]=d;c[j>>2]=h;do{if((l&2|0)!=0){if((i-h|0)<3){m=1;return m|0}else{c[j>>2]=h+1;a[h]=-17;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-69;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-65;break}}}while(0);h=f;l=c[g>>2]|0;if(!(l>>>0<f>>>0)){m=0;return m|0}d=i;i=l;a:while(1){l=b[i>>1]|0;n=l&65535;if(n>>>0>k>>>0){m=2;o=26;break}do{if((l&65535)>>>0<128>>>0){p=c[j>>2]|0;if((d-p|0)<1){m=1;o=26;break a}c[j>>2]=p+1;a[p]=l}else{if((l&65535)>>>0<2048>>>0){p=c[j>>2]|0;if((d-p|0)<2){m=1;o=26;break a}c[j>>2]=p+1;a[p]=n>>>6|192;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if((l&65535)>>>0<55296>>>0){p=c[j>>2]|0;if((d-p|0)<3){m=1;o=26;break a}c[j>>2]=p+1;a[p]=n>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if(!((l&65535)>>>0<56320>>>0)){if((l&65535)>>>0<57344>>>0){m=2;o=26;break a}p=c[j>>2]|0;if((d-p|0)<3){m=1;o=26;break a}c[j>>2]=p+1;a[p]=n>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n&63|128;break}if((h-i|0)<4){m=1;o=26;break a}p=i+2|0;q=e[p>>1]|0;if((q&64512|0)!=56320){m=2;o=26;break a}if((d-(c[j>>2]|0)|0)<4){m=1;o=26;break a}r=n&960;if(((r<<10)+65536|n<<10&64512|q&1023)>>>0>k>>>0){m=2;o=26;break a}c[g>>2]=p;p=(r>>>6)+1|0;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=p>>>2|240;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=n>>>2&15|p<<4&48|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n<<4&48|q>>>6&15|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=q&63|128}}while(0);n=(c[g>>2]|0)+2|0;c[g>>2]=n;if(n>>>0<f>>>0){i=n}else{m=0;o=26;break}}if((o|0)==26){return m|0}return 0}function ro(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=so(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>1<<1);i=b;return l|0}



function Oc(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function Pc(){return i|0}function Qc(a){a=a|0;i=a}function Rc(a,b){a=a|0;b=b|0;if((w|0)==0){w=a;x=b}}function Sc(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function Tc(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function Uc(a){a=a|0;J=a}function Vc(a){a=a|0;K=a}function Wc(a){a=a|0;L=a}function Xc(a){a=a|0;M=a}function Yc(a){a=a|0;N=a}function Zc(a){a=a|0;O=a}function _c(a){a=a|0;P=a}function $c(a){a=a|0;Q=a}function ad(a){a=a|0;R=a}function bd(a){a=a|0;S=a}function cd(){c[3730]=p+8;c[3732]=p+8;c[3734]=q+8;c[3738]=q+8;c[3742]=q+8;c[3746]=q+8;c[3750]=q+8;c[3754]=p+8;c[3788]=q+8;c[3792]=q+8;c[3856]=q+8;c[3860]=q+8;c[3880]=p+8;c[3882]=q+8;c[3918]=q+8;c[3922]=q+8;c[3958]=q+8;c[3962]=q+8;c[3982]=p+8;c[3984]=p+8;c[3986]=q+8;c[3990]=q+8;c[3994]=q+8;c[3998]=q+8;c[4002]=q+8;c[4006]=q+8;c[4010]=p+8;c[4012]=p+8;c[4014]=p+8;c[4024]=p+8;c[4026]=p+8;c[4028]=p+8;c[4030]=p+8;c[4056]=q+8;c[4060]=p+8;c[4062]=q+8;c[4066]=q+8;c[4070]=q+8;c[4074]=p+8;c[4076]=p+8;c[4078]=p+8;c[4080]=p+8;c[4114]=p+8;c[4116]=p+8;c[4118]=p+8;c[4120]=q+8;c[4124]=q+8;c[4128]=p+8;c[4130]=p+8;c[4132]=q+8;c[4136]=p+8;c[4138]=p+8;c[4140]=q+8;c[4144]=q+8;c[4148]=q+8;c[4152]=q+8;c[4156]=q+8;c[4160]=q+8;c[4164]=p+8}function dd(a){a=a|0;return c[a+20>>2]|0}function ed(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=g|0;a[k]=0;c[g+4>>2]=b;l=b;m=c[(c[l>>2]|0)-12>>2]|0;n=b;do{if((c[n+(m+16)>>2]|0)==0){o=c[n+(m+72)>>2]|0;if((o|0)==0){p=m}else{Pi(o)|0;p=c[(c[l>>2]|0)-12>>2]|0}a[k]=1;o=Lq(d|0)|0;c[h>>2]=c[n+(p+24)>>2];if((c[n+(p+4)>>2]&176|0)==32){q=d+o|0}else{q=d}r=n+p|0;s=n+(p+76)|0;t=c[s>>2]|0;if((t|0)==-1){u=r;gi(f,u);v=yn(f,21432)|0;w=Fc[c[(c[v>>2]|0)+28>>2]&63](v,32)|0;xn(f);c[s>>2]=w<<24>>24;x=w;y=u}else{x=t&255;y=r}Gd(j,h,d,q,d+o|0,y,x);if((c[j>>2]|0)!=0){break}o=c[(c[l>>2]|0)-12>>2]|0;ei(n+o|0,c[n+(o+16)>>2]|5)}}while(0);$i(g);i=e;return b|0}function fd(a){a=a|0;Vd(a|0);return}function gd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=b+8|0;f=c[e>>2]|0;g=b+4|0;h=c[g>>2]|0;if((f|0)==(h|0)){i=0}else{i=(f-h<<10)-1|0}j=b+16|0;k=c[j>>2]|0;l=b+20|0;m=c[l>>2]|0;if((i-k|0)==(m|0)){Cd(b|0);n=c[l>>2]|0;o=c[j>>2]|0;p=c[g>>2]|0;q=c[e>>2]|0}else{n=m;o=k;p=h;q=f}f=n+o|0;if((q|0)==(p|0)){r=n+1|0;c[l>>2]=r;return}q=(c[p+(f>>>12<<2)>>2]|0)+(f&4095)|0;if((q|0)==0){r=n+1|0;c[l>>2]=r;return}a[q]=d&1;r=n+1|0;c[l>>2]=r;return}function hd(a,b,c){a=a|0;b=b|0;c=c|0;id(a,b&255,c);return}function id(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;f=(e|0)>32|(e|0)==0?32:e;if((f|0)<=0){return}e=b|0;g=b+8|0;h=b+4|0;i=b+16|0;j=b+20|0;b=1<<f-1;k=0;l=c[g>>2]|0;m=c[h>>2]|0;while(1){n=(l|0)==(m|0);do{if((b&d|0)==0){if(n){o=0}else{o=(l-m<<10)-1|0}p=c[i>>2]|0;q=c[j>>2]|0;if((o-p|0)==(q|0)){Cd(e);r=c[j>>2]|0;s=c[i>>2]|0;t=c[h>>2]|0;u=c[g>>2]|0}else{r=q;s=p;t=m;u=l}p=r+s|0;if((u|0)==(t|0)){v=u;w=t;x=r;break}q=(c[t+(p>>>12<<2)>>2]|0)+(p&4095)|0;if((q|0)==0){v=u;w=t;x=r;break}a[q]=0;v=u;w=t;x=r}else{if(n){y=0}else{y=(l-m<<10)-1|0}q=c[i>>2]|0;p=c[j>>2]|0;if((y-q|0)==(p|0)){Cd(e);z=c[j>>2]|0;A=c[i>>2]|0;B=c[h>>2]|0;C=c[g>>2]|0}else{z=p;A=q;B=m;C=l}q=z+A|0;if((C|0)==(B|0)){v=C;w=B;x=z;break}p=(c[B+(q>>>12<<2)>>2]|0)+(q&4095)|0;if((p|0)==0){v=C;w=B;x=z;break}a[p]=1;v=C;w=B;x=z}}while(0);c[j>>2]=x+1;n=k+1|0;if((n|0)<(f|0)){b=b>>>1;k=n;l=v;m=w}else{break}}return}function jd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=b|0;f=b+20|0;if(!((c[f>>2]|0)>>>0<d>>>0)){return}g=b+16|0;h=b+4|0;i=b+8|0;b=c[g>>2]|0;do{if((b|0)==0){Ad(e);j=c[g>>2]|0}else{j=b}k=c[h>>2]|0;l=j>>>12;m=c[k+(l<<2)>>2]|0;if((c[i>>2]|0)==(k|0)){n=0}else{n=m+(j&4095)|0}if((n|0)==(m|0)){o=(c[k+(l-1<<2)>>2]|0)+4096|0}else{o=n}l=o-1|0;if((l|0)!=0){a[l]=0}b=j-1|0;c[g>>2]=b;l=(c[f>>2]|0)+1|0;c[f>>2]=l;}while(l>>>0<d>>>0);return}function kd(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=b+4|0;e=c[d>>2]|0;f=b+16|0;g=c[f>>2]|0;h=(a[(c[e+(g>>>12<<2)>>2]|0)+(g&4095)|0]|0)!=0;i=b+20|0;c[i>>2]=(c[i>>2]|0)-1;i=g+1|0;c[f>>2]=i;if(!(i>>>0>8191>>>0)){return h|0}sq(c[e>>2]|0);c[d>>2]=(c[d>>2]|0)+4;c[f>>2]=(c[f>>2]|0)-4096;return h|0}function ld(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+160|0;f=e|0;g=e+16|0;h=g+64|0;j=g|0;k=g+8|0;c[k>>2]=10016;l=g+12|0;c[j>>2]=16716;c[h>>2]=16736;c[g+4>>2]=0;m=g+64|0;hi(m,l);c[g+136>>2]=0;c[g+140>>2]=-1;c[j>>2]=9996;c[h>>2]=10036;c[k>>2]=10016;h=f;n=l|0;c[n>>2]=10320;o=g+16|0;vn(o);Kq(g+20|0,0,24)|0;c[n>>2]=10176;n=g+44|0;Kq(n|0,0,16)|0;c[g+60>>2]=24;Kq(h|0,0,12)|0;Ud(l,f);if(!((a[h]&1)==0)){sq(c[f+8>>2]|0)}f=g;h=g;p=h+((c[(c[f>>2]|0)-12>>2]|0)+4)|0;c[p>>2]=c[p>>2]&-3;p=h+((c[(c[f>>2]|0)-12>>2]|0)+4)|0;c[p>>2]=c[p>>2]|8;p=d+20|0;f=c[p>>2]|0;h=8<<(f&3);if((f|0)!=0){q=d+16|0;r=d+4|0;d=g+8|0;s=(h|0)>8?h>>4:h;h=0;t=0;u=f;while(1){f=(c[q>>2]|0)+h|0;if((a[(c[(c[r>>2]|0)+(f>>>12<<2)>>2]|0)+(f&4095)|0]|0)==0){v=t&(s^15)}else{v=t|s}f=s>>1;if((f|0)==0){cj(d,v)|0;w=8;x=c[p>>2]|0}else{w=f;x=u}f=h+1|0;if(f>>>0<x>>>0){s=w;h=f;t=v;u=x}else{break}}}Hd(b,l);c[j>>2]=9996;c[g+64>>2]=10036;c[k>>2]=10016;k=g+12|0;c[k>>2]=10176;if(!((a[n]&1)==0)){sq(c[g+52>>2]|0)}c[k>>2]=10320;xn(o);fi(m);i=e;return}function md(b){b=b|0;var d=0;c[b>>2]=9996;c[b+64>>2]=10036;c[b+8>>2]=10016;d=b+12|0;c[d>>2]=10176;if(!((a[b+44|0]&1)==0)){sq(c[b+52>>2]|0)}c[d>>2]=10320;xn(b+16|0);fi(b+64|0);return}function nd(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+184|0;e=d|0;f=d+16|0;g=d+160|0;h=d+176|0;j=f+64|0;k=f|0;l=f+8|0;c[l>>2]=10016;m=f+12|0;c[k>>2]=16716;c[j>>2]=16736;c[f+4>>2]=0;n=f+64|0;hi(n,m);c[f+136>>2]=0;c[f+140>>2]=-1;c[k>>2]=9996;c[j>>2]=10036;c[l>>2]=10016;j=e;o=m|0;c[o>>2]=10320;p=f+16|0;vn(p);Kq(f+20|0,0,24)|0;c[o>>2]=10176;o=f+44|0;Kq(o|0,0,16)|0;c[f+60>>2]=24;Kq(j|0,0,12)|0;Ud(m,e);if(!((a[j]&1)==0)){sq(c[e+8>>2]|0)}e=f+8|0;j=e+((c[(c[e>>2]|0)-12>>2]|0)+4)|0;c[j>>2]=c[j>>2]&-75|8;ld(g,b);od(e,g)|0;if(!((a[g]&1)==0)){sq(c[g+8>>2]|0)}Ri(f,h)|0;g=c[h>>2]|0;c[k>>2]=9996;c[f+64>>2]=10036;c[l>>2]=10016;l=f+12|0;c[l>>2]=10176;if(!((a[o]&1)==0)){sq(c[f+52>>2]|0)}c[l>>2]=10320;xn(p);fi(n);i=d;return g|0}function od(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=g|0;a[k]=0;c[g+4>>2]=b;l=b;m=c[(c[l>>2]|0)-12>>2]|0;n=b;do{if((c[n+(m+16)>>2]|0)==0){o=c[n+(m+72)>>2]|0;if((o|0)!=0){Pi(o)|0}a[k]=1;o=a[d]|0;p=(o&1)==0;if(p){q=(o&255)>>>1}else{q=c[d+4>>2]|0}o=c[(c[l>>2]|0)-12>>2]|0;c[h>>2]=c[n+(o+24)>>2];if(p){p=d;if((c[n+(o+4)>>2]&176|0)==32){r=p+1+q|0}else{r=p+1|0}s=d+1|0;t=d+1|0;u=r}else{p=c[d+8>>2]|0;if((c[n+(o+4)>>2]&176|0)==32){v=p+q|0}else{v=p}s=c[d+8>>2]|0;t=c[d+8>>2]|0;u=v}p=n+o|0;w=n+(o+76)|0;o=c[w>>2]|0;if((o|0)==-1){x=p;gi(f,x);y=yn(f,21432)|0;z=Fc[c[(c[y>>2]|0)+28>>2]&63](y,32)|0;xn(f);c[w>>2]=z<<24>>24;A=z;B=x}else{A=o&255;B=p}Gd(j,h,t,u,s+q|0,B,A);if((c[j>>2]|0)!=0){break}p=c[(c[l>>2]|0)-12>>2]|0;ei(n+p|0,c[n+(p+16)>>2]|5)}}while(0);$i(g);i=e;return b|0}function pd(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;g=i;i=i+16|0;h=g|0;j=g+8|0;k=j;l=i;i=i+8|0;m=i;i=i+1|0;i=i+7&-8;n=b+24|0;if((a[n]|0)!=0){ed(21528,4936)|0}a:do{if((e|0)==0){o=0;p=1}else{q=b|0;r=l|0;s=f|0;t=l+4|0;u=f+4|0;v=f;w=b+20|0;x=b+16|0;y=b+4|0;z=b+8|0;A=1;B=1;b:while(1){do{if((B|0)==(A|0)){if((a[n]|0)!=0){ed(21528,4400)|0}c[r>>2]=c[s>>2];c[t>>2]=c[u>>2];a[m]=0;qd(k,q,l,m);C=c[j+4>>2]|0;c[v>>2]=c[j>>2];c[v+4>>2]=C;D=B<<1;E=C}else{C=(c[x>>2]|0)+(c[w>>2]|0)|0;F=c[y>>2]|0;if((c[z>>2]|0)==(F|0)){G=0}else{G=(c[F+(C>>>12<<2)>>2]|0)+(C&4095)|0}C=c[u>>2]|0;if((C|0)==(G|0)){break b}if((a[n]|0)==0){H=C}else{bj(21528,d[C]|0)|0;H=c[u>>2]|0}if((a[H]|0)==0){D=A;E=H;break}C=A>>>1;if((C|0)==0){D=A;E=H;break}else{I=C}while(1){if((I&B|0)!=0){C=c[v+4>>2]|0;F=c[v>>2]|0;do{if((B|0)==(I|0)){J=C}else{K=C-(c[F>>2]|0)+(I-B)|0;if((K|0)>0){J=(c[F+(((K|0)/4096|0)<<2)>>2]|0)+((K|0)%4096|0)|0;break}else{L=4095-K|0;J=(c[F+(((L|0)/-4096|0)<<2)>>2]|0)+(4095-((L|0)%4096|0))|0;break}}}while(0);a[J]=a[J]^1}F=I>>>1;if((F|0)==0){D=A;E=H;break}else{I=F}}}}while(0);F=c[v>>2]|0;C=E+1|0;c[u>>2]=C;L=F;if((C-(c[L>>2]|0)|0)==4096){C=L+4|0;c[s>>2]=C;c[u>>2]=c[C>>2]}C=B+1|0;if(C>>>0>e>>>0){o=e;p=D;break a}else{A=D;B=C}}o=B-1|0;p=A}}while(0);if((o|0)==(p>>>1|0)&o>>>0>1>>>0){p=f;D=1;do{e=c[p>>2]|0;E=c[p+4>>2]|0;I=c[e>>2]|0;H=E-I-D|0;if((H|0)>0){J=e+(((H|0)/4096|0)<<2)|0;G=c[J>>2]|0;M=J;N=G+((H|0)%4096|0)|0;O=G}else{G=4095-H|0;H=e+(((G|0)/-4096|0)<<2)|0;J=c[H>>2]|0;M=H;N=J+(4095-((G|0)%4096|0))|0;O=J}J=N-O|0;G=J-1|0;if((G|0)>0){P=(c[M+(((G|0)/4096|0)<<2)>>2]|0)+((G|0)%4096|0)|0}else{G=4096-J|0;P=(c[M+(((G|0)/-4096|0)<<2)>>2]|0)+(4095-((G|0)%4096|0))|0}if((a[P]|0)!=0){G=E-I|0;I=G-1|0;if((I|0)>0){Q=(c[e+(((I|0)/4096|0)<<2)>>2]|0)+((I|0)%4096|0)|0;R=(c[e+(((I|0)/4096|0)<<2)>>2]|0)+((I|0)%4096|0)|0}else{I=4096-G|0;E=4096-G|0;Q=(c[e+(((E|0)/-4096|0)<<2)>>2]|0)+(4095-((E|0)%4096|0))|0;R=(c[e+(((I|0)/-4096|0)<<2)>>2]|0)+(4095-((I|0)%4096|0))|0}a[Q]=a[R]^1}D=D+1|0;}while(D>>>0<o>>>0)}if((a[n]|0)==0){i=g;return}ed(21528,3320)|0;if((o|0)!=0){n=f;f=o;do{D=c[n>>2]|0;R=(c[n+4>>2]|0)-(c[D>>2]|0)-f|0;if((R|0)>0){S=(c[D+(((R|0)/4096|0)<<2)>>2]|0)+((R|0)%4096|0)|0}else{Q=4095-R|0;S=(c[D+(((Q|0)/-4096|0)<<2)>>2]|0)+(4095-((Q|0)%4096|0))|0}bj(21528,d[S]|0)|0;f=f-1|0;}while((f|0)!=0)}f=cj(ed(21528,2512)|0,o)|0;gi(h,f+(c[(c[f>>2]|0)-12>>2]|0)|0);o=yn(h,21432)|0;S=Fc[c[(c[o>>2]|0)+28>>2]&63](o,10)|0;xn(h);ej(f,S)|0;Pi(f)|0;i=g;return}function qd(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0;g=i;i=i+16|0;h=e;e=i;i=i+8|0;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];h=g|0;j=g+8|0;k=j;l=i;i=i+8|0;m=l;n=i;i=i+8|0;o=n;p=i;i=i+8|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+8|0;t=s;u=i;i=i+8|0;v=u;w=i;i=i+8|0;x=w;y=i;i=i+8|0;z=y;A=d+4|0;B=c[A>>2]|0;C=d+16|0;D=c[C>>2]|0;E=B+(D>>>12<<2)|0;F=d+8|0;G=c[F>>2]|0;H=(G|0)==(B|0);if(H){I=0}else{I=(c[E>>2]|0)+(D&4095)|0}J=c[e+4>>2]|0;if((J|0)==(I|0)){K=0}else{L=c[e>>2]|0;K=J-I-(c[L>>2]|0)+(L-E<<10)+(c[E>>2]|0)|0}E=d+20|0;L=c[E>>2]|0;do{if(K>>>0<(L-K|0)>>>0){if((D|0)==0){Ad(d)}if((K|0)==0){I=c[A>>2]|0;J=c[C>>2]|0;e=J>>>12;M=c[I+(e<<2)>>2]|0;if((c[F>>2]|0)==(I|0)){N=0}else{N=M+(J&4095)|0}if((N|0)==(M|0)){O=(c[I+(e-1<<2)>>2]|0)+4096|0}else{O=N}e=O-1|0;if((e|0)!=0){a[e]=a[f]|0}c[C>>2]=J-1;c[E>>2]=(c[E>>2]|0)+1;break}c[h>>2]=f;J=c[A>>2]|0;e=c[C>>2]|0;I=e>>>12;M=J+(I<<2)|0;P=c[M>>2]|0;if((c[F>>2]|0)==(J|0)){Q=0}else{Q=P+(e&4095)|0}R=Q;S=M|0;M=R|0;T=R-P|0;P=T-1|0;if((P|0)>0){U=(c[J+(((P|0)/4096|0)+I<<2)>>2]|0)+((P|0)%4096|0)|0}else{P=4096-T|0;U=(c[J+(((P|0)/-4096|0)+I<<2)>>2]|0)+(4095-((P|0)%4096|0))|0}if((Q|0)==(f|0)){c[h>>2]=U;V=U}else{V=f}if((U|0)!=0){a[U]=a[Q]|0}c[C>>2]=e-1;c[E>>2]=(c[E>>2]|0)+1;if(K>>>0>1>>>0){e=T+1|0;if((e|0)>0){P=J+(((e|0)/4096|0)+I<<2)|0;W=P;X=(c[P>>2]|0)+((e|0)%4096|0)|0}else{e=4094-T|0;P=J+(((e|0)/-4096|0)+I<<2)|0;W=P;X=(c[P>>2]|0)+(4095-((e|0)%4096|0))|0}c[l>>2]=W;c[l+4>>2]=X;c[n>>2]=S;c[n+4>>2]=M;e=n;P=T+K|0;if((P|0)>0){T=J+(((P|0)/4096|0)+I<<2)|0;c[e>>2]=T;Y=(c[T>>2]|0)+((P|0)%4096|0)|0}else{T=4095-P|0;P=J+(((T|0)/-4096|0)+I<<2)|0;c[e>>2]=P;Y=(c[P>>2]|0)+(4095-((T|0)%4096|0))|0}c[o+4>>2]=Y;c[p>>2]=S;c[p+4>>2]=M;Bd(k,0,m,o,q,h);Z=c[j+4>>2]|0;_=c[h>>2]|0}else{Z=Q;_=V}a[Z]=a[_]|0}else{if(H){$=0}else{$=(G-B<<10)-1|0}if(($-D|0)==(L|0)){Cd(d);aa=c[E>>2]|0}else{aa=L}M=aa-K|0;if((aa|0)==(K|0)){S=(c[C>>2]|0)+K|0;T=c[A>>2]|0;do{if((c[F>>2]|0)!=(T|0)){P=(c[T+(S>>>12<<2)>>2]|0)+(S&4095)|0;if((P|0)==0){break}a[P]=a[f]|0}}while(0);c[E>>2]=K+1;break}c[r>>2]=f;S=(c[C>>2]|0)+aa|0;T=c[A>>2]|0;P=S>>>12;e=T+(P<<2)|0;I=c[e>>2]|0;if((c[F>>2]|0)==(T|0)){ba=0}else{ba=I+(S&4095)|0}S=ba;J=e|0;R=S|0;ca=S-I|0;S=ca-1|0;if((S|0)>0){da=T+(((S|0)/4096|0)+P<<2)|0;ea=da;fa=(c[da>>2]|0)+((S|0)%4096|0)|0}else{S=4096-ca|0;da=T+(((S|0)/-4096|0)+P<<2)|0;ea=da;fa=(c[da>>2]|0)+(4095-((S|0)%4096|0))|0}S=ea;if((fa|0)==(f|0)){c[r>>2]=ba;ga=ba}else{ga=f}if((ba|0)!=0){a[ba]=a[fa]|0}c[E>>2]=aa+1;if(M>>>0>1>>>0){c[u>>2]=J;c[u+4>>2]=R;da=u;ha=ca-M|0;if((ha|0)>0){ca=T+(((ha|0)/4096|0)+P<<2)|0;c[da>>2]=ca;ia=(c[ca>>2]|0)+((ha|0)%4096|0)|0}else{ca=4095-ha|0;ha=T+(((ca|0)/-4096|0)+P<<2)|0;c[da>>2]=ha;ia=(c[ha>>2]|0)+(4095-((ca|0)%4096|0))|0}c[v+4>>2]=ia;c[w>>2]=S;c[w+4>>2]=fa;c[y>>2]=J;c[y+4>>2]=R;Dd(t,0,v,x,z,r);R=c[s>>2]|0;ja=R;ka=c[s+4>>2]|0;la=c[r>>2]|0;ma=c[R>>2]|0}else{ja=e;ka=ba;la=ga;ma=I}if((ka|0)==(ma|0)){na=(c[ja-4>>2]|0)+4096|0}else{na=ka}a[na-1|0]=a[la]|0}}while(0);la=c[A>>2]|0;A=c[C>>2]|0;C=A>>>12;na=la+(C<<2)|0;if((c[F>>2]|0)==(la|0)){oa=0;pa=0}else{oa=(c[na>>2]|0)+(A&4095)|0;pa=0}A=b;c[A>>2]=pa|na;c[A+4>>2]=oa;if((K|0)==0){i=g;return}A=b+4|0;pa=b|0;b=oa-(c[na>>2]|0)+K|0;if((b|0)>0){K=la+(((b|0)/4096|0)+C<<2)|0;c[pa>>2]=K;c[A>>2]=(c[K>>2]|0)+((b|0)%4096|0);i=g;return}else{K=4095-b|0;b=la+(((K|0)/-4096|0)+C<<2)|0;c[pa>>2]=b;c[A>>2]=(c[b>>2]|0)+(4095-((K|0)%4096|0));i=g;return}}function rd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;f=i;i=i+48|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=f+32|0;m=f+40|0;n=m;o=i;i=i+8|0;p=b+24|0;if((a[p]|0)!=0){ed(21528,1904)|0}do{if((d|0)!=0){q=b|0;r=b+20|0;s=b+16|0;t=b+4|0;u=b+8|0;v=e+4|0;w=o|0;x=e|0;y=o+4|0;z=e;A=0;B=0;C=1;D=1;while(1){E=(c[s>>2]|0)+(c[r>>2]|0)|0;F=c[t>>2]|0;if((c[u>>2]|0)==(F|0)){G=0}else{G=(c[F+(E>>>12<<2)>>2]|0)+(E&4095)|0}E=c[v>>2]|0;if((E|0)==(G|0)){H=D;I=A;J=B;K=C;break}F=a[E]|0;if(F<<24>>24==0){L=B;M=A}else{L=D^B;M=A^1}N=(a[p]|0)!=0;do{if((D|0)==(C|0)){if(N){O=ed(21528,1136)|0;ed(aj(O,(a[c[v>>2]|0]|0)!=0)|0,552)|0;P=c[v>>2]|0}else{P=E}c[w>>2]=c[x>>2];c[y>>2]=P;sd(n,q,o);O=c[m+4>>2]|0;c[z>>2]=c[m>>2];c[z+4>>2]=O;Q=D<<1}else{if(N){aj(21528,F<<24>>24!=0)|0;R=c[v>>2]|0}else{R=E}O=c[z>>2]|0;S=R+1|0;c[v>>2]=S;T=O;if((S-(c[T>>2]|0)|0)!=4096){Q=C;break}S=T+4|0;c[x>>2]=S;c[v>>2]=c[S>>2];Q=C}}while(0);E=D+1|0;if(E>>>0>d>>>0){H=d;I=M;J=L;K=Q;break}else{A=M;B=L;C=Q;D=E}}if(H>>>0<3>>>0){break}if((H|0)==(K>>>1|0)){U=J&~H;V=(I|0)==0}else{U=J;V=0}if((a[p]|0)!=0){cj(ed(21528,7328)|0,U)|0}if((U|0)==0){if((a[p]|0)==0){W=0;i=f;return W|0}D=ed(21528,5592)|0;gi(l,D+(c[(c[D>>2]|0)-12>>2]|0)|0);C=yn(l,21432)|0;B=Fc[c[(c[C>>2]|0)+28>>2]&63](C,10)|0;xn(l);ej(D,B)|0;Pi(D)|0;W=0;i=f;return W|0}if(V){if((a[p]|0)==0){W=-1;i=f;return W|0}D=ed(21528,6568)|0;gi(j,D+(c[(c[D>>2]|0)-12>>2]|0)|0);B=yn(j,21432)|0;C=Fc[c[(c[B>>2]|0)+28>>2]&63](B,10)|0;xn(j);ej(D,C)|0;Pi(D)|0;W=-1;i=f;return W|0}do{if((H|0)==0){X=0;Y=0}else{D=1;C=0;B=1;while(1){if((B|0)==(D|0)){if((B|0)==(U|0)){break}else{Z=C;_=B<<1}}else{Z=(B>>>0>=U>>>0)+C|0;_=D}A=B+1|0;if(A>>>0>H>>>0){$=52;break}else{D=_;C=Z;B=A}}if(($|0)==52){X=Z;Y=-Z|0;break}if((a[p]|0)==0){W=1;i=f;return W|0}B=ed(21528,6168)|0;gi(h,B+(c[(c[B>>2]|0)-12>>2]|0)|0);C=yn(h,21432)|0;D=Fc[c[(c[C>>2]|0)+28>>2]&63](C,10)|0;xn(h);ej(B,D)|0;Pi(B)|0;W=1;i=f;return W|0}}while(0);B=e;D=c[B+4>>2]|0;C=D;A=c[B>>2]|0;do{if((X|0)==0){aa=C;ba=a[C]|0}else{B=D-(c[A>>2]|0)+Y|0;if((B|0)>0){ca=(c[A+(((B|0)/4096|0)<<2)>>2]|0)+((B|0)%4096|0)|0}else{v=4095-B|0;ca=(c[A+(((v|0)/-4096|0)<<2)>>2]|0)+(4095-((v|0)%4096|0))|0}v=a[ca]|0;B=D-(c[A>>2]|0)+Y|0;if((B|0)>0){aa=(c[A+(((B|0)/4096|0)<<2)>>2]|0)+((B|0)%4096|0)|0;ba=v;break}else{x=4095-B|0;aa=(c[A+(((x|0)/-4096|0)<<2)>>2]|0)+(4095-((x|0)%4096|0))|0;ba=v;break}}}while(0);a[aa]=ba^1;if((a[p]|0)==0){W=1;i=f;return W|0}A=ed(21528,5736)|0;gi(g,A+(c[(c[A>>2]|0)-12>>2]|0)|0);D=yn(g,21432)|0;C=Fc[c[(c[D>>2]|0)+28>>2]&63](D,10)|0;xn(g);ej(A,C)|0;Pi(A)|0;W=1;i=f;return W|0}}while(0);if((a[p]|0)==0){W=0;i=f;return W|0}p=ed(21528,384)|0;gi(k,p+(c[(c[p>>2]|0)-12>>2]|0)|0);g=yn(k,21432)|0;ba=Fc[c[(c[g>>2]|0)+28>>2]&63](g,10)|0;xn(k);ej(p,ba)|0;Pi(p)|0;W=0;i=f;return W|0}function sd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;e=i;i=i+24|0;f=d;d=i;i=i+8|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];f=e|0;g=e+8|0;h=e+16|0;j=h;k=i;i=i+8|0;l=i;i=i+8|0;m=i;i=i+8|0;n=m;o=i;i=i+8|0;p=i;i=i+8|0;q=b+4|0;r=c[q>>2]|0;s=b+16|0;t=c[s>>2]|0;u=t>>>12;v=r+(u<<2)|0;w=b+8|0;x=(c[w>>2]|0)==(r|0);if(x){y=0}else{y=(c[v>>2]|0)+(t&4095)|0}z=c[d+4>>2]|0;do{if((z|0)==(y|0)){A=v;B=y;C=0;D=y|0;E=v|0;F=1}else{G=c[d>>2]|0;H=v;I=y;J=z-I-(c[G>>2]|0)+(G-H<<10)+(c[v>>2]|0)|0;G=H|0;H=I|0;K=(J|0)==0;if(K){A=v;B=y;C=0;D=H;E=G;F=1;break}L=I-(c[v>>2]|0)+J|0;if((L|0)>0){I=r+(((L|0)/4096|0)+u<<2)|0;A=I;B=(c[I>>2]|0)+((L|0)%4096|0)|0;C=J;D=H;E=G;F=0;break}else{I=4095-L|0;L=r+(((I|0)/-4096|0)+u<<2)|0;A=L;B=(c[L>>2]|0)+(4095-((I|0)%4096|0))|0;C=J;D=H;E=G;F=K;break}}}while(0);u=b+20|0;b=c[u>>2]|0;do{if(C>>>0<(b-1|0)>>>1>>>0){c[f>>2]=E;c[f+4>>2]=D;v=B;c[g>>2]=A;c[g+4>>2]=v;y=v-(c[A>>2]|0)|0;v=y+1|0;if((v|0)>0){z=A+(((v|0)/4096|0)<<2)|0;M=z;N=(c[z>>2]|0)+((v|0)%4096|0)|0}else{v=4094-y|0;y=A+(((v|0)/-4096|0)<<2)|0;M=y;N=(c[y>>2]|0)+(4095-((v|0)%4096|0))|0}c[h>>2]=M;c[h+4>>2]=N;xd(k,f,g,j);c[u>>2]=(c[u>>2]|0)-1;v=(c[s>>2]|0)+1|0;c[s>>2]=v;if(!(v>>>0>8191>>>0)){O=v;break}sq(c[c[q>>2]>>2]|0);c[q>>2]=(c[q>>2]|0)+4;v=(c[s>>2]|0)-4096|0;c[s>>2]=v;O=v}else{v=B;y=v-(c[A>>2]|0)|0;z=y+1|0;if((z|0)>0){d=A+(((z|0)/4096|0)<<2)|0;P=d;Q=(c[d>>2]|0)+((z|0)%4096|0)|0}else{z=4094-y|0;y=A+(((z|0)/-4096|0)<<2)|0;P=y;Q=(c[y>>2]|0)+(4095-((z|0)%4096|0))|0}c[m>>2]=P;c[m+4>>2]=Q;z=t+b|0;y=r+(z>>>12<<2)|0;if(x){R=0}else{R=(c[y>>2]|0)+(z&4095)|0}c[o>>2]=y;c[o+4>>2]=R;c[p>>2]=A;c[p+4>>2]=v;yd(l,n,o,p);v=(c[u>>2]|0)-1|0;c[u>>2]=v;y=c[w>>2]|0;z=c[q>>2]|0;if((y|0)==(z|0)){S=0}else{S=(y-z<<10)-1|0}z=c[s>>2]|0;if(!((S-z-v|0)>>>0>8191>>>0)){O=z;break}sq(c[y-4>>2]|0);y=c[w>>2]|0;z=y-4|0;c[w>>2]=y+(~((z+(-z|0)|0)>>>2)<<2);O=c[s>>2]|0}}while(0);s=c[q>>2]|0;q=O>>>12;S=s+(q<<2)|0;if((c[w>>2]|0)==(s|0)){T=0;U=0}else{T=(c[S>>2]|0)+(O&4095)|0;U=0}O=a;c[O>>2]=U|S;c[O+4>>2]=T;if(F){i=e;return}F=a+4|0;O=a|0;a=T-(c[S>>2]|0)+C|0;if((a|0)>0){C=s+(((a|0)/4096|0)+q<<2)|0;c[O>>2]=C;c[F>>2]=(c[C>>2]|0)+((a|0)%4096|0);i=e;return}else{C=4095-a|0;a=s+(((C|0)/-4096|0)+q<<2)|0;c[O>>2]=a;c[F>>2]=(c[a>>2]|0)+(4095-((C|0)%4096|0));i=e;return}}function td(a){a=a|0;Kq(a|0,0,25)|0;return}function ud(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;if((b|0)>0){c=1;d=1;e=b;f=0;while(1){if(c>>>0>a>>>0){if((e|0)>0){c=1;d=1;e=e;f=f;continue}else{g=f;break}}if((c|0)==(d|0)){h=d<<1;i=f+1|0}else{h=d;i=f}j=e-1|0;if((j|0)==0){g=i;break}else{c=c+1|0;d=h;e=j;f=i}}}else{g=0}return b-g|0}function vd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;d=i;i=i+8|0;e=d|0;f=a+4|0;g=c[f>>2]|0;h=a+16|0;j=c[h>>2]|0;k=g+(j>>>12<<2)|0;l=a+8|0;m=c[l>>2]|0;if((m|0)==(g|0)){n=0}else{n=(c[k>>2]|0)+(j&4095)|0}c[e>>2]=k;k=e+4|0;c[k>>2]=n;n=a+20|0;o=j;j=g;g=m;while(1){m=o+(c[n>>2]|0)|0;if((g|0)==(j|0)){p=0}else{p=(c[j+(m>>>12<<2)>>2]|0)+(m&4095)|0}if((c[k>>2]|0)==(p|0)){break}pd(a,b,e);o=c[h>>2]|0;j=c[f>>2]|0;g=c[l>>2]|0}i=d;return}function wd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;i=i+8|0;e=d|0;f=a+4|0;g=c[f>>2]|0;h=a+16|0;j=c[h>>2]|0;k=g+(j>>>12<<2)|0;l=a+8|0;m=c[l>>2]|0;if((m|0)==(g|0)){n=0}else{n=(c[k>>2]|0)+(j&4095)|0}c[e>>2]=k;k=e+4|0;c[k>>2]=n;n=a+20|0;o=0;p=j;j=g;g=m;while(1){m=p+(c[n>>2]|0)|0;if((g|0)==(j|0)){q=0}else{q=(c[j+(m>>>12<<2)>>2]|0)+(m&4095)|0}if((c[k>>2]|0)==(q|0)){break}m=rd(a,b,e)|0;o=(m|0)==-1|(o|0)==-1?-1:m+o|0;p=c[h>>2]|0;j=c[f>>2]|0;g=c[l>>2]|0}i=d;return o|0}function xd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;f=i;i=i+8|0;g=b;b=i;i=i+8|0;c[b>>2]=c[g>>2];c[b+4>>2]=c[g+4>>2];g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=e;e=i;i=i+8|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];g=f|0;h=g;j=i;i=i+8|0;k=j;l=d+4|0;m=c[l>>2]|0;n=c[b+4>>2]|0;do{if((m|0)!=(n|0)){o=c[d>>2]|0;p=c[b>>2]|0;q=m-n-(c[o>>2]|0)+(o-p<<10)+(c[p>>2]|0)|0;if((q|0)<=0){break}p=d|0;o=e;r=q;q=m;s=c[o+4>>2]|0;t=c[o>>2]|0;u=c[p>>2]|0;while(1){v=c[u>>2]|0;if((q|0)==(v|0)){w=u-4|0;c[p>>2]=w;x=c[w>>2]|0;y=x+4096|0;z=w;A=x}else{y=q;z=u;A=v}v=y-1|0;x=y-A|0;if((x|0)>(r|0)){B=r;C=y+(-r|0)|0}else{B=x;C=A}c[j>>2]=t;c[j+4>>2]=s;zd(h,C,y,k,0);D=c[g>>2]|0;E=c[g+4>>2]|0;x=r-B|0;do{if((B|0)==1){F=v;G=z}else{w=v-(c[z>>2]|0)+(1-B)|0;if((w|0)>0){H=z+(((w|0)/4096|0)<<2)|0;c[p>>2]=H;F=(c[H>>2]|0)+((w|0)%4096|0)|0;G=H;break}else{H=4095-w|0;w=z+(((H|0)/-4096|0)<<2)|0;c[p>>2]=w;F=(c[w>>2]|0)+(4095-((H|0)%4096|0))|0;G=w;break}}}while(0);if((x|0)>0){r=x;q=F;s=E;t=D;u=G}else{break}}c[l>>2]=F;c[o>>2]=D;c[o+4>>2]=E;I=E;J=D;K=a;L=K|0;c[L>>2]=J;M=K+4|0;c[M>>2]=I;i=f;return}}while(0);D=e;I=c[D+4>>2]|0;J=c[D>>2]|0;K=a;L=K|0;c[L>>2]=J;M=K+4|0;c[M>>2]=I;i=f;return}function yd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;f=i;g=b;b=i;i=i+8|0;c[b>>2]=c[g>>2];c[b+4>>2]=c[g+4>>2];g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=e;e=i;i=i+8|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];g=c[d+4>>2]|0;h=b+4|0;j=c[h>>2]|0;do{if((g|0)!=(j|0)){k=c[d>>2]|0;l=c[b>>2]|0;m=g-j-(c[k>>2]|0)+(k-l<<10)+(c[l>>2]|0)|0;if((m|0)<=0){break}l=b|0;k=e;n=m;m=j;while(1){o=(c[c[l>>2]>>2]|0)+4096|0;p=o-m|0;if((p|0)>(n|0)){q=n;r=m+n|0}else{q=p;r=o}o=c[k>>2]|0;p=c[k+4>>2]|0;if((m|0)==(r|0)){s=o;t=p}else{u=r;v=m;w=p;p=o;while(1){o=w;x=(c[p>>2]|0)+4096-o|0;y=v;z=u-y|0;if((z|0)>(x|0)){A=v+x|0;B=x}else{A=r;B=z}Jq(w|0,v|0,A-y|0)|0;do{if((B|0)==0){C=w;D=p}else{y=o-(c[p>>2]|0)+B|0;if((y|0)>0){z=p+(((y|0)/4096|0)<<2)|0;C=(c[z>>2]|0)+((y|0)%4096|0)|0;D=z;break}else{z=4095-y|0;y=p+(((z|0)/-4096|0)<<2)|0;C=(c[y>>2]|0)+(4095-((z|0)%4096|0))|0;D=y;break}}}while(0);if((A|0)==(r|0)){s=D;t=C;break}else{v=A;w=C;p=D}}}p=s|0;w=t|0;c[k>>2]=p;c[k+4>>2]=w;v=n-q|0;do{if((q|0)!=0){u=c[l>>2]|0;o=(c[h>>2]|0)-(c[u>>2]|0)+q|0;if((o|0)>0){y=u+(((o|0)/4096|0)<<2)|0;c[l>>2]=y;c[h>>2]=(c[y>>2]|0)+((o|0)%4096|0);break}else{y=4095-o|0;o=u+(((y|0)/-4096|0)<<2)|0;c[l>>2]=o;c[h>>2]=(c[o>>2]|0)+(4095-((y|0)%4096|0));break}}}while(0);if((v|0)<=0){E=w;F=p;break}n=v;m=c[h>>2]|0}G=a;H=G|0;c[H>>2]=F;I=G+4|0;c[I>>2]=E;i=f;return}}while(0);h=e;E=c[h+4>>2]|0;F=c[h>>2]|0;G=a;H=G|0;c[H>>2]=F;I=G+4|0;c[I>>2]=E;i=f;return}function zd(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=i;g=e;e=i;i=i+8|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];g=e;if((d|0)==(b|0)){h=a;j=g|0;k=c[j>>2]|0;l=g+4|0;m=c[l>>2]|0;n=h|0;c[n>>2]=k;o=h+4|0;c[o>>2]=m;i=f;return}p=b;q=e+4|0;r=e|0;e=d;while(1){d=c[g>>2]|0;s=(c[g+4>>2]|0)-(c[d>>2]|0)|0;t=s-1|0;if((t|0)>0){u=c[d+(((t|0)/4096|0)<<2)>>2]|0;v=u+((t|0)%4096|0)|0;w=u}else{u=4096-s|0;s=c[d+(((u|0)/-4096|0)<<2)>>2]|0;v=s+(4095-((u|0)%4096|0))|0;w=s}s=v+1-w|0;u=e;t=u-p|0;if((t|0)>(s|0)){x=e+(-s|0)|0;y=s}else{x=b;y=t}t=u-x|0;Jq(v+(1-t)|0,x|0,t|0)|0;do{if((y|0)!=0){t=(c[q>>2]|0)-(c[d>>2]|0)-y|0;if((t|0)>0){u=d+(((t|0)/4096|0)<<2)|0;c[r>>2]=u;c[q>>2]=(c[u>>2]|0)+((t|0)%4096|0);break}else{u=4095-t|0;t=d+(((u|0)/-4096|0)<<2)|0;c[r>>2]=t;c[q>>2]=(c[t>>2]|0)+(4095-((u|0)%4096|0));break}}}while(0);if((x|0)==(b|0)){break}else{e=x}}h=a;j=g|0;k=c[j>>2]|0;l=g+4|0;m=c[l>>2]|0;n=h|0;c[n>>2]=k;o=h+4|0;c[o>>2]=m;i=f;return}function Ad(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;b=i;i=i+24|0;d=b|0;e=b+8|0;f=b+16|0;g=a+8|0;h=c[g>>2]|0;j=a+4|0;k=c[j>>2]|0;l=(h|0)==(k|0);if(l){m=0}else{m=(h-k<<10)-1|0}n=a+16|0;o=c[n>>2]|0;if((m-o-(c[a+20>>2]|0)|0)>>>0>4095>>>0){c[n>>2]=o+4096;o=h-4|0;c[d>>2]=c[o>>2];c[g>>2]=h+(~((o+(-o|0)|0)>>>2)<<2);Ed(a|0,d);i=b;return}d=a|0;o=h;m=a+12|0;p=c[m>>2]|0;q=a|0;a=c[q>>2]|0;r=a;s=p-r|0;if((o-k|0)>>>0<s>>>0){t=qq(4096)|0;if((k|0)==(a|0)){do{if((h|0)==(p|0)){u=o-r>>1;v=(u|0)==0?1:u;u=qq(v<<2)|0;w=u+(v>>>2<<2)|0;x=u+(v<<2)|0;if(l){y=w;z=h}else{v=k;A=w;do{if((A|0)==0){B=0}else{c[A>>2]=c[v>>2];B=A}A=B+4|0;v=v+4|0;}while((v|0)!=(h|0));y=A;z=c[q>>2]|0}c[q>>2]=u;c[j>>2]=w;c[g>>2]=y;c[m>>2]=x;if((z|0)==0){C=y;break}sq(z);C=c[g>>2]|0}else{C=h}}while(0);if((C|0)==0){D=0}else{c[C>>2]=t;D=c[g>>2]|0}c[g>>2]=D+4;c[f>>2]=c[D>>2];c[g>>2]=D+(-((D+(-D|0)|0)>>>2)<<2);Ed(d,f)}else{c[e>>2]=t;Ed(d,e)}if(((c[g>>2]|0)-(c[j>>2]|0)|0)==4){E=2048}else{E=(c[n>>2]|0)+4096|0}c[n>>2]=E;i=b;return}E=s>>1;s=(E|0)==0?1:E;E=qq(s<<2)|0;e=E;d=qq(4096)|0;t=e+(s<<2)|0;if((E|0)==0){F=0}else{c[e>>2]=d;F=e}d=F+4|0;if(l){G=t;H=e;I=e;J=d;K=a}else{a=t;t=F;F=e;l=e;e=k;k=d;while(1){do{if((k|0)==(a|0)){if(F>>>0>l>>>0){d=F;E=((d-l>>2)+1|0)/-2|0;s=F+(E<<2)|0;f=k-d|0;Jq(s|0,F|0,f|0)|0;L=l;M=s;N=F+(E+(f>>2)<<2)|0;O=k;break}f=k-l>>1;E=(f|0)==0?1:f;f=qq(E<<2)|0;s=f+(E>>>2<<2)|0;d=f+(E<<2)|0;if((F|0)==(k|0)){P=s}else{E=F;D=s;while(1){if((D|0)==0){Q=0}else{c[D>>2]=c[E>>2];Q=D}C=Q+4|0;if((E|0)==(t|0)){P=C;break}else{E=E+4|0;D=C}}}if((l|0)==0){L=f;M=s;N=P;O=d;break}sq(l);L=f;M=s;N=P;O=d}else{L=l;M=F;N=k;O=a}}while(0);if((N|0)==0){R=0}else{c[N>>2]=c[e>>2];R=N}x=e+4|0;S=R+4|0;if((x|0)==(c[g>>2]|0)){break}else{a=O;t=R;F=M;l=L;e=x;k=S}}G=O;H=M;I=L;J=S;K=c[q>>2]|0}c[q>>2]=I;c[j>>2]=H;c[g>>2]=J;c[m>>2]=G;if((J-H|0)==4){T=2048}else{T=(c[n>>2]|0)+4096|0}c[n>>2]=T;if((K|0)==0){i=b;return}sq(K);i=b;return}function Bd(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;b=i;h=d;d=i;i=i+8|0;c[d>>2]=c[h>>2];c[d+4>>2]=c[h+4>>2];h=e;e=i;i=i+8|0;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];h=f;f=i;i=i+8|0;c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];h=c[e+4>>2]|0;j=d+4|0;k=c[j>>2]|0;do{if((h|0)!=(k|0)){l=c[e>>2]|0;m=c[d>>2]|0;n=h-k-(c[l>>2]|0)+(l-m<<10)+(c[m>>2]|0)|0;if((n|0)<=0){break}m=d|0;l=f+4|0;o=f|0;p=f;q=n;n=k;while(1){r=c[m>>2]|0;s=c[r>>2]|0;t=s+4096|0;u=n;v=t-u|0;if((v|0)>(q|0)){w=q;x=n+q|0}else{w=v;x=t}t=c[g>>2]|0;if(n>>>0<=t>>>0&t>>>0<x>>>0){v=c[l>>2]|0;do{if((n|0)==(v|0)){y=t}else{z=c[o>>2]|0;A=s;B=u-v-A+(r-z<<10)+(c[z>>2]|0)|0;if((B|0)==0){y=t;break}z=t-A-B|0;if((z|0)>0){y=(c[r+(((z|0)/4096|0)<<2)>>2]|0)+((z|0)%4096|0)|0;break}else{B=4095-z|0;y=(c[r+(((B|0)/-4096|0)<<2)>>2]|0)+(4095-((B|0)%4096|0))|0;break}}}while(0);c[g>>2]=y}r=c[p>>2]|0;t=c[p+4>>2]|0;if((n|0)==(x|0)){C=r;D=t}else{v=x;u=n;s=t;t=r;while(1){r=s;B=(c[t>>2]|0)+4096-r|0;z=u;A=v-z|0;if((A|0)>(B|0)){E=u+B|0;F=B}else{E=x;F=A}Jq(s|0,u|0,E-z|0)|0;do{if((F|0)==0){G=s;H=t}else{z=r-(c[t>>2]|0)+F|0;if((z|0)>0){A=t+(((z|0)/4096|0)<<2)|0;G=(c[A>>2]|0)+((z|0)%4096|0)|0;H=A;break}else{A=4095-z|0;z=t+(((A|0)/-4096|0)<<2)|0;G=(c[z>>2]|0)+(4095-((A|0)%4096|0))|0;H=z;break}}}while(0);if((E|0)==(x|0)){C=H;D=G;break}else{u=E;s=G;t=H}}}t=C|0;s=D|0;c[p>>2]=t;c[p+4>>2]=s;u=q-w|0;do{if((w|0)!=0){v=c[m>>2]|0;r=(c[j>>2]|0)-(c[v>>2]|0)+w|0;if((r|0)>0){z=v+(((r|0)/4096|0)<<2)|0;c[m>>2]=z;c[j>>2]=(c[z>>2]|0)+((r|0)%4096|0);break}else{z=4095-r|0;r=v+(((z|0)/-4096|0)<<2)|0;c[m>>2]=r;c[j>>2]=(c[r>>2]|0)+(4095-((z|0)%4096|0));break}}}while(0);if((u|0)<=0){I=s;J=t;break}q=u;n=c[j>>2]|0}K=a;L=K|0;c[L>>2]=J;M=K+4|0;c[M>>2]=I;i=b;return}}while(0);j=f;I=c[j+4>>2]|0;J=c[j>>2]|0;K=a;L=K|0;c[L>>2]=J;M=K+4|0;c[M>>2]=I;i=b;return}function Cd(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;b=i;i=i+32|0;d=b|0;e=b+8|0;f=a+16|0;g=c[f>>2]|0;if(g>>>0>4095>>>0){c[f>>2]=g-4096;g=a+4|0;f=c[g>>2]|0;h=c[f>>2]|0;j=f+4|0;c[g>>2]=j;k=a+8|0;l=c[k>>2]|0;m=a+12|0;do{if((l|0)==(c[m>>2]|0)){n=a|0;o=c[n>>2]|0;if(j>>>0>o>>>0){p=j;q=((p-o>>2)+1|0)/-2|0;r=l-p|0;Jq(f+(q+1<<2)|0,j|0,r|0)|0;p=f+((r>>2)+1+q<<2)|0;c[k>>2]=p;c[g>>2]=(c[g>>2]|0)+(q<<2);s=p;break}p=l-o>>1;q=(p|0)==0?1:p;p=qq(q<<2)|0;r=p+(q>>>2<<2)|0;t=p+(q<<2)|0;if((j|0)==(l|0)){u=r;v=o}else{o=j;q=r;do{if((q|0)==0){w=0}else{c[q>>2]=c[o>>2];w=q}q=w+4|0;o=o+4|0;}while((o|0)!=(l|0));u=q;v=c[n>>2]|0}c[n>>2]=p;c[g>>2]=r;c[k>>2]=u;c[m>>2]=t;if((v|0)==0){s=u;break}sq(v);s=c[k>>2]|0}else{s=l}}while(0);if((s|0)==0){x=0}else{c[s>>2]=h;x=c[k>>2]|0}c[k>>2]=x+4;i=b;return}x=a|0;k=a+8|0;h=c[k>>2]|0;s=a+4|0;l=h-(c[s>>2]|0)>>2;v=a+12|0;u=c[v>>2]|0;m=a|0;g=u-(c[m>>2]|0)|0;if(!(l>>>0<g>>2>>>0)){w=g>>1;g=(w|0)==0?1:w;w=e+12|0;c[e+16>>2]=a+12;a=qq(g<<2)|0;j=a;f=e|0;c[f>>2]=j;o=j+(l<<2)|0;y=e+8|0;c[y>>2]=o;z=e+4|0;c[z>>2]=o;c[w>>2]=j+(g<<2);A=qq(4096)|0;do{if((l|0)==(g|0)){B=o-a|0;if(o>>>0>j>>>0){C=j+(l+(((B>>2)+1|0)/-2|0)<<2)|0;c[y>>2]=C;c[z>>2]=C;D=C;break}C=B>>1;B=(C|0)==0?1:C;C=qq(B<<2)|0;E=C+(B>>>2<<2)|0;c[f>>2]=C;c[z>>2]=E;c[y>>2]=E;c[w>>2]=C+(B<<2);if((a|0)==0){D=E;break}sq(a);D=E}else{D=o}}while(0);if((D|0)==0){F=0}else{c[D>>2]=A;F=c[y>>2]|0}c[y>>2]=F+4;F=c[k>>2]|0;while(1){if((F|0)==(c[s>>2]|0)){break}A=F-4|0;Fd(e,A);F=A}e=c[m>>2]|0;c[m>>2]=c[f>>2];c[f>>2]=e;c[s>>2]=c[z>>2];c[z>>2]=F;z=c[k>>2]|0;c[k>>2]=c[y>>2];c[y>>2]=z;f=c[v>>2]|0;c[v>>2]=c[w>>2];c[w>>2]=f;if((z|0)!=(F|0)){c[y>>2]=z+(~((z-4+(-F|0)|0)>>>2)<<2)}if((e|0)==0){i=b;return}sq(e);i=b;return}e=qq(4096)|0;if((u|0)!=(h|0)){if((h|0)==0){G=0}else{c[h>>2]=e;G=c[k>>2]|0}c[k>>2]=G+4;i=b;return}c[d>>2]=e;Ed(x,d);d=c[s>>2]|0;x=c[d>>2]|0;e=d+4|0;c[s>>2]=e;G=c[k>>2]|0;do{if((G|0)==(c[v>>2]|0)){h=c[m>>2]|0;if(e>>>0>h>>>0){u=e;F=((u-h>>2)+1|0)/-2|0;z=G-u|0;Jq(d+(F+1<<2)|0,e|0,z|0)|0;u=d+((z>>2)+1+F<<2)|0;c[k>>2]=u;c[s>>2]=(c[s>>2]|0)+(F<<2);H=u;break}u=G-h>>1;F=(u|0)==0?1:u;u=qq(F<<2)|0;z=u+(F>>>2<<2)|0;y=u+(F<<2)|0;if((e|0)==(G|0)){I=z;J=h}else{h=e;F=z;do{if((F|0)==0){K=0}else{c[F>>2]=c[h>>2];K=F}F=K+4|0;h=h+4|0;}while((h|0)!=(G|0));I=F;J=c[m>>2]|0}c[m>>2]=u;c[s>>2]=z;c[k>>2]=I;c[v>>2]=y;if((J|0)==0){H=I;break}sq(J);H=c[k>>2]|0}else{H=G}}while(0);if((H|0)==0){L=0}else{c[H>>2]=x;L=c[k>>2]|0}c[k>>2]=L+4;i=b;return}function Dd(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;b=i;i=i+8|0;h=d;d=i;i=i+8|0;c[d>>2]=c[h>>2];c[d+4>>2]=c[h+4>>2];h=e;e=i;i=i+8|0;c[e>>2]=c[h>>2];c[e+4>>2]=c[h+4>>2];h=f;f=i;i=i+8|0;c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];h=b|0;j=h;k=i;i=i+8|0;l=k;m=e+4|0;n=c[m>>2]|0;o=c[d+4>>2]|0;do{if((n|0)!=(o|0)){p=c[e>>2]|0;q=c[d>>2]|0;r=n-o-(c[p>>2]|0)+(p-q<<10)+(c[q>>2]|0)|0;if((r|0)<=0){break}q=e|0;p=f+4|0;s=f|0;t=f;u=r;r=n;v=c[q>>2]|0;while(1){w=c[v>>2]|0;if((r|0)==(w|0)){x=v-4|0;c[q>>2]=x;y=c[x>>2]|0;z=y+4096|0;A=x;B=y}else{z=r;A=v;B=w}w=z-1|0;y=B;x=z-y|0;if((x|0)>(u|0)){C=u;D=z+(-u|0)|0}else{C=x;D=B}x=c[g>>2]|0;if(D>>>0<=x>>>0&x>>>0<z>>>0){E=c[p>>2]|0;if((E|0)==(w|0)){F=-1;G=12}else{H=c[s>>2]|0;I=E-1-w-(c[H>>2]|0)+(H-A<<10)+y|0;if((I|0)==0){J=x}else{F=I;G=12}}do{if((G|0)==12){G=0;I=x-y+F|0;if((I|0)>0){J=(c[A+(((I|0)/4096|0)<<2)>>2]|0)+((I|0)%4096|0)|0;break}else{H=4095-I|0;J=(c[A+(((H|0)/-4096|0)<<2)>>2]|0)+(4095-((H|0)%4096|0))|0;break}}}while(0);c[g>>2]=J}y=c[t+4>>2]|0;c[k>>2]=c[t>>2];c[k+4>>2]=y;zd(j,D,z,l,0);K=c[h>>2]|0;L=c[h+4>>2]|0;c[t>>2]=K;c[t+4>>2]=L;y=u-C|0;do{if((C|0)==1){M=w;N=A}else{x=w-(c[A>>2]|0)+(1-C)|0;if((x|0)>0){H=A+(((x|0)/4096|0)<<2)|0;c[q>>2]=H;M=(c[H>>2]|0)+((x|0)%4096|0)|0;N=H;break}else{H=4095-x|0;x=A+(((H|0)/-4096|0)<<2)|0;c[q>>2]=x;M=(c[x>>2]|0)+(4095-((H|0)%4096|0))|0;N=x;break}}}while(0);if((y|0)>0){u=y;r=M;v=N}else{break}}c[m>>2]=M;O=L;P=K;Q=a;R=Q|0;c[R>>2]=P;S=Q+4|0;c[S>>2]=O;i=b;return}}while(0);K=f;O=c[K+4>>2]|0;P=c[K>>2]|0;Q=a;R=Q|0;c[R>>2]=P;S=Q+4|0;c[S>>2]=O;i=b;return}function Ed(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=a+4|0;e=c[d>>2]|0;f=a|0;do{if((e|0)==(c[f>>2]|0)){g=a+8|0;h=c[g>>2]|0;i=a+12|0;j=c[i>>2]|0;k=j;if(h>>>0<j>>>0){j=h;l=((k-j>>2)+1|0)/2|0;m=j-e|0;j=h+(l-(m>>2)<<2)|0;Jq(j|0,e|0,m|0)|0;c[d>>2]=j;c[g>>2]=(c[g>>2]|0)+(l<<2);n=j;break}j=k-e>>1;k=(j|0)==0?1:j;j=qq(k<<2)|0;l=j+((k+3|0)>>>2<<2)|0;m=j+(k<<2)|0;if((e|0)==(h|0)){o=l;p=e}else{k=e;q=l;do{if((q|0)==0){r=0}else{c[q>>2]=c[k>>2];r=q}q=r+4|0;k=k+4|0;}while((k|0)!=(h|0));o=q;p=c[f>>2]|0}c[f>>2]=j;c[d>>2]=l;c[g>>2]=o;c[i>>2]=m;if((p|0)==0){n=l;break}sq(p);n=c[d>>2]|0}else{n=e}}while(0);e=n-4|0;if((e|0)==0){s=n;t=s-4|0;c[d>>2]=t;return}c[e>>2]=c[b>>2];s=c[d>>2]|0;t=s-4|0;c[d>>2]=t;return}function Fd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=a+4|0;e=c[d>>2]|0;f=a|0;do{if((e|0)==(c[f>>2]|0)){g=a+8|0;h=c[g>>2]|0;i=a+12|0;j=c[i>>2]|0;k=j;if(h>>>0<j>>>0){j=h;l=((k-j>>2)+1|0)/2|0;m=j-e|0;j=h+(l-(m>>2)<<2)|0;Jq(j|0,e|0,m|0)|0;c[d>>2]=j;c[g>>2]=(c[g>>2]|0)+(l<<2);n=j;break}j=k-e>>1;k=(j|0)==0?1:j;j=qq(k<<2)|0;l=j+((k+3|0)>>>2<<2)|0;m=j+(k<<2)|0;if((e|0)==(h|0)){o=l;p=e}else{k=e;q=l;do{if((q|0)==0){r=0}else{c[q>>2]=c[k>>2];r=q}q=r+4|0;k=k+4|0;}while((k|0)!=(h|0));o=q;p=c[f>>2]|0}c[f>>2]=j;c[d>>2]=l;c[g>>2]=o;c[i>>2]=m;if((p|0)==0){n=l;break}sq(p);n=c[d>>2]|0}else{n=e}}while(0);e=n-4|0;if((e|0)==0){s=n;t=s-4|0;c[d>>2]=t;return}c[e>>2]=c[b>>2];s=c[d>>2]|0;t=s-4|0;c[d>>2]=t;return}function Gd(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g|0;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;do{if((h|0)>0){if((yc[c[(c[d>>2]|0)+48>>2]&63](d,e,h)|0)==(h|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){if(q>>>0<11>>>0){h=q<<1&255;e=l;a[e]=h;r=l+1|0;s=h;t=e}else{e=q+16&-16;h=qq(e)|0;c[l+8>>2]=h;g=e|1;c[l>>2]=g;c[l+4>>2]=q;r=h;s=g&255;t=l}Kq(r|0,j|0,q|0)|0;a[r+q|0]=0;if((s&1)==0){u=l+1|0}else{u=c[l+8>>2]|0}if((yc[c[(c[d>>2]|0)+48>>2]&63](d,u,q)|0)==(q|0)){if((a[t]&1)==0){break}sq(c[l+8>>2]|0);break}c[m>>2]=0;c[b>>2]=0;if((a[t]&1)==0){i=k;return}sq(c[l+8>>2]|0);i=k;return}}while(0);l=n-o|0;do{if((l|0)>0){if((yc[c[(c[d>>2]|0)+48>>2]&63](d,f,l)|0)==(l|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function Hd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=c[d+48>>2]|0;if((e&16|0)!=0){f=d+44|0;g=c[f>>2]|0;h=c[d+24>>2]|0;if(g>>>0<h>>>0){c[f>>2]=h;i=h}else{i=g}g=c[d+20>>2]|0;h=g;f=i-h|0;if(f>>>0>4294967279>>>0){Jh(0)}if(f>>>0<11>>>0){a[b]=f<<1;j=b+1|0}else{k=f+16&-16;l=qq(k)|0;c[b+8>>2]=l;c[b>>2]=k|1;c[b+4>>2]=f;j=l}if((g|0)==(i|0)){m=j}else{l=j;f=g;while(1){a[l]=a[f]|0;g=f+1|0;if((g|0)==(i|0)){break}else{l=l+1|0;f=g}}m=j+(i+(-h|0))|0}a[m]=0;return}if((e&8|0)==0){Kq(b|0,0,12)|0;return}e=c[d+8>>2]|0;m=c[d+16>>2]|0;d=e;h=m-d|0;if(h>>>0>4294967279>>>0){Jh(0)}if(h>>>0<11>>>0){a[b]=h<<1;n=b+1|0}else{i=h+16&-16;j=qq(i)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=h;n=j}if((e|0)==(m|0)){o=n}else{j=n;h=e;while(1){a[j]=a[h]|0;e=h+1|0;if((e|0)==(m|0)){break}else{j=j+1|0;h=e}}o=n+(m+(-d|0))|0}a[o]=0;return}function Id(b){b=b|0;var d=0;c[b>>2]=9996;c[b+64>>2]=10036;c[b+8>>2]=10016;d=b+12|0;c[d>>2]=10176;if(!((a[b+44|0]&1)==0)){sq(c[b+52>>2]|0)}c[d>>2]=10320;xn(b+16|0);fi(b+64|0);sq(b);return}function Jd(b){b=b|0;var d=0,e=0;d=b-144+136|0;c[d>>2]=9996;b=d+64|0;c[b>>2]=10036;c[d+8>>2]=10016;e=d+12|0;c[e>>2]=10176;if(!((a[d+44|0]&1)==0)){sq(c[d+52>>2]|0)}c[e>>2]=10320;xn(d+16|0);fi(b);return}function Kd(b){b=b|0;var d=0,e=0;d=b-144+136|0;c[d>>2]=9996;b=d+64|0;c[b>>2]=10036;c[d+8>>2]=10016;e=d+12|0;c[e>>2]=10176;if(!((a[d+44|0]&1)==0)){sq(c[d+52>>2]|0)}c[e>>2]=10320;xn(d+16|0);fi(b);sq(d);return}function Ld(b){b=b|0;var d=0,e=0,f=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;c[d+e>>2]=9996;b=d+(e+64)|0;c[b>>2]=10036;c[d+(e+8)>>2]=10016;f=d+(e+12)|0;c[f>>2]=10176;if(!((a[d+(e+44)|0]&1)==0)){sq(c[d+(e+52)>>2]|0)}c[f>>2]=10320;xn(d+(e+16)|0);fi(b);return}function Md(b){b=b|0;var d=0,e=0,f=0,g=0;d=b;e=c[(c[b>>2]|0)-12>>2]|0;b=d+e|0;c[b>>2]=9996;f=d+(e+64)|0;c[f>>2]=10036;c[d+(e+8)>>2]=10016;g=d+(e+12)|0;c[g>>2]=10176;if(!((a[d+(e+44)|0]&1)==0)){sq(c[d+(e+52)>>2]|0)}c[g>>2]=10320;xn(d+(e+16)|0);fi(f);sq(b);return}function Nd(b){b=b|0;var d=0;d=b|0;c[d>>2]=10176;if(!((a[b+32|0]&1)==0)){sq(c[b+40>>2]|0)}c[d>>2]=10320;xn(b+4|0);return}function Od(b){b=b|0;var d=0;d=b|0;c[d>>2]=10176;if(!((a[b+32|0]&1)==0)){sq(c[b+40>>2]|0)}c[d>>2]=10320;xn(b+4|0);sq(b);return}function Pd(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;i=d+44|0;j=c[i>>2]|0;k=d+24|0;l=c[k>>2]|0;if(j>>>0<l>>>0){c[i>>2]=l;m=l}else{m=j}j=h&24;do{if((j|0)==0){i=b;c[i>>2]=0;c[i+4>>2]=0;i=b+8|0;c[i>>2]=-1;c[i+4>>2]=-1;return}else if((j|0)==24){if((g|0)==2){n=11;break}else if((g|0)==0){o=0;p=0;break}else if((g|0)!=1){n=15;break}i=b;c[i>>2]=0;c[i+4>>2]=0;i=b+8|0;c[i>>2]=-1;c[i+4>>2]=-1;return}else{if((g|0)==2){n=11;break}else if((g|0)==0){o=0;p=0;break}else if((g|0)!=1){n=15;break}if((h&8|0)==0){i=l-(c[d+20>>2]|0)|0;o=(i|0)<0|0?-1:0;p=i;break}else{i=(c[d+12>>2]|0)-(c[d+8>>2]|0)|0;o=(i|0)<0|0?-1:0;p=i;break}}}while(0);if((n|0)==15){g=b;c[g>>2]=0;c[g+4>>2]=0;g=b+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}if((n|0)==11){n=d+32|0;if((a[n]&1)==0){q=n+1|0}else{q=c[d+40>>2]|0}n=m-q|0;o=(n|0)<0|0?-1:0;p=n}n=Nq(p,o,e,f)|0;f=J;e=0;do{if(!((f|0)<(e|0)|(f|0)==(e|0)&n>>>0<0>>>0)){o=d+32|0;if((a[o]&1)==0){r=o+1|0}else{r=c[d+40>>2]|0}o=m-r|0;p=(o|0)<0|0?-1:0;if((p|0)<(f|0)|(p|0)==(f|0)&o>>>0<n>>>0){break}o=h&8;do{if(!((n|0)==0&(f|0)==0)){do{if((o|0)!=0){if((c[d+12>>2]|0)!=0){break}p=b;c[p>>2]=0;c[p+4>>2]=0;p=b+8|0;c[p>>2]=-1;c[p+4>>2]=-1;return}}while(0);if(!((h&16|0)!=0&(l|0)==0)){break}p=b;c[p>>2]=0;c[p+4>>2]=0;p=b+8|0;c[p>>2]=-1;c[p+4>>2]=-1;return}}while(0);if((o|0)!=0){c[d+12>>2]=(c[d+8>>2]|0)+n;c[d+16>>2]=m}if((h&16|0)!=0){c[k>>2]=(c[d+20>>2]|0)+n}p=b;c[p>>2]=0;c[p+4>>2]=0;p=b+8|0;c[p>>2]=n;c[p+4>>2]=f;return}}while(0);f=b;c[f>>2]=0;c[f+4>>2]=0;f=b+8|0;c[f>>2]=-1;c[f+4>>2]=-1;return}function Qd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=d;d=i;i=i+16|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];c[d+8>>2]=c[g+8>>2];c[d+12>>2]=c[g+12>>2];g=d+8|0;Bc[c[(c[b>>2]|0)+16>>2]&63](a,b,c[g>>2]|0,c[g+4>>2]|0,0,e);i=f;return}function Rd(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,i=0;b=a+44|0;e=c[b>>2]|0;f=c[a+24>>2]|0;if(e>>>0<f>>>0){c[b>>2]=f;g=f}else{g=e}if((c[a+48>>2]&8|0)==0){h=-1;return h|0}e=a+16|0;f=c[e>>2]|0;b=c[a+12>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;i=g}else{i=f}if(!(b>>>0<i>>>0)){h=-1;return h|0}h=d[b]|0;return h|0}function Sd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b+44|0;f=c[e>>2]|0;g=c[b+24>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;h=g}else{h=f}f=b+8|0;g=c[f>>2]|0;e=b+12|0;i=c[e>>2]|0;if(!(g>>>0<i>>>0)){j=-1;return j|0}if((d|0)==-1){c[f>>2]=g;c[e>>2]=i-1;c[b+16>>2]=h;j=0;return j|0}do{if((c[b+48>>2]&16|0)==0){k=d&255;l=i-1|0;if(k<<24>>24==(a[l]|0)){m=l;n=k;break}else{j=-1}return j|0}else{m=i-1|0;n=d&255}}while(0);c[f>>2]=g;c[e>>2]=m;c[b+16>>2]=h;a[m]=n;j=d;return j|0}function Td(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;if((d|0)==-1){e=0;return e|0}f=b|0;g=b+12|0;h=b+8|0;i=(c[g>>2]|0)-(c[h>>2]|0)|0;j=b+24|0;k=c[j>>2]|0;l=b+28|0;m=c[l>>2]|0;if((k|0)==(m|0)){n=b+48|0;if((c[n>>2]&16|0)==0){e=-1;return e|0}o=b+20|0;p=c[o>>2]|0;q=k-p|0;r=b+44|0;s=(c[r>>2]|0)-p|0;p=b+32|0;t=p;u=a[t]|0;v=(u&1)!=0;if(v){w=c[b+36>>2]|0;x=(c[p>>2]&-2)-1|0}else{w=(u&255)>>>1;x=10}if((w|0)==(x|0)){Wh(p,x,1,x,x,0,0);if((a[t]&1)==0){y=12}else{y=13}}else{if(v){y=13}else{y=12}}if((y|0)==12){a[t]=(w<<1)+2;z=p+1|0;A=w+1|0}else if((y|0)==13){y=c[b+40>>2]|0;v=w+1|0;c[b+36>>2]=v;z=y;A=v}a[z+w|0]=0;a[z+A|0]=0;A=a[t]|0;if((A&1)==0){B=10;C=A}else{A=c[p>>2]|0;B=(A&-2)-1|0;C=A&255}A=(C&1)==0;if(A){D=(C&255)>>>1}else{D=c[b+36>>2]|0}do{if(D>>>0<B>>>0){Rh(p,B-D|0,0)|0}else{if(A){a[p+1+B|0]=0;a[t]=B<<1;break}else{a[(c[b+40>>2]|0)+B|0]=0;c[b+36>>2]=B;break}}}while(0);B=a[t]|0;if((B&1)==0){E=(B&255)>>>1;F=p+1|0}else{E=c[b+36>>2]|0;F=c[b+40>>2]|0}p=F+E|0;c[o>>2]=F;c[l>>2]=p;l=F+q|0;c[j>>2]=l;q=F+s|0;c[r>>2]=q;G=l;H=p;I=q;J=n}else{G=k;H=m;I=c[b+44>>2]|0;J=b+48|0}m=G+1|0;k=m>>>0<I>>>0?I:m;c[b+44>>2]=k;if((c[J>>2]&8|0)!=0){J=b+32|0;if((a[J]&1)==0){K=J+1|0}else{K=c[b+40>>2]|0}c[h>>2]=K;c[g>>2]=K+i;c[b+16>>2]=k}if((G|0)==(H|0)){e=Fc[c[(c[b>>2]|0)+52>>2]&63](f,d&255)|0;return e|0}else{c[j>>2]=m;a[G]=d;e=d&255;return e|0}return 0}function Ud(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=b+32|0;Oh(e,d)|0;d=b+44|0;c[d>>2]=0;f=b+48|0;g=c[f>>2]|0;if((g&8|0)!=0){h=a[e]|0;if((h&1)==0){i=((h&255)>>>1)+(e+1)|0;c[d>>2]=i;j=e+1|0;k=i;l=e+1|0}else{i=(c[b+40>>2]|0)+(c[b+36>>2]|0)|0;c[d>>2]=i;h=c[b+40>>2]|0;j=h;k=i;l=h}c[b+8>>2]=l;c[b+12>>2]=j;c[b+16>>2]=k}if((g&16|0)==0){return}g=e;k=a[g]|0;if((k&1)==0){j=(k&255)>>>1;c[d>>2]=e+1+j;m=10;n=k;o=j}else{j=c[b+36>>2]|0;c[d>>2]=(c[b+40>>2]|0)+j;d=c[e>>2]|0;m=(d&-2)-1|0;n=d&255;o=j}j=(n&1)==0;if(j){p=(n&255)>>>1}else{p=c[b+36>>2]|0}do{if(p>>>0<m>>>0){Rh(e,m-p|0,0)|0}else{if(j){a[e+1+m|0]=0;a[g]=m<<1;break}else{a[(c[b+40>>2]|0)+m|0]=0;c[b+36>>2]=m;break}}}while(0);m=a[g]|0;if((m&1)==0){q=(m&255)>>>1;r=e+1|0;s=e+1|0}else{e=c[b+40>>2]|0;q=c[b+36>>2]|0;r=e;s=e}e=b+24|0;c[e>>2]=r;c[b+20>>2]=r;c[b+28>>2]=s+q;if((c[f>>2]&3|0)==0){return}c[e>>2]=r+o;return}function Vd(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;b=a+4|0;d=c[b>>2]|0;e=a+16|0;f=c[e>>2]|0;g=d+(f>>>12<<2)|0;h=a+8|0;i=c[h>>2]|0;if((i|0)==(d|0)){j=0;k=0;l=a+20|0}else{m=a+20|0;a=f+(c[m>>2]|0)|0;j=(c[d+(a>>>12<<2)>>2]|0)+(a&4095)|0;k=(c[g>>2]|0)+(f&4095)|0;l=m}m=g;g=k;a:while(1){k=g;do{if((k|0)==(j|0)){break a}k=k+1|0;}while((k-(c[m>>2]|0)|0)!=4096);k=m+4|0;m=k;g=c[k>>2]|0}c[l>>2]=0;l=i-d>>2;if(l>>>0>2>>>0){i=d;while(1){sq(c[i>>2]|0);d=(c[b>>2]|0)+4|0;c[b>>2]=d;g=(c[h>>2]|0)-d>>2;if(g>>>0>2>>>0){i=d}else{n=g;break}}}else{n=l}if((n|0)==1){c[e>>2]=2048;return}else if((n|0)==2){c[e>>2]=4096;return}else{return}}function Wd(a){a=a|0;Kq(a|0,0,17)|0;Kq(a+20|0,0,16)|0;return}function Xd(b){b=b|0;c[b>>2]=11280;c[b+4>>2]=3;c[b+8>>2]=0;fe(b+12|0);c[b+32>>2]=-1;c[b+36>>2]=-1;a[b+40|0]=0;Wd(b+44|0);return}function Yd(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=11280;b=c[a+8>>2]|0;if((b|0)!=0){tq(b)}b=c[a+44>>2]|0;if((b|0)==0){d=a;sq(d);return}e=a+48|0;f=c[e>>2]|0;if((f|0)!=(b|0)){c[e>>2]=f+(~((f-4+(-b|0)|0)>>>2)<<2)}sq(b);d=a;sq(d);return}function Zd(a){a=a|0;var b=0,d=0;c[a>>2]=11280;b=c[a+8>>2]|0;if((b|0)!=0){tq(b)}b=c[a+44>>2]|0;if((b|0)==0){return}d=a+48|0;a=c[d>>2]|0;if((a|0)!=(b|0)){c[d>>2]=a+(~((a-4+(-b|0)|0)>>>2)<<2)}sq(b);return}function _d(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;h=i;i=i+24|0;j=h|0;k=b+12|0;l=b+16|0;m=c[l>>2]|0;n=e+4|0;o=c[n>>2]|0;do{if((m|0)==(o|0)){p=c[b+20>>2]|0;if((p|0)!=(c[e+8>>2]|0)){q=5;break}if((a[b+28|0]|0)!=0^(a[e+16|0]|0)!=0){q=5;break}r=m;s=p;t=b+8|0}else{q=5}}while(0);if((q|0)==5){q=b+8|0;m=c[q>>2]|0;if((m|0)==0){u=o}else{tq(m);u=c[n>>2]|0}n=c[e+8>>2]|0;m=fa(n,u)|0;o=rq((m|0)>-1?m:-1)|0;c[q>>2]=o;ge(j,o,u,n,(a[e+16|0]|0)!=0);n=k;k=j;c[n>>2]=c[k>>2];c[n+4>>2]=c[k+4>>2];c[n+8>>2]=c[k+8>>2];c[n+12>>2]=c[k+12>>2];a[n+16|0]=a[k+16|0]|0;r=c[l>>2]|0;s=c[b+20>>2]|0;t=q}q=b+20|0;k=fa(s,c[b+24>>2]|0)|0;Kq(c[t>>2]|0,0,k|0)|0;s=r<<1;n=k-s|0;j=(c[t>>2]|0)+r|0;u=(c[e>>2]|0)+r|0;e=(k|0)==(s|0);do{if(f){if(e){break}else{v=j;w=u;x=n}while(1){s=x-1|0;if((d[w]|0)>(g|0)){a[v]=-1}if((s|0)==0){break}else{v=v+1|0;w=w+1|0;x=s}}}else{if(e){break}else{y=j;z=u;A=n}while(1){s=A-1|0;if((d[z]|0)<=(g|0)){a[y]=-1}if((s|0)==0){break}else{y=y+1|0;z=z+1|0;A=s}}}}while(0);A=c[t>>2]|0;t=c[q>>2]|0;if((t|0)>0){z=A;y=A+(r-1)|0;A=0;while(1){a[z]=0;a[y]=0;g=A+1|0;n=c[q>>2]|0;if((g|0)<(n|0)){z=z+r|0;y=y+r|0;A=g}else{B=n;break}}}else{B=t}t=b+28|0;A=a[t]|0;y=A<<24>>24!=0?-r|0:r;r=y-1|0;c[b+80>>2]=r;c[b+112>>2]=r;c[b+84>>2]=y;c[b+116>>2]=y;r=y+1|0;c[b+88>>2]=r;c[b+120>>2]=r;c[b+92>>2]=1;c[b+124>>2]=1;r=-y|0;z=1-y|0;c[b+96>>2]=z;c[b+128>>2]=z;c[b+100>>2]=r;c[b+132>>2]=r;r=~y;c[b+104>>2]=r;c[b+136>>2]=r;c[b+108>>2]=-1;c[b+140>>2]=-1;r=c[l>>2]|0;y=(B<<1)+(r<<1)|0;B=b+52|0;z=b+44|0;n=c[z>>2]|0;g=n;do{if((c[B>>2]|0)-g>>2>>>0<y>>>0){u=b+48|0;j=(c[u>>2]|0)-g|0;if((y|0)==0){C=0}else{C=qq(y<<2)|0}e=n;Iq(C|0,e|0,j)|0;c[z>>2]=C;c[u>>2]=C+(j>>2<<2);c[B>>2]=C+(y<<2);if((n|0)==0){D=r;E=A;break}sq(e);D=c[l>>2]|0;E=a[t]|0}else{D=r;E=A}}while(0);c[b+56>>2]=D;c[b+32>>2]=0;if(E<<24>>24==0){F=0;G=b+36|0;c[G>>2]=F;H=b+40|0;a[H]=1;i=h;return}F=(c[q>>2]|0)-1|0;G=b+36|0;c[G>>2]=F;H=b+40|0;a[H]=1;i=h;return}function $d(b){b=b|0;var c=0,d=0,e=0,f=0;c=b+40|0;do{if((a[c]|0)==0){d=0}else{while(1){e=ae(b)|0;if((e|0)==(-1|0)){f=4;break}else if((e|0)==1){f=3;break}}if((f|0)==3){d=b+44|0;break}else if((f|0)==4){a[c]=0;d=0;break}}}while(0);return d|0}function ae(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;d=i;i=i+16|0;e=d|0;f=d+8|0;g=b+44|0;h=g|0;j=c[h>>2]|0;k=b+48|0;l=c[k>>2]|0;if((l|0)!=(j|0)){c[k>>2]=l+(~((l-4+(-j|0)|0)>>>2)<<2)}j=b+36|0;l=c[j>>2]|0;a:do{if((a[b+28|0]|0)==0){m=c[b+20>>2]|0;if((l|0)>=(m|0)){n=-1;i=d;return n|0}o=b+32|0;p=b+8|0;q=b+4|0;r=c[b+16>>2]|0;s=(c[o>>2]|0)+1|0;t=l;while(1){c[o>>2]=s;if((s|0)<(r|0)){u=(fa(t,r)|0)+s|0;v=(c[p>>2]|0)+u|0;u=s;while(1){if((a[v]|0)==-1){if((a[v-1|0]|0)==0){w=v;break a}}x=u+1|0;c[o>>2]=x;if((x|0)<(r|0)){v=v+1|0;u=x}else{break}}}c[o>>2]=0;u=(c[q>>2]|0)-1|0;v=((u|0)<1?1:u)+t|0;c[j>>2]=v;if((v|0)<(m|0)){s=1;t=v}else{n=-1;break}}i=d;return n|0}else{if(!((l|0)>-1)){n=-1;i=d;return n|0}t=b+32|0;s=b+8|0;m=b+4|0;q=c[b+16>>2]|0;o=(c[t>>2]|0)+1|0;r=l;while(1){c[t>>2]=o;if((o|0)<(q|0)){p=(fa(r,q)|0)+o|0;v=(c[s>>2]|0)+p|0;p=o;while(1){if((a[v]|0)==-1){if((a[v-1|0]|0)==0){w=v;break a}}u=p+1|0;c[t>>2]=u;if((u|0)<(q|0)){v=v+1|0;p=u}else{break}}}c[t>>2]=0;p=(c[m>>2]|0)-1|0;v=r-((p|0)<1?1:p)|0;c[j>>2]=v;if((v|0)>-1){o=1;r=v}else{n=-1;break}}i=d;return n|0}}while(0);j=0;while(1){if((j|0)>=8){break}if((a[w+(c[b+80+(j<<2)>>2]|0)|0]|0)==0){j=j+1|0}else{break}}if((j|0)==8){n=0;i=d;return n|0}a[w]=64;l=w+(c[b+80+(j<<2)>>2]|0)|0;a[l]=65;w=b+8|0;r=l-(c[w>>2]|0)|0;c[e>>2]=r;o=c[k>>2]|0;m=b+52|0;if((o|0)==(c[m>>2]|0)){t=g|0;be(t,e);y=t}else{if((o|0)!=0){c[o>>2]=r}c[k>>2]=o+4;y=g|0}g=j;j=l;while(1){l=g+6&7;o=l+7|0;r=l;while(1){if((r|0)==(o|0)){z=o;break}if((a[j+(c[b+80+(r<<2)>>2]|0)|0]|0)==0){r=r+1|0}else{z=r;break}}r=c[b+80+(z<<2)>>2]|0;o=a[j+r|0]|0;if((a[j]|0)==64&o<<24>>24==65){break}l=j+r|0;if(o<<24>>24==-1){a[l]=127}o=l-(c[w>>2]|0)|0;c[f>>2]=o;r=c[k>>2]|0;if((r|0)==(c[m>>2]|0)){be(y,f);g=z;j=l;continue}if((r|0)!=0){c[r>>2]=o}c[k>>2]=r+4;g=z;j=l}n=((c[k>>2]|0)-(c[h>>2]|0)>>2|0)>=((c[b+4>>2]|0)*3|0|0)|0;i=d;return n|0}function be(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=f;h=(c[d>>2]|0)-g|0;i=h>>2;j=i+1|0;if(j>>>0>1073741823>>>0){pn(0)}k=a+8|0;a=(c[k>>2]|0)-g|0;if(a>>2>>>0<536870911>>>0){g=a>>1;a=g>>>0<j>>>0?j:g;if((a|0)==0){l=0;m=0}else{n=a;o=5}}else{n=1073741823;o=5}if((o|0)==5){l=qq(n<<2)|0;m=n}n=l+(i<<2)|0;if((n|0)!=0){c[n>>2]=c[b>>2]}b=f;Iq(l|0,b|0,h)|0;c[e>>2]=l;c[d>>2]=l+(j<<2);c[k>>2]=l+(m<<2);if((f|0)==0){return}sq(b);return}function ce(a){a=a|0;he(a|0);h[a+40>>3]=1.0;Kq(a+48|0,0,24)|0;h[a+72>>3]=1.0;Kq(a+80|0,0,24)|0;h[a+104>>3]=1.0;Kq(a+112|0,0,16)|0;return}function de(a,b,c,d,e){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;var f=0,g=0,i=0;ie(a|0,d,c,0.0);f=a+40|0;h[f>>3]=1.0;g=a+72|0;Kq(a+48|0,0,24)|0;h[g>>3]=1.0;i=a+80|0;Kq(i|0,0,24)|0;h[a+104>>3]=1.0;h[a+112>>3]=+h[d>>3];h[a+120>>3]=+h[d+8>>3];h[f>>3]=b;h[g>>3]=b;h[a+88>>3]=+h[c>>3];h[a+96>>3]=+h[c+8>>3];do{if(e){if(b>0.0){break}return}else{if(b<0.0){break}return}}while(0);h[a+64>>3]=-0.0;h[g>>3]=b*-1.0;h[i>>3]=-0.0;return}function ee(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=+e;f=f|0;var g=0.0,i=0.0;g=+(b|0);h[f>>3]=+h[a+40>>3]*2.0/g;Kq(f+8|0,0,24)|0;h[f+32>>3]=+h[a+64>>3]*2.0/g;i=+(c|0);h[f+40>>3]=+U(+(+h[a+72>>3]))*2.0/i;Kq(f+48|0,0,16)|0;h[f+64>>3]=1.0- +h[a+88>>3]*2.0/g;h[f+72>>3]=+h[a+96>>3]*2.0/i+-1.0;i=d-e;h[f+80>>3]=(-0.0-(d+e))/i;h[f+88>>3]=-1.0;Kq(f+96|0,0,16)|0;h[f+112>>3]=d*-2.0*e/i;h[f+120>>3]=0.0;return}function fe(b){b=b|0;c[b>>2]=0;c[b+4>>2]=-1;c[b+8>>2]=-1;c[b+12>>2]=-1;a[b+16|0]=0;return}function ge(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;c[b>>2]=d;c[b+4>>2]=e;c[b+8>>2]=f;c[b+12>>2]=e;a[b+16|0]=g&1;return}function he(a){a=a|0;Kq(a|0,0,40)|0;return}function ie(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;h[a>>3]=+h[b>>3]*.5;h[a+8>>3]=+h[b+8>>3]*.5;h[a+16>>3]=+h[c>>3];h[a+24>>3]=+h[c+8>>3];h[a+32>>3]=d;return}function je(a){a=a|0;Kq(a|0,0,32)|0;return}function ke(b,d){b=b|0;d=d|0;var e=0;c[b>>2]=11160;c[b+4>>2]=-1;c[b+8>>2]=d;e=fa(d*12|0,d)|0;c[b+12>>2]=e;c[b+16>>2]=rq((e|0)>-1?e:-1)|0;a[b+20|0]=127;a[b+21|0]=0;a[b+22|0]=0;a[b+88|0]=0;a[b+89|0]=0;a[b+90|0]=0;a[b+91|0]=1;c[b+92>>2]=1;return}function le(b,d){b=b|0;d=d|0;var e=0,f=0;c[b>>2]=11160;c[b+4>>2]=c[d+4>>2];e=c[d+8>>2]|0;c[b+8>>2]=e;f=fa(e*12|0,e)|0;c[b+12>>2]=f;e=rq((f|0)>-1?f:-1)|0;c[b+16>>2]=e;a[b+20|0]=a[d+20|0]|0;a[b+21|0]=a[d+21|0]|0;a[b+22|0]=a[d+22|0]|0;a[b+88|0]=a[d+88|0]|0;a[b+89|0]=a[d+89|0]|0;a[b+90|0]=a[d+90|0]|0;a[b+91|0]=a[d+91|0]|0;c[b+92>>2]=c[d+92>>2];Iq(e|0,c[d+16>>2]|0,f)|0;Iq(b+24|0,d+24|0,64)|0;return}function me(a){a=a|0;var b=0,d=0;c[a>>2]=11160;b=c[a+16>>2]|0;if((b|0)==0){d=a;kq(d);return}tq(b);d=a;kq(d);return}function ne(a){a=a|0;var b=0;c[a>>2]=11160;b=c[a+16>>2]|0;if((b|0)==0){return}tq(b);return}function oe(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;g=e+4|0;h=c[g>>2]|0;i=e+8|0;j=c[i>>2]|0;k=(j|0)<(h|0)?j:h;h=b+8|0;if((c[h>>2]|0)==(k|0)){l=k;m=c[b+16>>2]|0}else{c[h>>2]=k;j=fa(k*12|0,k)|0;n=b+12|0;c[n>>2]=j;o=b+16|0;p=c[o>>2]|0;if((p|0)==0){q=j;r=k}else{tq(p);q=c[n>>2]|0;r=c[h>>2]|0}n=rq((q|0)>-1?q:-1)|0;c[o>>2]=n;l=r;m=n}n=b+16|0;r=b+21|0;a[r]=-1;o=b+22|0;a[o]=0;if((l|0)>0){q=e+16|0;p=e|0;e=m;k=0;j=l;while(1){if((j|0)>0){s=~k;if(f){t=e;u=0;while(1){if((a[q]|0)==0){v=(fa((c[i>>2]|0)+s|0,c[g>>2]|0)|0)+u|0;w=(c[p>>2]|0)+v|0}else{v=(fa(c[g>>2]|0,k)|0)+u|0;w=(c[p>>2]|0)+v|0}v=a[w]|0;a[t]=v;if((v&255)>>>0<(d[r]|0)>>>0){a[r]=v;x=a[t]|0}else{x=v}if((x&255)>>>0>(d[o]|0)>>>0){a[o]=x}a[t]=~a[t];v=t+1|0;y=u+1|0;z=c[h>>2]|0;if((y|0)<(z|0)){t=v;u=y}else{A=v;B=z;break}}}else{u=e;t=0;while(1){if((a[q]|0)==0){z=(fa((c[i>>2]|0)+s|0,c[g>>2]|0)|0)+t|0;C=(c[p>>2]|0)+z|0}else{z=(fa(c[g>>2]|0,k)|0)+t|0;C=(c[p>>2]|0)+z|0}z=a[C]|0;a[u]=z;if((z&255)>>>0<(d[r]|0)>>>0){a[r]=z;D=a[u]|0}else{D=z}if((D&255)>>>0>(d[o]|0)>>>0){a[o]=D}z=u+1|0;v=t+1|0;y=c[h>>2]|0;if((v|0)<(y|0)){u=z;t=v}else{A=z;B=y;break}}}}else{A=e;B=j}t=k+1|0;if((t|0)<(B|0)){e=A;k=t;j=B}else{break}}E=d[r]|0;F=d[o]|0;G=c[n>>2]|0;H=B}else{E=255;F=0;G=m;H=l}a[b+88|0]=0;a[b+89|0]=0;a[b+90|0]=0;a[b+20|0]=(F+E|0)>>>1;E=fa(H,H)|0;F=E<<1;if((H|0)<=0){return 1}b=E-1|0;l=F-1|0;m=F+E|0;E=G;F=0;B=0;n=H;while(1){if((n|0)>0){H=b+B|0;o=B-1|0;r=m+F|0;j=E;k=0;A=0;e=n;while(1){a[G+(H+e+(fa(k,e)|0))|0]=a[j]|0;D=c[h>>2]|0;a[G+(l+A+D+(fa(o+D|0,D)|0))|0]=a[j]|0;D=c[h>>2]|0;a[G+(r+(fa(A-1+D|0,D)|0))|0]=a[j]|0;D=j+1|0;C=k+1|0;p=~k;g=c[h>>2]|0;if((C|0)<(g|0)){j=D;k=C;A=p;e=g}else{I=D;J=g;break}}}else{I=E;J=n}e=F+1|0;A=~F;if((e|0)<(J|0)){E=I;F=e;B=A;n=J}else{break}}return 1}function pe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a+8|0;if((c[d>>2]|0)==(b|0)){return}c[d>>2]=b;d=fa(b*12|0,b)|0;b=a+12|0;c[b>>2]=d;e=a+16|0;a=c[e>>2]|0;if((a|0)==0){f=d}else{tq(a);f=c[b>>2]|0}c[e>>2]=rq((f|0)>-1?f:-1)|0;return}function qe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=b+8|0;b=c[e>>2]|0;f=fa(b,b)|0;g=f<<1;if((b|0)<=0){return}h=f-1|0;i=g-1|0;j=g+f|0;f=d;g=0;k=0;l=b;while(1){if((l|0)>0){b=h+k|0;m=k-1|0;n=j+g|0;o=f;p=0;q=0;r=l;while(1){a[d+(b+r+(fa(r,p)|0))|0]=a[o]|0;s=c[e>>2]|0;a[d+(i+q+s+(fa(m+s|0,s)|0))|0]=a[o]|0;s=c[e>>2]|0;a[d+(n+(fa(q-1+s|0,s)|0))|0]=a[o]|0;s=o+1|0;t=p+1|0;u=~p;v=c[e>>2]|0;if((t|0)<(v|0)){o=s;p=t;q=u;r=v}else{w=s;x=v;break}}}else{w=f;x=l}r=g+1|0;q=~g;if((r|0)<(x|0)){f=w;g=r;k=q;l=x}else{break}}return}function re(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=i;i=i+24|0;j=e|0;k=e+8|0;l=k|0;c[l>>2]=0;m=k+4|0;c[m>>2]=0;n=k+8|0;c[n>>2]=0;o=k|0;k=f+4|0;p=c[k>>2]|0;q=f|0;r=c[q>>2]|0;if((p|0)==(r|0)){s=0;t=0}else{u=f+12|0;f=j|0;v=j+4|0;w=0;x=r;r=0;y=0;z=p;while(1){p=c[x+(w<<2)>>2]|0;A=c[u>>2]|0;B=(p|0)%(A|0)|0;C=(p|0)/(A|0)|0;c[f>>2]=B;c[v>>2]=C;if((r|0)==(y|0)){Ce(o,j);D=c[k>>2]|0;E=c[q>>2]|0;F=c[m>>2]|0}else{if((r|0)!=0){c[r>>2]=B;c[r+4>>2]=C}C=r+8|0;c[m>>2]=C;D=z;E=x;F=C}C=w+1|0;if(!(C>>>0<D-E>>2>>>0)){break}w=C;x=E;r=F;y=c[n>>2]|0;z=D}s=c[l>>2]|0;t=F}F=b+24|0;if(hg(s,F,t-s>>3,g,(a[b+91|0]|0)!=0)|0){G=se(b,d,0,F,h)|0}else{G=0}h=c[l>>2]|0;if((h|0)==0){i=e;return G|0}l=c[m>>2]|0;if((l|0)!=(h|0)){c[m>>2]=l+(~((l-8+(-h|0)|0)>>>3)<<3)}kq(h);i=e;return G|0}function se(b,e,f,g,j){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0.0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0.0,Q=0,R=0.0,S=0,T=0,U=0,V=0,W=0.0,X=0,Y=0,Z=0,_=0,$=0,aa=0;f=i;i=i+104|0;k=f|0;l=f+72|0;m=f+88|0;n=b+24|0;h[n>>3]=+h[g>>3];h[b+32>>3]=+h[g+8>>3];h[b+40>>3]=+h[g+16>>3];h[b+48>>3]=+h[g+24>>3];h[b+56>>3]=+h[g+32>>3];h[b+64>>3]=+h[g+40>>3];h[b+72>>3]=+h[g+48>>3];h[b+80>>3]=+h[g+56>>3];nf(n,k);n=b+21|0;a[n]=-1;g=b+22|0;a[g]=0;o=b+8|0;p=c[o>>2]|0;q=1.0/+(p|0);r=q*.5;s=l+8|0;h[s>>3]=r;t=b+16|0;do{if((p|0)>0){u=l|0;v=b+92|0;w=m|0;x=m+8|0;y=e+4|0;z=e+8|0;A=e|0;B=0;C=c[t>>2]|0;D=p;E=r;a:while(1){h[u>>3]=r;if((D|0)>0){F=0;G=C;do{uf(k,l,m);H=+h[w>>3];if((c[v>>2]|0)==0){I=~~(H+.5);J=~~(+h[x>>3]+.5);K=c[y>>2]|0;if((I|0)>=(K|0)){L=0;M=27;break a}if((J|0)>=(c[z>>2]|0)|(I|0)<0|(J|0)<0){L=0;M=27;break a}N=(fa(J,K)|0)+I|0;O=a[(c[A>>2]|0)+N|0]|0}else{N=~~H;I=N+1|0;P=+h[x>>3];K=~~P;J=K+1|0;Q=c[y>>2]|0;if((I|0)>=(Q|0)){L=0;M=27;break a}if((J|0)>=(c[z>>2]|0)|(N|0)<0|(K|0)<0){L=0;M=27;break a}R=H- +(N|0);H=P- +(K|0);S=fa(K,Q)|0;K=c[A>>2]|0;T=fa(J,Q)|0;P=1.0-H;O=~~((1.0-R)*(P*+(d[K+(S+N)|0]|0|0)+H*+(d[K+(T+N)|0]|0|0))+R*(P*+(d[K+(S+I)|0]|0|0)+H*+(d[K+(T+I)|0]|0|0)))}a[G]=O;if((O&255)>>>0<(d[n]|0)>>>0){a[n]=O}if((O&255)>>>0>(d[g]|0)>>>0){a[g]=O}h[u>>3]=q+ +h[u>>3];if(j){a[G]=~a[G]}G=G+1|0;F=F+1|0;U=c[o>>2]|0;}while((F|0)<(U|0));V=G;W=+h[s>>3];X=U}else{V=C;W=E;X=D}H=q+W;h[s>>3]=H;F=B+1|0;if((F|0)<(X|0)){B=F;C=V;D=X;E=H}else{M=20;break}}if((M|0)==20){Y=d[n]|0;Z=d[g]|0;_=X;break}else if((M|0)==27){i=f;return L|0}}else{Y=255;Z=0;_=p}}while(0);a[b+88|0]=0;a[b+89|0]=0;a[b+90|0]=0;a[b+20|0]=(Z+Y|0)>>>1;Y=c[t>>2]|0;t=fa(_,_)|0;Z=t<<1;if((_|0)<=0){L=1;i=f;return L|0}b=t-1|0;p=Z-1|0;M=Z+t|0;t=Y;Z=0;X=0;g=_;while(1){if((g|0)>0){_=b+X|0;n=X-1|0;V=M+Z|0;s=t;U=0;j=0;O=g;while(1){a[Y+(_+O+(fa(U,O)|0))|0]=a[s]|0;m=c[o>>2]|0;a[Y+(p+j+m+(fa(n+m|0,m)|0))|0]=a[s]|0;m=c[o>>2]|0;a[Y+(V+(fa(j-1+m|0,m)|0))|0]=a[s]|0;m=s+1|0;l=U+1|0;k=~U;e=c[o>>2]|0;if((l|0)<(e|0)){s=m;U=l;j=k;O=e}else{$=m;aa=e;break}}}else{$=t;aa=g}O=Z+1|0;j=~Z;if((O|0)<(aa|0)){t=$;Z=O;X=j;g=aa}else{L=1;break}}i=f;return L|0}function te(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;h=c[b+8>>2]|0;i=fa(h,h)|0;h=(g|0)<0?1:g;if((h|0)==0){g=ue(b,0)|0;j=ue(e,0)|0;if((i|0)==0){ue(b,1)|0;ue(e,0)|0;ue(b,2)|0;ue(e,0)|0;ue(b,3)|0;ue(e,0)|0;k=0;l=0;c[f>>2]=l;m=+(k|0);n=m*100.0;o=n/255.0;p=+(i|0);q=o/p;return+q}else{r=0;s=g;t=j;u=0}while(1){j=(d[s]|0)-(d[t]|0)|0;v=((j|0)>-1?j:-j|0)+r|0;j=u+1|0;if((j|0)<(i|0)){r=v;s=s+1|0;t=t+1|0;u=j}else{break}}u=ue(b,1)|0;t=0;s=u;u=ue(e,0)|0;r=0;while(1){j=(d[s]|0)-(d[u]|0)|0;w=((j|0)>-1?j:-j|0)+t|0;j=r+1|0;if((j|0)<(i|0)){t=w;s=s+1|0;u=u+1|0;r=j}else{break}}r=(w|0)<(v|0);u=r&1;s=r?w:v;v=ue(b,2)|0;w=0;r=v;v=ue(e,0)|0;t=0;while(1){j=(d[r]|0)-(d[v]|0)|0;x=((j|0)>-1?j:-j|0)+w|0;j=t+1|0;if((j|0)<(i|0)){w=x;r=r+1|0;v=v+1|0;t=j}else{break}}t=(x|0)<(s|0);v=t?2:u;u=t?x:s;s=ue(b,3)|0;x=0;t=s;s=ue(e,0)|0;r=0;while(1){w=(d[t]|0)-(d[s]|0)|0;y=((w|0)>-1?w:-w|0)+x|0;w=r+1|0;if((w|0)<(i|0)){x=y;t=t+1|0;s=s+1|0;r=w}else{break}}r=(y|0)<(u|0);k=r?y:u;l=r?3:v;c[f>>2]=l;m=+(k|0);n=m*100.0;o=n/255.0;p=+(i|0);q=o/p;return+q}else if((h|0)==1){h=(i|0)==0;v=ve(b,0)|0;r=ve(e,0)|0;if(h){z=0}else{u=0;y=v;v=r;r=0;while(1){s=(a[y]|0)==(a[v]|0)?u:u+255|0;t=r+1|0;if((t|0)<(i|0)){u=s;y=y+1|0;v=v+1|0;r=t}else{z=s;break}}}r=ve(b,1)|0;v=ve(e,0)|0;if(h){A=0}else{y=0;u=r;r=v;v=0;while(1){s=(a[u]|0)==(a[r]|0)?y:y+255|0;t=v+1|0;if((t|0)<(i|0)){y=s;u=u+1|0;r=r+1|0;v=t}else{A=s;break}}}v=(A|0)<(z|0);r=v&1;u=v?A:z;z=ve(b,2)|0;A=ve(e,0)|0;if(h){B=0}else{v=0;y=z;z=A;A=0;while(1){s=(a[y]|0)==(a[z]|0)?v:v+255|0;t=A+1|0;if((t|0)<(i|0)){v=s;y=y+1|0;z=z+1|0;A=t}else{B=s;break}}}A=(B|0)<(u|0);z=A?2:r;r=A?B:u;u=ve(b,3)|0;B=ve(e,0)|0;if(h){C=0}else{h=0;A=u;u=B;B=0;while(1){y=(a[A]|0)==(a[u]|0)?h:h+255|0;v=B+1|0;if((v|0)<(i|0)){h=y;A=A+1|0;u=u+1|0;B=v}else{C=y;break}}}B=(C|0)<(r|0);k=B?C:r;l=B?3:z;c[f>>2]=l;m=+(k|0);n=m*100.0;o=n/255.0;p=+(i|0);q=o/p;return+q}else{z=ve(b,0)|0;B=ve(e,0)|0;r=we(e,0)|0;if((i|0)==0){ve(b,1)|0;ve(e,0)|0;we(e,0)|0;ve(b,2)|0;ve(e,0)|0;we(e,0)|0;ve(b,3)|0;ve(e,0)|0;we(e,0)|0;k=0;l=0;c[f>>2]=l;m=+(k|0);n=m*100.0;o=n/255.0;p=+(i|0);q=o/p;return+q}else{D=0;E=z;F=B;G=r;H=0}while(1){if((a[G]|0)==0){I=D}else{I=(a[E]|0)==(a[F]|0)?D:D+255|0}r=H+1|0;if((r|0)<(i|0)){D=I;E=E+1|0;F=F+1|0;G=G+1|0;H=r}else{break}}H=ve(b,1)|0;G=ve(e,0)|0;F=0;E=H;H=G;G=we(e,0)|0;D=0;while(1){if((a[G]|0)==0){J=F}else{J=(a[E]|0)==(a[H]|0)?F:F+255|0}r=D+1|0;if((r|0)<(i|0)){F=J;E=E+1|0;H=H+1|0;G=G+1|0;D=r}else{break}}D=(J|0)<(I|0);G=D&1;H=D?J:I;I=ve(b,2)|0;J=ve(e,0)|0;D=0;E=I;I=J;J=we(e,0)|0;F=0;while(1){if((a[J]|0)==0){K=D}else{K=(a[E]|0)==(a[I]|0)?D:D+255|0}r=F+1|0;if((r|0)<(i|0)){D=K;E=E+1|0;I=I+1|0;J=J+1|0;F=r}else{break}}F=(K|0)<(H|0);J=F?2:G;G=F?K:H;H=ve(b,3)|0;b=ve(e,0)|0;K=0;F=H;H=b;b=we(e,0)|0;e=0;while(1){if((a[b]|0)==0){L=K}else{L=(a[F]|0)==(a[H]|0)?K:K+255|0}I=e+1|0;if((I|0)<(i|0)){K=L;F=F+1|0;H=H+1|0;b=b+1|0;e=I}else{break}}e=(L|0)<(G|0);k=e?L:G;l=e?3:J;c[f>>2]=l;m=+(k|0);n=m*100.0;o=n/255.0;p=+(i|0);q=o/p;return+q}return 0.0}function ue(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0.0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;f=b+8|0;g=c[f>>2]|0;h=fa(g,g)|0;i=b+88|0;j=b+16|0;k=c[j>>2]|0;if((a[i]|0)!=0){l=k+(fa(h,e)|0)|0;return l|0}m=b+21|0;n=a[m]|0;o=255.0/+((d[b+22|0]|0)-(n&255)|0);if((h|0)==0){p=k;q=g}else{g=k;k=1;b=n;while(1){a[g]=~~(o*+((d[g]|0)-(b&255)|0));if((k|0)>=(h|0)){break}g=g+1|0;k=k+1|0;b=a[m]|0}p=c[j>>2]|0;q=c[f>>2]|0}m=fa(q,q)|0;b=m<<1;if((q|0)>0){k=m-1|0;g=b-1|0;n=b+m|0;m=p;b=0;r=0;s=q;while(1){if((s|0)>0){q=k+r|0;t=r-1|0;u=n+b|0;v=m;w=0;x=0;y=s;while(1){a[p+(q+y+(fa(w,y)|0))|0]=a[v]|0;z=c[f>>2]|0;a[p+(g+x+z+(fa(t+z|0,z)|0))|0]=a[v]|0;z=c[f>>2]|0;a[p+(u+(fa(x-1+z|0,z)|0))|0]=a[v]|0;z=v+1|0;A=w+1|0;B=~w;C=c[f>>2]|0;if((A|0)<(C|0)){v=z;w=A;x=B;y=C}else{D=z;E=C;break}}}else{D=m;E=s}y=b+1|0;x=~b;if((y|0)<(E|0)){m=D;b=y;r=x;s=E}else{break}}F=c[j>>2]|0}else{F=p}a[i]=1;l=F+(fa(h,e)|0)|0;return l|0}function ve(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;f=b+8|0;g=c[f>>2]|0;h=fa(g,g)|0;g=b+89|0;i=b+16|0;j=c[i>>2]|0;if((a[g]|0)!=0){k=j+(fa(h,e+4|0)|0)|0;return k|0}l=h<<2;m=j+l|0;Kq(m|0,0,h|0)|0;n=(h|0)==0;a:do{if((a[b+88|0]|0)==0){if(n){break}o=b+20|0;p=j;q=m;r=1;while(1){if((d[p]|0)>>>0>(d[o]|0)>>>0){a[q]=-1}if((r|0)>=(h|0)){break a}p=p+1|0;q=q+1|0;r=r+1|0}}else{if(n){break}else{s=j;t=m;u=0}while(1){if((a[s]|0)<0){a[t]=-1}r=u+1|0;if((r|0)<(h|0)){s=s+1|0;t=t+1|0;u=r}else{break}}}}while(0);u=c[i>>2]|0;t=c[f>>2]|0;s=fa(t,t)|0;m=s<<1;if((t|0)>0){j=l-1|0;n=j+s|0;b=j+m|0;j=s+l+m|0;m=u+l|0;l=0;s=0;r=t;while(1){if((r|0)>0){t=s-1|0;q=n+s|0;p=j+l|0;o=m;v=0;w=0;x=r;while(1){a[u+(q+x+(fa(v,x)|0))|0]=a[o]|0;y=c[f>>2]|0;a[u+(b+w+y+(fa(t+y|0,y)|0))|0]=a[o]|0;y=c[f>>2]|0;a[u+(p+(fa(w-1+y|0,y)|0))|0]=a[o]|0;y=o+1|0;z=v+1|0;A=~v;B=c[f>>2]|0;if((z|0)<(B|0)){o=y;v=z;w=A;x=B}else{C=y;D=B;break}}}else{C=m;D=r}x=l+1|0;w=~l;if((x|0)<(D|0)){m=C;l=x;s=w;r=D}else{break}}E=c[i>>2]|0}else{E=u}a[g]=1;k=E+(fa(h,e+4|0)|0)|0;return k|0}function we(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;f=b+8|0;g=c[f>>2]|0;h=fa(g,g)|0;g=b+90|0;i=b+16|0;j=c[i>>2]|0;if((a[g]|0)!=0){k=j+(fa(h,e+8|0)|0)|0;return k|0}l=h<<3;m=j+l|0;Kq(m|0,-1|0,h|0)|0;do{if((a[b+88|0]|0)==0){n=d[b+20|0]|0;if((h|0)==0){break}o=n-((n-(d[b+21|0]|0)|0)/3|0)&255;p=(((d[b+22|0]|0)-n|0)/3|0)+n&255;n=m;q=j;r=0;while(1){s=d[q]|0;if(s>>>0>o>>>0&s>>>0<p>>>0){a[n]=0}s=r+1|0;if((s|0)<(h|0)){n=n+1|0;q=q+1|0;r=s}else{break}}}else{if((h|0)==0){break}else{t=m;u=0;v=j}while(1){if(((a[v]|0)-86&255)>>>0<84>>>0){a[t]=-1}r=u+1|0;if((r|0)<(h|0)){t=t+1|0;u=r;v=v+1|0}else{break}}}}while(0);v=c[i>>2]|0;u=c[f>>2]|0;t=fa(u,u)|0;j=t<<1;if((u|0)>0){m=l-1|0;b=m+t|0;r=m+j|0;m=t+l+j|0;j=v+l|0;l=0;t=0;q=u;while(1){if((q|0)>0){u=t-1|0;n=b+t|0;p=m+l|0;o=j;s=0;w=0;x=q;while(1){a[v+(n+x+(fa(s,x)|0))|0]=a[o]|0;y=c[f>>2]|0;a[v+(r+w+y+(fa(u+y|0,y)|0))|0]=a[o]|0;y=c[f>>2]|0;a[v+(p+(fa(w-1+y|0,y)|0))|0]=a[o]|0;y=o+1|0;z=s+1|0;A=~s;B=c[f>>2]|0;if((z|0)<(B|0)){o=y;s=z;w=A;x=B}else{C=y;D=B;break}}}else{C=j;D=q}x=l+1|0;w=~l;if((x|0)<(D|0)){j=C;l=x;t=w;q=D}else{break}}E=c[i>>2]|0}else{E=v}a[g]=1;k=E+(fa(h,e+8|0)|0)|0;return k|0}function xe(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+64|0;f=e|0;g=(d|0)%4|0;j=b+24|0;h[f+(g<<4)>>3]=+h[j>>3];k=b+32|0;h[f+(g<<4)+8>>3]=+h[k>>3];l=(d+1|0)%4|0;m=b+40|0;h[f+(l<<4)>>3]=+h[m>>3];n=b+48|0;h[f+(l<<4)+8>>3]=+h[n>>3];o=(d+2|0)%4|0;p=b+56|0;h[f+(o<<4)>>3]=+h[p>>3];q=b+64|0;h[f+(o<<4)+8>>3]=+h[q>>3];r=(d+3|0)%4|0;d=b+72|0;h[f+(r<<4)>>3]=+h[d>>3];s=b+80|0;h[f+(r<<4)+8>>3]=+h[s>>3];h[j>>3]=+h[f>>3];h[k>>3]=+h[f+8>>3];h[m>>3]=+h[f+16>>3];h[n>>3]=+h[f+24>>3];h[p>>3]=+h[f+32>>3];h[q>>3]=+h[f+40>>3];h[d>>3]=+h[f+48>>3];h[s>>3]=+h[f+56>>3];f=c[b+8>>2]|0;s=fa(f,f)|0;f=b+16|0;d=c[f>>2]|0;if((d|0)==0){i=e;return}q=c[b+12>>2]|0;p=rq((q|0)>-1?q:-1)|0;Iq(p|0,d+(fa(g,s)|0)|0,s)|0;Iq(p+s|0,d+(fa(l,s)|0)|0,s)|0;Iq(p+(s<<1)|0,d+(fa(o,s)|0)|0,s)|0;Iq(p+(s*3|0)|0,d+(fa(r,s)|0)|0,s)|0;if((a[b+89|0]|0)!=0){Iq(p+(s<<2)|0,d+(fa(g+4|0,s)|0)|0,s)|0;Iq(p+(s*5|0)|0,d+(fa(l+4|0,s)|0)|0,s)|0;Iq(p+(s*6|0)|0,d+(fa(o+4|0,s)|0)|0,s)|0;Iq(p+(s*7|0)|0,d+(fa(r+4|0,s)|0)|0,s)|0}if((a[b+90|0]|0)!=0){Iq(p+(s<<3)|0,d+(fa(g+8|0,s)|0)|0,s)|0;Iq(p+(s*9|0)|0,d+(fa(l+8|0,s)|0)|0,s)|0;Iq(p+(s*10|0)|0,d+(fa(o+8|0,s)|0)|0,s)|0;Iq(p+(s*11|0)|0,d+(fa(r+8|0,s)|0)|0,s)|0}tq(d);c[f>>2]=p;i=e;return}function ye(a,b,d){a=a|0;b=b|0;d=d|0;c[a+4>>2]=b;return}function ze(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+8|0;e=d|0;if((oq(e,16,96)|0)!=0){c[e>>2]=0;Be();return 0}f=c[e>>2]|0;if((f|0)==0){Be();return 0}c[f>>2]=11160;c[f+4>>2]=c[b+4>>2];e=c[b+8>>2]|0;c[f+8>>2]=e;g=fa(e*12|0,e)|0;c[f+12>>2]=g;e=rq((g|0)>-1?g:-1)|0;c[f+16>>2]=e;a[f+20|0]=a[b+20|0]|0;a[f+21|0]=a[b+21|0]|0;a[f+22|0]=a[b+22|0]|0;a[f+88|0]=a[b+88|0]|0;a[f+89|0]=a[b+89|0]|0;a[f+90|0]=a[b+90|0]|0;a[f+91|0]=a[b+91|0]|0;c[f+92>>2]=c[b+92>>2];Iq(e|0,c[b+16>>2]|0,g)|0;Iq(f+24|0,b+24|0,64)|0;i=d;return f|0}function Ae(a){a=a|0;return 1}function Be(){var a=0;a=ic(4)|0;uq(a);Cb(a|0,14936,156)}function Ce(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;i=i+8|0;e=d|0;f=a+4|0;g=a|0;h=c[g>>2]|0;j=(c[f>>2]|0)-h>>3;k=j+1|0;if((k|0)<0){pn(0)}l=a+8|0;a=(c[l>>2]|0)-h|0;if(!(a>>3>>>0<1073741823>>>0)){Be()}h=a>>2;a=h>>>0<k>>>0?k:h;do{if((a|0)==0){m=0;n=0}else{if(a>>>0>536870911>>>0){Be()}h=a<<3;if((oq(e,16,h)|0)==0){o=c[e>>2]|0}else{c[e>>2]=0;o=0}if((o|0)!=0|(h|0)==0){m=o;n=a;break}else{Be()}}}while(0);a=m+(j<<3)|0;o=m+(n<<3)|0;if((a|0)!=0){c[a>>2]=c[b>>2];c[m+(j<<3)+4>>2]=c[b+4>>2]}b=m+(k<<3)|0;k=c[g>>2]|0;n=c[f>>2]|0;if((n|0)==(k|0)){p=a}else{e=n-8+(-k|0)|0;h=n;n=a;while(1){a=n-8|0;q=h-8|0;if((a|0)!=0){c[a>>2]=c[q>>2];c[n-8+4>>2]=c[h-8+4>>2]}if((q|0)==(k|0)){break}else{h=q;n=a}}p=m+(j+~(e>>>3)<<3)|0}c[g>>2]=p;c[f>>2]=b;c[l>>2]=o;if((k|0)==0){i=d;return}kq(k);i=d;return}function De(a,b){a=a|0;b=b|0;ke(a|0,9);c[a>>2]=11304;c[a+2184>>2]=2;td(a+2380|0);td(a+2408|0);Jc[c[(c[a>>2]|0)+8>>2]&31](a,b,1);Iq(a+2188|0,16784,64)|0;Iq(a+2252|0,16856,128)|0;return}function Ee(b,d){b=b|0;d=d|0;le(b|0,d|0);c[b>>2]=11304;c[b+2184>>2]=c[d+2184>>2];Ue(b+2380|0,d+2380|0);a[b+2404|0]=a[d+2404|0]|0;Ue(b+2408|0,d+2408|0);a[b+2432|0]=a[d+2432|0]|0;Iq(b+2188|0,16784,64)|0;Iq(b+2252|0,16856,128)|0;return}function Fe(a){a=a|0;Ge(a);kq(a);return}function Ge(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;c[a>>2]=11304;b=a+2408|0;Vd(b|0);d=a+2412|0;e=c[d>>2]|0;f=a+2416|0;g=c[f>>2]|0;do{if((e|0)!=(g|0)){h=e;do{sq(c[h>>2]|0);h=h+4|0;}while((h|0)!=(g|0));h=c[d>>2]|0;i=c[f>>2]|0;if((i|0)==(h|0)){break}c[f>>2]=i+(~((i-4+(-h|0)|0)>>>2)<<2)}}while(0);f=c[b>>2]|0;if((f|0)!=0){sq(f)}f=a+2380|0;Vd(f|0);b=a+2384|0;d=c[b>>2]|0;g=a+2388|0;e=c[g>>2]|0;do{if((d|0)!=(e|0)){h=d;do{sq(c[h>>2]|0);h=h+4|0;}while((h|0)!=(e|0));h=c[b>>2]|0;i=c[g>>2]|0;if((i|0)==(h|0)){break}c[g>>2]=i+(~((i-4+(-h|0)|0)>>>2)<<2)}}while(0);g=c[f>>2]|0;if((g|0)==0){j=a|0;ne(j);return}sq(g);j=a|0;ne(j);return}function He(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+8|0;d=b|0;if((oq(d,16,2440)|0)!=0){c[d>>2]=0;Be();return 0}e=c[d>>2]|0;if((e|0)==0){Be();return 0}Ee(e,a);i=b;return e|0}function Ie(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;g=i;i=i+24|0;h=g|0;Ue(h,d|0);d=h+4|0;j=c[d>>2]|0;k=h+16|0;l=c[k>>2]|0;m=j+(l>>>12<<2)|0;n=h+8|0;o=c[n>>2]|0;p=(o|0)==(j|0);if(p){q=0}else{q=(c[m>>2]|0)+(l&4095)|0}r=h+20|0;s=l+(c[r>>2]|0)|0;t=f-1|0;f=s>>>12;u=s&4095;s=0;v=5;w=0;x=m;y=q;a:while(1){q=s;z=v;A=w;B=y;while(1){if(p){C=0}else{C=(c[j+(f<<2)>>2]|0)+u|0}if((B|0)==(C|0)){D=q;break a}if((a[B]|0)==0){E=A}else{E=1<<z|A}F=z-1|0;if((F|0)<0){G=q+1|0;a[e+q|0]=a[b+2188+E|0]|0;if(G>>>0<t>>>0){H=G;I=5;J=0}else{D=G;break a}}else{H=q;I=F;J=E}F=B+1|0;if((F-(c[x>>2]|0)|0)==4096){break}else{q=H;z=I;A=J;B=F}}B=x+4|0;s=H;v=I;w=J;x=B;y=c[B>>2]|0}a[e+D|0]=0;if(p){K=0;L=0}else{K=(c[j+(f<<2)>>2]|0)+u|0;L=(c[m>>2]|0)+(l&4095)|0}l=m;m=L;b:while(1){L=m;do{if((L|0)==(K|0)){break b}L=L+1|0;}while((L-(c[l>>2]|0)|0)!=4096);L=l+4|0;l=L;m=c[L>>2]|0}c[r>>2]=0;r=o-j>>2;if(r>>>0>2>>>0){o=j;while(1){sq(c[o>>2]|0);j=(c[d>>2]|0)+4|0;c[d>>2]=j;m=(c[n>>2]|0)-j>>2;if(m>>>0>2>>>0){o=j}else{M=m;break}}}else{M=r}if((M|0)==1){c[k>>2]=2048}else if((M|0)==2){c[k>>2]=4096}k=c[d>>2]|0;M=c[n>>2]|0;do{if((k|0)!=(M|0)){r=k;do{sq(c[r>>2]|0);r=r+4|0;}while((r|0)!=(M|0));r=c[d>>2]|0;o=c[n>>2]|0;if((o|0)==(r|0)){break}c[n>>2]=o+(~((o-4+(-r|0)|0)>>>2)<<2)}}while(0);n=c[h>>2]|0;if((n|0)==0){i=g;return}sq(n);i=g;return}function Je(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=b+2172|0;f=b+2168|0;c[e>>2]=d;if((d|0)>=128){g=c[b+2164>>2]|0;return g|0}h=b+2156|0;i=b+2160|0;j=b+2164|0;k=b+2152|0;l=b+2148|0;b=d;while(1){c[f>>2]=8;d=-4-b+(fa(b,b)|0)-(((b|0)>5)<<3)|0;c[h>>2]=d;m=(d|0)%8|0;n=d-(m&-((m|0)<3|0))|0;c[i>>2]=n;m=ud(8,n)|0;c[j>>2]=m;if((m|0)>=(c[k>>2]|0)){g=m;o=11;break}n=c[e>>2]|0;if((n|0)==5){c[e>>2]=7;b=7;continue}if((a[l]|0)==0){c[f>>2]=16;d=-4-n+(fa(n,n)|0)-(((n|0)>5)<<3)|0;c[h>>2]=d;p=(d|0)%16|0;q=d-(p&-((p|0)<3|0))|0;c[i>>2]=q;p=ud(16,q)|0;c[j>>2]=p;if((p|0)>=(c[k>>2]|0)){g=p;o=11;break}r=p;s=c[e>>2]|0}else{r=m;s=n}n=s+2|0;c[e>>2]=n;if((n|0)<128){b=n}else{g=r;o=11;break}}if((o|0)==11){return g|0}return 0}function Ke(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+2180|0;c[b>>2]=0;d=a+2168|0;vd(a+2380|0,c[d>>2]|0);e=a+2408|0;f=e|0;c[a+2176>>2]=dd(f)|0;fd(f);if((c[a+2172>>2]|0)<=5){return}if((c[d>>2]|0)==16){gd(f,1)}else{gd(f,0)}hd(f,c[a+2144>>2]&255,3);vd(e,8);c[b>>2]=dd(f)|0;return}function Le(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+56|0;e=d|0;f=d+24|0;g=d+32|0;h=d+40|0;Ue(e,b+2408|0);j=e+20|0;k=e+16|0;l=(c[k>>2]|0)+(c[j>>2]|0)|0;m=e+4|0;n=c[m>>2]|0;o=n+(l>>>12<<2)|0;p=e+8|0;if((c[p>>2]|0)==(n|0)){q=0}else{q=(c[o>>2]|0)+(l&4095)|0}c[f>>2]=o;c[f+4>>2]=q;q=c[b+2384>>2]|0;o=c[b+2396>>2]|0;l=q+(o>>>12<<2)|0;n=(c[b+2388>>2]|0)==(q|0);if(n){r=0}else{r=(c[l>>2]|0)+(o&4095)|0}c[g>>2]=l;c[g+4>>2]=r;r=o+(c[b+2400>>2]|0)|0;o=q+(r>>>12<<2)|0;if(n){s=0}else{s=(c[o>>2]|0)+(r&4095)|0}c[h>>2]=o;c[h+4>>2]=s;Me(d+48|0,e,f,g,h,0);h=c[m>>2]|0;g=c[k>>2]|0;f=h+(g>>>12<<2)|0;if((c[p>>2]|0)==(h|0)){t=0}else{t=(c[f>>2]|0)+(g&4095)|0}g=b|0;h=b+2184|0;pe(g,(c[h>>2]<<1)+(c[b+2172>>2]|0)|0);s=b+8|0;o=c[s>>2]|0;r=(o|0)/2|0;n=b+16|0;Kq(c[n>>2]|0,0,fa(o,o)|0)|0;o=c[h>>2]|0;q=c[s>>2]|0;if((o|0)<(q-o|0)){l=r-1|0;u=r-2|0;v=r+1|0;w=r+2|0;x=t;t=f;f=o;y=o;o=q;while(1){q=~f;z=(f|0)==(l|0)|(f|0)==(u|0);A=(f|0)==(v|0)|(f|0)==(w|0);a:do{if((f|0)==(r|0)){B=y;C=o;D=y;while(1){if((B|0)>=(C-D|0)){E=t;F=x;break a}if((B&1|0)==0){G=(fa(C+q|0,C)|0)+B|0;a[(c[n>>2]|0)+G|0]=-1}G=(c[k>>2]|0)+(c[j>>2]|0)|0;H=c[m>>2]|0;if((c[p>>2]|0)==(H|0)){I=0}else{I=(c[H+(G>>>12<<2)>>2]|0)+(G&4095)|0}if((x|0)==(I|0)){E=t;F=x;break a}B=B+1|0;C=c[s>>2]|0;D=c[h>>2]|0}}else{D=y;C=t;B=x;G=o;H=y;while(1){if((D|0)>=(G-H|0)){E=C;F=B;break a}J=(fa(G+q|0,G)|0)+D|0;do{if((D|0)==(r|0)){if(z){a[(c[n>>2]|0)+J|0]=0;K=C;L=B;break}if(!A){M=45;break}a[(c[n>>2]|0)+J|0]=-1;K=C;L=B}else{M=45}}while(0);do{if((M|0)==45){M=0;a[(c[n>>2]|0)+J|0]=-(a[B]^1);N=B+1|0;if((N-(c[C>>2]|0)|0)!=4096){K=C;L=N;break}N=C+4|0;K=N;L=c[N>>2]|0}}while(0);J=(c[k>>2]|0)+(c[j>>2]|0)|0;N=c[m>>2]|0;if((c[p>>2]|0)==(N|0)){O=0}else{O=(c[N+(J>>>12<<2)>>2]|0)+(J&4095)|0}if((L|0)==(O|0)){E=K;F=L;break a}D=D+1|0;C=K;B=L;G=c[s>>2]|0;H=c[h>>2]|0}}}while(0);A=f+1|0;z=c[s>>2]|0;q=c[h>>2]|0;if((A|0)<(z-q|0)){x=F;t=E;f=A;y=q;o=z}else{break}}}qe(g,c[n>>2]|0);a[b+21|0]=0;a[b+22|0]=-1;a[b+20|0]=127;a[b+88|0]=1;a[b+89|0]=0;a[b+90|0]=0;b=c[m>>2]|0;n=c[k>>2]|0;g=b+(n>>>12<<2)|0;o=c[p>>2]|0;if((o|0)==(b|0)){P=0;Q=0}else{y=(c[j>>2]|0)+n|0;P=(c[b+(y>>>12<<2)>>2]|0)+(y&4095)|0;Q=(c[g>>2]|0)+(n&4095)|0}n=g;g=Q;b:while(1){Q=g;do{if((Q|0)==(P|0)){break b}Q=Q+1|0;}while((Q-(c[n>>2]|0)|0)!=4096);Q=n+4|0;n=Q;g=c[Q>>2]|0}c[j>>2]=0;j=o-b>>2;if(j>>>0>2>>>0){g=b;while(1){sq(c[g>>2]|0);n=(c[m>>2]|0)+4|0;c[m>>2]=n;P=c[p>>2]|0;Q=P-n>>2;if(Q>>>0>2>>>0){g=n}else{R=Q;S=n;T=P;break}}}else{R=j;S=b;T=o}if((R|0)==2){c[k>>2]=4096}else if((R|0)==1){c[k>>2]=2048}do{if((S|0)!=(T|0)){k=S;do{sq(c[k>>2]|0);k=k+4|0;}while((k|0)!=(T|0));k=c[m>>2]|0;R=c[p>>2]|0;if((R|0)==(k|0)){break}c[p>>2]=R+(~((R-4+(-k|0)|0)>>>2)<<2)}}while(0);p=c[e>>2]|0;if((p|0)==0){i=d;return}sq(p);i=d;return}function Me(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0;h=i;i=i+8|0;j=e;e=i;i=i+8|0;c[e>>2]=c[j>>2];c[e+4>>2]=c[j+4>>2];j=f;f=i;i=i+8|0;c[f>>2]=c[j>>2];c[f+4>>2]=c[j+4>>2];j=g;g=i;i=i+8|0;c[g>>2]=c[j>>2];c[g+4>>2]=c[j+4>>2];j=h|0;k=j;l=i;i=i+8|0;m=l;n=i;i=i+8|0;o=n;p=i;i=i+8|0;q=p;r=i;i=i+8|0;s=r;t=i;i=i+8|0;u=t;v=i;i=i+8|0;w=v;x=i;i=i+8|0;y=i;i=i+8|0;z=y;A=i;i=i+8|0;B=A;C=i;i=i+8|0;D=C;E=i;i=i+8|0;F=E;G=i;i=i+8|0;H=G;I=i;i=i+8|0;J=I;K=i;i=i+8|0;L=K;M=i;i=i+8|0;N=f;O=c[N>>2]|0;P=c[N+4>>2]|0;Q=g;R=c[Q>>2]|0;S=c[Q+4>>2]|0;T=O;U=P;V=U;W=R;X=S;Y=X;if((Y|0)==(V|0)){Z=0}else{Z=X-U+(W-T<<10)-(c[W>>2]|0)+(c[T>>2]|0)|0}_=d+4|0;$=c[_>>2]|0;aa=d+16|0;ba=c[aa>>2]|0;ca=$+(ba>>>12<<2)|0;da=d+8|0;ea=c[da>>2]|0;fa=(ea|0)==($|0);if(fa){ga=0}else{ga=(c[ca>>2]|0)+(ba&4095)|0}ha=c[e+4>>2]|0;if((ha|0)==(ga|0)){ia=0}else{ja=c[e>>2]|0;ia=ha-ga-(c[ja>>2]|0)+(ja-ca<<10)+(c[ca>>2]|0)|0}ca=d+20|0;ja=c[ca>>2]|0;do{if(ia>>>0<(ja-ia|0)>>>0){if(Z>>>0>ba>>>0){Pe(d,Z-ba|0);ka=c[_>>2]|0;la=c[aa>>2]|0;ma=c[da>>2]|0}else{ka=$;la=ba;ma=ea}ga=la>>>12;ha=ka+(ga<<2)|0;if((ma|0)==(ka|0)){na=0}else{na=(c[ha>>2]|0)+(la&4095)|0}e=na;oa=ha|0;pa=e|0;do{if(Z>>>0>ia>>>0){if(ia>>>0<Z>>>1>>>0){qa=W;do{if((ia|0)==0){ra=qa;sa=Y}else{ta=X-(c[qa>>2]|0)-ia|0;if((ta|0)>0){ua=qa+(((ta|0)/4096|0)<<2)|0;ra=ua;sa=(c[ua>>2]|0)+((ta|0)%4096|0)|0;break}else{ua=4095-ta|0;ta=qa+(((ua|0)/-4096|0)<<2)|0;ra=ta;sa=(c[ta>>2]|0)+(4095-((ua|0)%4096|0))|0;break}}}while(0);va=sa|0;wa=ra|0}else{qa=T;do{if((Z|0)==(ia|0)){xa=qa;ya=V}else{ua=U-(c[qa>>2]|0)+(Z-ia)|0;if((ua|0)>0){ta=qa+(((ua|0)/4096|0)<<2)|0;xa=ta;ya=(c[ta>>2]|0)+((ua|0)%4096|0)|0;break}else{ta=4095-ua|0;ua=qa+(((ta|0)/-4096|0)<<2)|0;xa=ua;ya=(c[ua>>2]|0)+(4095-((ta|0)%4096|0))|0;break}}}while(0);va=ya|0;wa=xa|0}qa=va;ta=c[f+4>>2]|0;if((qa|0)==(ta|0)){za=ia;Aa=va;Ba=wa;Ca=ha;Da=na;Ea=la;break}ua=na;Fa=ha;Ga=qa;qa=wa;Ha=la;Ia=c[ca>>2]|0;Ja=c[ha>>2]|0;while(1){if((ua|0)==(Ja|0)){Ka=Fa-4|0;La=c[Ka>>2]|0;Ma=La+4096|0;Na=Ka;Oa=La}else{Ma=ua;Na=Fa;Oa=Ja}Pa=Ma-1|0;if((Ga|0)==(c[qa>>2]|0)){La=qa-4|0;Qa=(c[La>>2]|0)+4096|0;Ra=La}else{Qa=Ga;Ra=qa}La=Qa-1|0;if((Pa|0)!=0){a[Pa]=a[La]|0}Sa=Ha-1|0;Ta=Ia+1|0;if((La|0)==(ta|0)){break}else{ua=Pa;Fa=Na;Ga=La;qa=Ra;Ha=Sa;Ia=Ta;Ja=Oa}}c[aa>>2]=Sa;c[ca>>2]=Ta;za=ia;Aa=va;Ba=wa;Ca=Na;Da=Pa;Ea=Sa}else{za=Z;Aa=P;Ba=O;Ca=ha;Da=na;Ea=la}}while(0);if((za|0)==0){break}Ja=e-(c[ha>>2]|0)+za|0;if((Ja|0)>0){Ia=ka+(((Ja|0)/4096|0)+ga<<2)|0;Ha=c[Ia>>2]|0;Ua=Ia;Va=Ha+((Ja|0)%4096|0)|0;Wa=Ha}else{Ha=4095-Ja|0;Ja=ka+(((Ha|0)/-4096|0)+ga<<2)|0;Ia=c[Ja>>2]|0;Ua=Ja;Va=Ia+(4095-((Ha|0)%4096|0))|0;Wa=Ia}Ia=Ua|0;Ha=Va|0;if((Va|0)!=(na|0)){Ja=Da;qa=Ca;Ga=Va;Fa=Ua;ua=Ea;ta=c[ca>>2]|0;La=c[Ca>>2]|0;Ka=Wa;while(1){if((Ja|0)==(La|0)){Xa=qa-4|0;Ya=c[Xa>>2]|0;Za=Ya+4096|0;_a=Xa;$a=Ya}else{Za=Ja;_a=qa;$a=La}Ya=Za-1|0;if((Ga|0)==(Ka|0)){Xa=Fa-4|0;ab=c[Xa>>2]|0;bb=ab+4096|0;cb=Xa;db=ab}else{bb=Ga;cb=Fa;db=Ka}ab=bb-1|0;if((Ya|0)!=0){a[Ya]=a[ab]|0}eb=ua-1|0;fb=ta+1|0;if((ab|0)==(na|0)){break}else{Ja=Ya;qa=_a;Ga=ab;Fa=cb;ua=eb;ta=fb;La=$a;Ka=db}}c[aa>>2]=eb;c[ca>>2]=fb}if(za>>>0<ia>>>0){c[l>>2]=Ia;c[l+4>>2]=Ha;c[n>>2]=oa;c[n+4>>2]=pa;do{if((ia|0)!=0){Ka=o+4|0;La=n;ta=e-(c[ha>>2]|0)+ia|0;if((ta|0)>0){ua=ka+(((ta|0)/4096|0)+ga<<2)|0;c[La>>2]=ua;c[Ka>>2]=(c[ua>>2]|0)+((ta|0)%4096|0);break}else{ua=4095-ta|0;ta=ka+(((ua|0)/-4096|0)+ga<<2)|0;c[La>>2]=ta;c[Ka>>2]=(c[ta>>2]|0)+(4095-((ua|0)%4096|0));break}}}while(0);c[p>>2]=oa;c[p+4>>2]=pa;yd(k,m,o,q);gb=c[j>>2]|0;hb=c[j+4>>2]|0}else{gb=ha;hb=na}c[r>>2]=Ba;c[r+4>>2]=Aa;ga=c[Q+4>>2]|0;c[t>>2]=c[Q>>2];c[t+4>>2]=ga;c[v>>2]=gb;c[v+4>>2]=hb;Qe(x,s,u,w)}else{if(fa){ib=0}else{ib=(ea-$<<10)-1|0}ga=ib-ba-ja|0;if(Z>>>0>ga>>>0){Re(d,Z-ga|0);jb=c[ca>>2]|0;kb=c[aa>>2]|0;lb=c[_>>2]|0;mb=c[da>>2]|0}else{jb=ja;kb=ba;lb=$;mb=ea}ga=kb+jb|0;e=ga>>>12;Ha=lb+(e<<2)|0;if((mb|0)==(lb|0)){nb=0}else{nb=(c[Ha>>2]|0)+(ga&4095)|0}ga=nb;Ia=Ha|0;ua=ga|0;ta=jb-ia|0;do{if(Z>>>0>ta>>>0){if(ta>>>0<Z>>>1>>>0){Ka=T;do{if((jb|0)==(ia|0)){ob=Ka;pb=V}else{La=U-(c[Ka>>2]|0)+ta|0;if((La|0)>0){Fa=Ka+(((La|0)/4096|0)<<2)|0;ob=Fa;pb=(c[Fa>>2]|0)+((La|0)%4096|0)|0;break}else{Fa=4095-La|0;La=Ka+(((Fa|0)/-4096|0)<<2)|0;ob=La;pb=(c[La>>2]|0)+(4095-((Fa|0)%4096|0))|0;break}}}while(0);qb=pb|0;rb=ob|0}else{Ka=W;do{if((Z|0)==(ta|0)){sb=Ka;tb=Y}else{Fa=X-(c[Ka>>2]|0)+(ta-Z)|0;if((Fa|0)>0){La=Ka+(((Fa|0)/4096|0)<<2)|0;sb=La;tb=(c[La>>2]|0)+((Fa|0)%4096|0)|0;break}else{La=4095-Fa|0;Fa=Ka+(((La|0)/-4096|0)<<2)|0;sb=Fa;tb=(c[Fa>>2]|0)+(4095-((La|0)%4096|0))|0;break}}}while(0);qb=tb|0;rb=sb|0}Ka=qb;La=c[g+4>>2]|0;if((Ka|0)==(La|0)){ub=ta;vb=qb;wb=rb;xb=Ha;yb=nb;zb=jb;break}Fa=nb;Ga=Ha;qa=Ka;Ka=rb;Ja=jb;while(1){if((Fa|0)!=0){a[Fa]=a[qa]|0}ab=Fa+1|0;if((ab-(c[Ga>>2]|0)|0)==4096){Ya=Ga+4|0;Ab=Ya;Bb=c[Ya>>2]|0}else{Ab=Ga;Bb=ab}ab=qa+1|0;if((ab-(c[Ka>>2]|0)|0)==4096){Ya=Ka+4|0;Cb=Ya;Db=c[Ya>>2]|0}else{Cb=Ka;Db=ab}Eb=Ja+1|0;if((Db|0)==(La|0)){break}else{Fa=Bb;Ga=Ab;qa=Db;Ka=Cb;Ja=Eb}}c[ca>>2]=Eb;ub=ta;vb=qb;wb=rb;xb=Ab;yb=Bb;zb=Eb}else{ub=Z;vb=S;wb=R;xb=Ha;yb=nb;zb=jb}}while(0);if((ub|0)==0){break}ha=ga-(c[Ha>>2]|0)-ub|0;if((ha|0)>0){pa=lb+(((ha|0)/4096|0)+e<<2)|0;oa=c[pa>>2]|0;Fb=pa;Gb=oa+((ha|0)%4096|0)|0;Hb=oa}else{oa=4095-ha|0;ha=lb+(((oa|0)/-4096|0)+e<<2)|0;pa=c[ha>>2]|0;Fb=ha;Gb=pa+(4095-((oa|0)%4096|0))|0;Hb=pa}pa=Fb|0;oa=Gb|0;if((Gb|0)!=(nb|0)){ha=yb;Ja=xb;Ka=Gb;qa=Fb;Ga=zb;Fa=Hb;while(1){if((ha|0)!=0){a[ha]=a[Ka]|0}La=ha+1|0;if((La-(c[Ja>>2]|0)|0)==4096){ab=Ja+4|0;Ib=ab;Jb=c[ab>>2]|0}else{Ib=Ja;Jb=La}La=Ka+1|0;if((La-Fa|0)==4096){ab=qa+4|0;Ya=c[ab>>2]|0;Kb=ab;Lb=Ya;Mb=Ya}else{Kb=qa;Lb=La;Mb=Fa}Nb=Ga+1|0;if((Lb|0)==(nb|0)){break}else{ha=Jb;Ja=Ib;Ka=Lb;qa=Kb;Ga=Nb;Fa=Mb}}c[ca>>2]=Nb}if(ub>>>0<ta>>>0){c[A>>2]=Ia;c[A+4>>2]=ua;do{if((jb|0)!=(ia|0)){Fa=B+4|0;Ga=A;qa=ga-(c[Ha>>2]|0)-ta|0;if((qa|0)>0){Ka=lb+(((qa|0)/4096|0)+e<<2)|0;c[Ga>>2]=Ka;c[Fa>>2]=(c[Ka>>2]|0)+((qa|0)%4096|0);break}else{Ka=4095-qa|0;qa=lb+(((Ka|0)/-4096|0)+e<<2)|0;c[Ga>>2]=qa;c[Fa>>2]=(c[qa>>2]|0)+(4095-((Ka|0)%4096|0));break}}}while(0);c[C>>2]=pa;c[C+4>>2]=oa;c[E>>2]=Ia;c[E+4>>2]=ua;xd(z,B,D,F);Ob=c[y>>2]|0;Pb=c[y+4>>2]|0}else{Ob=Ha;Pb=nb}e=c[N+4>>2]|0;c[G>>2]=c[N>>2];c[G+4>>2]=e;c[I>>2]=wb;c[I+4>>2]=vb;c[K>>2]=Ob;c[K+4>>2]=Pb;Se(M,H,J,L)}}while(0);L=c[_>>2]|0;_=c[aa>>2]|0;aa=_>>>12;J=L+(aa<<2)|0;if((c[da>>2]|0)==(L|0)){Qb=0;Rb=0}else{Qb=(c[J>>2]|0)+(_&4095)|0;Rb=0}_=b;c[_>>2]=Rb|J;c[_+4>>2]=Qb;if((ia|0)==0){i=h;return}_=b+4|0;Rb=b|0;b=Qb-(c[J>>2]|0)+ia|0;if((b|0)>0){ia=L+(((b|0)/4096|0)+aa<<2)|0;c[Rb>>2]=ia;c[_>>2]=(c[ia>>2]|0)+((b|0)%4096|0);i=h;return}else{ia=4095-b|0;b=L+(((ia|0)/-4096|0)+aa<<2)|0;c[Rb>>2]=b;c[_>>2]=(c[b>>2]|0)+(4095-((ia|0)%4096|0));i=h;return}}function Ne(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;c[a+4>>2]=b;if(!d){return}d=a+2380|0;fd(d);e=32;while(1){if((e|0)<=0){break}f=e-1|0;if((1<<f&b|0)==0){e=f}else{break}}f=(e|0)==0?1:e;c[a+2152>>2]=f;hd(d,b&255,f);f=Je(a,5-(c[a+2184>>2]<<1)|0)|0;c[a+2164>>2]=f;jd(d,f);Ke(a);Le(a);return}function Oe(b){b=b|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0;e=i;i=i+64|0;f=e|0;g=b+2184|0;j=c[g>>2]|0;k=b+8|0;l=c[k>>2]|0;m=(l|0)/2|0;n=l-j-1|0;o=l-(j<<1)|0;if((a[b+88|0]|0)==0){p=d[b+20|0]|0}else{p=127}q=(fa(l,m)|0)+m|0;r=b+16|0;s=c[r>>2]|0;t=(d[s+(q+1)|0]|0)>>>0>p>>>0;u=m-1|0;v=(d[s+((fa(l,u)|0)+m)|0]|0)>>>0>p>>>0;w=(d[s+(q-1)|0]|0)>>>0>p>>>0;q=m+1|0;x=(d[s+((fa(l,q)|0)+m)|0]|0)>>>0>p>>>0;s=t&1;y=v&1;z=w&1;A=x&1;B=y+s+z+A|0;a:do{if((o&2|0)==0){if((B|0)!=1){C=0;i=e;return C|0}D=y|s;if((D|z|0)==0){if((j|0)>(l-1-j|0)){E=l;F=j}else{G=j;H=j;I=l;J=l;while(1){if((H|0)<(m|0)){K=H;L=I;do{M=L-K-1|0;N=(fa(K,L)|0)+G|0;O=c[r>>2]|0;P=O+N|0;N=a[P]|0;a[P]=a[O+((fa(M,L)|0)+G)|0]|0;O=(fa(c[k>>2]|0,M)|0)+G|0;a[(c[r>>2]|0)+O|0]=N;K=K+1|0;L=c[k>>2]|0}while((K|0)<(m|0));Q=L;R=c[g>>2]|0;S=L}else{Q=I;R=H;S=J}K=G+1|0;if((K|0)>(Q+~R|0)){E=S;F=R;break}else{G=K;H=R;I=Q;J=S}}}J=(E|0)/2|0;if((F|0)>(E-1-F|0)){T=2;U=F;V=E;break}else{W=F;X=F;Y=E}while(1){if((X|0)<(J|0)){I=X;H=Y;do{G=H-I-1|0;K=fa(H,W)|0;N=c[r>>2]|0;O=N+(K+I)|0;M=a[O]|0;a[O]=a[N+(G+K)|0]|0;K=(fa(c[k>>2]|0,W)|0)+G|0;a[(c[r>>2]|0)+K|0]=M;I=I+1|0;H=c[k>>2]|0}while((I|0)<(J|0));Z=H;_=c[g>>2]|0}else{Z=Y;_=X}I=W+1|0;if((I|0)>(Z+~_|0)){T=2;U=_;V=Z;break a}else{W=I;X=_;Y=Z}}}if((z|y|A|0)==0){J=j+1|0;if((J|0)>(l-1-j|0)){$=l;aa=j}else{I=J;J=j;L=l;M=l;while(1){if((J|0)>(I|0)){ba=L;ca=J;da=M}else{K=J;G=L;do{N=(fa(K,G)|0)+I|0;O=c[r>>2]|0;P=O+N|0;N=a[P]|0;a[P]=a[O+((fa(G,I)|0)+K)|0]|0;O=(fa(c[k>>2]|0,I)|0)+K|0;a[(c[r>>2]|0)+O|0]=N;K=K+1|0;G=c[k>>2]|0}while((K|0)<=(I|0));ba=G;ca=c[g>>2]|0;da=G}K=I+1|0;if((K|0)>(ba+~ca|0)){$=da;aa=ca;break}else{I=K;J=ca;L=ba;M=da}}}M=($|0)/2|0;if((aa|0)>($-1-aa|0)){T=3;U=aa;V=$;break}else{ea=aa;ga=aa;ha=$}while(1){if((ga|0)<(M|0)){L=ga;J=ha;do{I=J-L-1|0;K=(fa(L,J)|0)+ea|0;H=c[r>>2]|0;N=H+K|0;K=a[N]|0;a[N]=a[H+((fa(I,J)|0)+ea)|0]|0;H=(fa(c[k>>2]|0,I)|0)+ea|0;a[(c[r>>2]|0)+H|0]=K;L=L+1|0;J=c[k>>2]|0}while((L|0)<(M|0));ia=J;ja=c[g>>2]|0}else{ia=ha;ja=ga}L=ea+1|0;if((L|0)>(ia+~ja|0)){T=3;U=ja;V=ia;break a}else{ea=L;ga=ja;ha=ia}}}if((z|s|A|0)==0){T=0;U=j;V=l;break}if((D|A|0)!=0){C=0;i=e;return C|0}M=j+1|0;if((M|0)>(l-1-j|0)){ka=l;la=j}else{L=M;M=j;G=l;K=l;while(1){if((M|0)>(L|0)){ma=G;na=M;oa=K}else{H=M;I=G;do{N=(fa(H,I)|0)+L|0;O=c[r>>2]|0;P=O+N|0;N=a[P]|0;a[P]=a[O+((fa(I,L)|0)+H)|0]|0;O=(fa(c[k>>2]|0,L)|0)+H|0;a[(c[r>>2]|0)+O|0]=N;H=H+1|0;I=c[k>>2]|0}while((H|0)<=(L|0));ma=I;na=c[g>>2]|0;oa=I}H=L+1|0;if((H|0)>(ma+~na|0)){ka=oa;la=na;break}else{L=H;M=na;G=ma;K=oa}}}K=(ka|0)/2|0;if((la|0)>(ka-1-la|0)){T=1;U=la;V=ka;break}else{pa=la;qa=la;ra=ka}while(1){if((qa|0)<(K|0)){G=qa;M=ra;do{L=M-G-1|0;D=fa(M,pa)|0;H=c[r>>2]|0;J=H+(D+G)|0;N=a[J]|0;a[J]=a[H+(L+D)|0]|0;D=(fa(c[k>>2]|0,pa)|0)+L|0;a[(c[r>>2]|0)+D|0]=N;G=G+1|0;M=c[k>>2]|0}while((G|0)<(K|0));sa=M;ta=c[g>>2]|0}else{sa=ra;ta=qa}G=pa+1|0;if((G|0)>(sa+~ta|0)){T=1;U=ta;V=sa;break}else{pa=G;qa=ta;ra=sa}}}else{if((B|0)!=3){C=0;i=e;return C|0}if(t&v&w){T=0;U=j;V=l;break}if(v&w&x){K=j+1|0;if((K|0)>(l-1-j|0)){ua=l;va=j}else{G=K;K=j;I=l;N=l;while(1){if((K|0)>(G|0)){wa=I;xa=K;ya=N}else{D=K;L=I;do{H=(fa(D,L)|0)+G|0;J=c[r>>2]|0;O=J+H|0;H=a[O]|0;a[O]=a[J+((fa(L,G)|0)+D)|0]|0;J=(fa(c[k>>2]|0,G)|0)+D|0;a[(c[r>>2]|0)+J|0]=H;D=D+1|0;L=c[k>>2]|0}while((D|0)<=(G|0));wa=L;xa=c[g>>2]|0;ya=L}D=G+1|0;if((D|0)>(wa+~xa|0)){ua=ya;va=xa;break}else{G=D;K=xa;I=wa;N=ya}}}N=(ua|0)/2|0;if((va|0)>(ua-1-va|0)){T=1;U=va;V=ua;break}else{za=va;Aa=va;Ba=ua;Ca=ua}while(1){if((Aa|0)<(N|0)){I=Aa;K=Ba;do{G=K-I-1|0;D=fa(K,za)|0;M=c[r>>2]|0;H=M+(D+I)|0;J=a[H]|0;a[H]=a[M+(G+D)|0]|0;D=(fa(c[k>>2]|0,za)|0)+G|0;a[(c[r>>2]|0)+D|0]=J;I=I+1|0;K=c[k>>2]|0}while((I|0)<(N|0));Da=K;Ea=c[g>>2]|0;Fa=K}else{Da=Ba;Ea=Aa;Fa=Ca}I=za+1|0;if((I|0)>(Da+~Ea|0)){T=1;U=Ea;V=Fa;break a}else{za=I;Aa=Ea;Ba=Da;Ca=Fa}}}if(w&x&t){if((j|0)>(l-1-j|0)){Ga=l;Ha=j}else{N=j;I=j;L=l;J=l;while(1){if((I|0)<(m|0)){D=I;G=L;do{M=G-D-1|0;H=(fa(D,G)|0)+N|0;O=c[r>>2]|0;P=O+H|0;H=a[P]|0;a[P]=a[O+((fa(M,G)|0)+N)|0]|0;O=(fa(c[k>>2]|0,M)|0)+N|0;a[(c[r>>2]|0)+O|0]=H;D=D+1|0;G=c[k>>2]|0}while((D|0)<(m|0));Ia=G;Ja=c[g>>2]|0;Ka=G}else{Ia=L;Ja=I;Ka=J}D=N+1|0;if((D|0)>(Ia+~Ja|0)){Ga=Ka;Ha=Ja;break}else{N=D;I=Ja;L=Ia;J=Ka}}}J=(Ga|0)/2|0;if((Ha|0)>(Ga-1-Ha|0)){T=2;U=Ha;V=Ga;break}else{La=Ha;Ma=Ha;Na=Ga;Oa=Ga}while(1){if((Ma|0)<(J|0)){L=Ma;I=Na;do{N=I-L-1|0;D=fa(I,La)|0;K=c[r>>2]|0;H=K+(D+L)|0;O=a[H]|0;a[H]=a[K+(N+D)|0]|0;D=(fa(c[k>>2]|0,La)|0)+N|0;a[(c[r>>2]|0)+D|0]=O;L=L+1|0;I=c[k>>2]|0}while((L|0)<(J|0));Pa=I;Qa=c[g>>2]|0;Ra=I}else{Pa=Na;Qa=Ma;Ra=Oa}L=La+1|0;if((L|0)>(Pa+~Qa|0)){T=2;U=Qa;V=Ra;break a}else{La=L;Ma=Qa;Na=Pa;Oa=Ra}}}if(!(x&t&v)){C=0;i=e;return C|0}J=j+1|0;if((J|0)>(l-1-j|0)){Sa=l;Ta=j}else{L=J;J=j;G=l;O=l;while(1){if((J|0)>(L|0)){Ua=G;Va=J;Wa=O}else{D=J;N=G;do{K=(fa(D,N)|0)+L|0;H=c[r>>2]|0;M=H+K|0;K=a[M]|0;a[M]=a[H+((fa(N,L)|0)+D)|0]|0;H=(fa(c[k>>2]|0,L)|0)+D|0;a[(c[r>>2]|0)+H|0]=K;D=D+1|0;N=c[k>>2]|0}while((D|0)<=(L|0));Ua=N;Va=c[g>>2]|0;Wa=N}D=L+1|0;if((D|0)>(Ua+~Va|0)){Sa=Wa;Ta=Va;break}else{L=D;J=Va;G=Ua;O=Wa}}}O=(Sa|0)/2|0;if((Ta|0)>(Sa-1-Ta|0)){T=3;U=Ta;V=Sa;break}else{Xa=Ta;Ya=Ta;Za=Sa;_a=Sa}while(1){if((Ya|0)<(O|0)){G=Ya;J=Za;do{L=J-G-1|0;D=(fa(G,J)|0)+Xa|0;I=c[r>>2]|0;K=I+D|0;D=a[K]|0;a[K]=a[I+((fa(L,J)|0)+Xa)|0]|0;I=(fa(c[k>>2]|0,L)|0)+Xa|0;a[(c[r>>2]|0)+I|0]=D;G=G+1|0;J=c[k>>2]|0}while((G|0)<(O|0));$a=J;ab=c[g>>2]|0;bb=J}else{$a=Za;ab=Ya;bb=_a}G=Xa+1|0;if((G|0)>($a+~ab|0)){T=3;U=ab;V=bb;break}else{Xa=G;Ya=ab;Za=$a;_a=bb}}}}while(0);bb=b+24|0;h[f+(T<<4)>>3]=+h[bb>>3];_a=b+32|0;h[f+(T<<4)+8>>3]=+h[_a>>3];$a=T+1&3;Za=b+40|0;h[f+($a<<4)>>3]=+h[Za>>3];ab=b+48|0;h[f+($a<<4)+8>>3]=+h[ab>>3];$a=T+2&3;Ya=b+56|0;h[f+($a<<4)>>3]=+h[Ya>>3];Xa=b+64|0;h[f+($a<<4)+8>>3]=+h[Xa>>3];$a=T+3&3;T=b+72|0;h[f+($a<<4)>>3]=+h[T>>3];g=b+80|0;h[f+($a<<4)+8>>3]=+h[g>>3];h[bb>>3]=+h[f>>3];h[_a>>3]=+h[f+8>>3];h[Za>>3]=+h[f+16>>3];h[ab>>3]=+h[f+24>>3];h[Ya>>3]=+h[f+32>>3];h[Xa>>3]=+h[f+40>>3];h[T>>3]=+h[f+48>>3];h[g>>3]=+h[f+56>>3];f=(U|0)>0;b:do{if(f){g=0;c:do{T=fa(V,g)|0;Xa=0;while(1){if((Xa|0)>=(V|0)){break}if((d[(c[r>>2]|0)+(T+Xa)|0]|0)>>>0>p>>>0){C=0;cb=119;break c}else{Xa=Xa+1|0}}g=g+1|0;}while((g|0)<(U|0));if((cb|0)==119){i=e;return C|0}if(!f){break}g=V-U|0;d:do{Xa=fa(V,g)|0;T=0;while(1){if((T|0)>=(V|0)){break}if((d[(c[r>>2]|0)+(Xa+T)|0]|0)>>>0>p>>>0){C=0;cb=119;break d}else{T=T+1|0}}g=g+1|0;}while((g|0)<(V|0));if((cb|0)==119){i=e;return C|0}if(f){db=0}else{break}e:do{g=j;while(1){if((g|0)>(n|0)){break}T=(fa(V,g)|0)+db|0;if((d[(c[r>>2]|0)+T|0]|0)>>>0>p>>>0){C=0;cb=119;break e}else{g=g+1|0}}db=db+1|0;}while((db|0)<(U|0));if((cb|0)==119){i=e;return C|0}if(!f){break}g=V-U|0;f:while(1){T=j;while(1){if((T|0)>(n|0)){break}Xa=(fa(V,T)|0)+g|0;if((d[(c[r>>2]|0)+Xa|0]|0)>>>0>p>>>0){C=0;break f}else{T=T+1|0}}g=g+1|0;if((g|0)>=(V|0)){break b}}i=e;return C|0}}while(0);V=(o|0)==5;U=V?0:8;f=-4-o+(fa(o,o)|0)-U|0;o=b+2408|0;cb=o|0;fd(cb);db=b+2380|0;g=db|0;fd(g);if((n|0)>=(j|0)){T=m-2|0;Xa=m+2|0;J=n;do{g:do{if((J|0)!=(m|0)){if((J|0)==(u|0)|(J|0)==(T|0)){Ya=j;do{do{if((Ya|0)!=(m|0)){if((dd(cb)|0)<(U|0)){ab=(fa(c[k>>2]|0,J)|0)+Ya|0;gd(cb,(d[(c[r>>2]|0)+ab|0]|0)>>>0<p>>>0);break}if((dd(g)|0)>=(f|0)){break g}ab=(fa(c[k>>2]|0,J)|0)+Ya|0;gd(g,(d[(c[r>>2]|0)+ab|0]|0)>>>0<p>>>0)}}while(0);Ya=Ya+1|0;}while((Ya|0)<=(n|0))}else{Ya=j;do{do{if((Ya|0)!=(m|0)|(J|0)!=(Xa|0)&(J|0)!=(q|0)){if((dd(cb)|0)<(U|0)){ab=(fa(c[k>>2]|0,J)|0)+Ya|0;gd(cb,(d[(c[r>>2]|0)+ab|0]|0)>>>0<p>>>0);break}if((dd(g)|0)>=(f|0)){break g}ab=(fa(c[k>>2]|0,J)|0)+Ya|0;gd(g,(d[(c[r>>2]|0)+ab|0]|0)>>>0<p>>>0)}}while(0);Ya=Ya+1|0;}while((Ya|0)<=(n|0))}}}while(0);J=J-1|0;}while((J|0)>=(j|0))}if(V){c[b+2144>>2]=0;c[b+2168>>2]=8;eb=8}else{wd(o,8)|0;o=b+2168|0;c[o>>2]=(((kd(cb)|0)&1)<<3)+8;V=((kd(cb)|0)&1)<<2;j=((kd(cb)|0)&1)<<1|V;c[b+2144>>2]=j|(kd(cb)|0)&1;eb=c[o>>2]|0}wd(db,eb)|0;if((c[b+2144>>2]|0)==0){c[b+4>>2]=nd(g)|0;C=1;i=e;return C|0}else{Ie(b,db,b+96|0,((dd(g)|0)/6|0)+1|0);C=1;i=e;return C|0}return 0}function Pe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0;d=i;i=i+24|0;e=d|0;f=d+8|0;g=d+16|0;h=a|0;j=a+8|0;k=c[j>>2]|0;l=a+4|0;m=c[l>>2]|0;n=(k|0)==(m|0);o=n&1;p=o+b|0;b=((p&4095|0)!=0)+(p>>>12)|0;if(n){q=0}else{q=(k-m<<10)-1|0}n=a+16|0;p=c[n>>2]|0;r=(q-p-(c[a+20>>2]|0)|0)>>>12;q=b>>>0<r>>>0?b:r;s=b-q|0;if((b|0)==(q|0)){c[n>>2]=(b<<12)+p;if((b|0)==0){i=d;return}else{t=b;u=k}while(1){v=u-4|0;c[e>>2]=c[v>>2];c[j>>2]=u+(~((v+(-v|0)|0)>>>2)<<2);Ed(h,e);v=t-1|0;if((v|0)==0){break}t=v;u=c[j>>2]|0}i=d;return}u=a+12|0;t=a|0;a=c[t>>2]|0;e=(c[u>>2]|0)-a|0;v=k-m>>2;if(!(s>>>0>((e>>2)-v|0)>>>0)){w=s;x=p;p=k;k=m;m=a;while(1){if((k|0)==(m|0)){y=8;break}c[f>>2]=qq(4096)|0;Ed(h,f);a=w-1|0;z=c[j>>2]|0;A=c[l>>2]|0;B=(c[n>>2]|0)+4096-((z-A|0)==4)|0;c[n>>2]=B;if((a|0)==0){C=q;D=B;E=z;break}w=a;x=B;p=z;k=A;m=c[t>>2]|0}do{if((y|0)==8){if((w|0)==0){C=q;D=x;E=p;break}m=~r;k=~b;f=m>>>0>k>>>0?m:k;k=w;m=p;do{A=qq(4096)|0;do{if((m|0)==(c[u>>2]|0)){z=c[l>>2]|0;B=c[t>>2]|0;if(z>>>0>B>>>0){a=z;F=((a-B>>2)+1|0)/-2|0;G=m-a|0;Jq(z+(F<<2)|0,z|0,G|0)|0;a=z+(F+(G>>2)<<2)|0;c[j>>2]=a;c[l>>2]=(c[l>>2]|0)+(F<<2);H=a;break}a=m-B>>1;F=(a|0)==0?1:a;a=qq(F<<2)|0;G=a+(F>>>2<<2)|0;I=a+(F<<2)|0;if((z|0)==(m|0)){J=G;K=B}else{B=z;z=G;do{if((z|0)==0){L=0}else{c[z>>2]=c[B>>2];L=z}z=L+4|0;B=B+4|0;}while((B|0)!=(m|0));J=z;K=c[t>>2]|0}c[t>>2]=a;c[l>>2]=G;c[j>>2]=J;c[u>>2]=I;if((K|0)==0){H=J;break}sq(K);H=c[j>>2]|0}else{H=m}}while(0);if((H|0)==0){M=0}else{c[H>>2]=A;M=c[j>>2]|0}m=M+4|0;c[j>>2]=m;k=k-1|0;}while((k|0)!=0);C=w-1-f|0;D=c[n>>2]|0;E=m}}while(0);c[n>>2]=D+(C<<12);if((C|0)==0){i=d;return}else{N=C;O=E}while(1){E=O-4|0;c[g>>2]=c[E>>2];c[j>>2]=O+(~((E+(-E|0)|0)>>>2)<<2);Ed(h,g);E=N-1|0;if((E|0)==0){break}N=E;O=c[j>>2]|0}i=d;return}O=(b<<12)-o|0;o=e>>1;e=v+s|0;v=o>>>0<e>>>0?e:o;if((v|0)==0){P=0}else{P=qq(v<<2)|0}o=s;s=P+(v<<2)|0;v=P;e=P;b=P;while(1){P=qq(4096)|0;do{if((v|0)==(s|0)){if(e>>>0>b>>>0){N=e;g=((N-b>>2)+1|0)/-2|0;h=e+(g<<2)|0;E=v-N|0;Jq(h|0,e|0,E|0)|0;Q=b;R=h;S=e+(g+(E>>2)<<2)|0;T=v;break}E=v-b>>1;g=(E|0)==0?1:E;E=qq(g<<2)|0;h=E+(g>>>2<<2)|0;N=E+(g<<2)|0;if((e|0)==(v|0)){U=h}else{g=e;C=h;while(1){if((C|0)==0){V=0}else{c[C>>2]=c[g>>2];V=C}D=V+4|0;w=g+4|0;if((w|0)==(v|0)){U=D;break}else{g=w;C=D}}}if((b|0)==0){Q=E;R=h;S=U;T=N;break}sq(b);Q=E;R=h;S=U;T=N}else{Q=b;R=e;S=v;T=s}}while(0);if((S|0)==0){W=0}else{c[S>>2]=P;W=S}X=W+4|0;m=o-1|0;if((m|0)==0){break}else{o=m;s=T;v=X;e=R;b=Q}}b=c[j>>2]|0;if((q|0)==0){Y=T;Z=X;_=R;$=Q;aa=b}else{e=q;q=T;T=X;X=R;R=Q;Q=b;while(1){b=Q-4|0;do{if((T|0)==(q|0)){if(X>>>0>R>>>0){v=X;s=((v-R>>2)+1|0)/-2|0;o=X+(s<<2)|0;W=T-v|0;Jq(o|0,X|0,W|0)|0;ba=R;ca=o;da=X+(s+(W>>2)<<2)|0;ea=T;break}W=T-R>>1;s=(W|0)==0?1:W;W=qq(s<<2)|0;o=W+(s>>>2<<2)|0;v=W+(s<<2)|0;if((X|0)==(T|0)){fa=o}else{s=X;S=o;while(1){if((S|0)==0){ga=0}else{c[S>>2]=c[s>>2];ga=S}U=ga+4|0;V=s+4|0;if((V|0)==(T|0)){fa=U;break}else{s=V;S=U}}}if((R|0)==0){ba=W;ca=o;da=fa;ea=v;break}sq(R);ba=W;ca=o;da=fa;ea=v}else{ba=R;ca=X;da=T;ea=q}}while(0);if((da|0)==0){ha=0}else{c[da>>2]=c[b>>2];ha=da}P=ha+4|0;S=c[j>>2]|0;s=S-4|0;N=S+(~((s+(-s|0)|0)>>>2)<<2)|0;c[j>>2]=N;s=e-1|0;if((s|0)==0){Y=ea;Z=P;_=ca;$=ba;aa=N;break}else{e=s;q=ea;T=P;X=ca;R=ba;Q=N}}}Q=c[l>>2]|0;if((Q|0)==(aa|0)){ia=Y;ja=Z;ka=_;la=$}else{aa=Y;Y=Z;Z=_;_=$;$=Q;while(1){do{if((Y|0)==(aa|0)){if(Z>>>0>_>>>0){Q=Z;ba=((Q-_>>2)+1|0)/-2|0;R=Z+(ba<<2)|0;ca=Y-Q|0;Jq(R|0,Z|0,ca|0)|0;ma=_;na=R;oa=Z+(ba+(ca>>2)<<2)|0;pa=Y;break}ca=Y-_>>1;ba=(ca|0)==0?1:ca;ca=qq(ba<<2)|0;R=ca+(ba>>>2<<2)|0;Q=ca+(ba<<2)|0;if((Z|0)==(Y|0)){qa=R}else{ba=Z;X=R;while(1){if((X|0)==0){ra=0}else{c[X>>2]=c[ba>>2];ra=X}T=ra+4|0;ea=ba+4|0;if((ea|0)==(Y|0)){qa=T;break}else{ba=ea;X=T}}}if((_|0)==0){ma=ca;na=R;oa=qa;pa=Q;break}sq(_);ma=ca;na=R;oa=qa;pa=Q}else{ma=_;na=Z;oa=Y;pa=aa}}while(0);if((oa|0)==0){sa=0}else{c[oa>>2]=c[$>>2];sa=oa}b=sa+4|0;X=$+4|0;if((X|0)==(c[j>>2]|0)){ia=pa;ja=b;ka=na;la=ma;break}else{aa=pa;Y=b;Z=na;_=ma;$=X}}}$=c[t>>2]|0;c[t>>2]=la;c[l>>2]=ka;c[j>>2]=ja;c[u>>2]=ia;c[n>>2]=O+(c[n>>2]|0);if(($|0)==0){i=d;return}sq($);i=d;return}function Qe(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;f=i;g=b;b=i;i=i+8|0;c[b>>2]=c[g>>2];c[b+4>>2]=c[g+4>>2];g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=e;e=i;i=i+8|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];g=c[d+4>>2]|0;h=b+4|0;j=c[h>>2]|0;do{if((g|0)!=(j|0)){k=c[d>>2]|0;l=c[b>>2]|0;m=g-j-(c[k>>2]|0)+(k-l<<10)+(c[l>>2]|0)|0;if((m|0)<=0){break}l=b|0;k=e;n=m;m=j;while(1){o=(c[c[l>>2]>>2]|0)+4096|0;p=o-m|0;if((p|0)>(n|0)){q=n;r=m+n|0}else{q=p;r=o}o=c[k>>2]|0;p=c[k+4>>2]|0;if((m|0)==(r|0)){s=o;t=p}else{u=r;v=m;w=p;p=o;while(1){o=w;x=(c[p>>2]|0)+4096-o|0;y=v;z=u-y|0;if((z|0)>(x|0)){A=v+x|0;B=x}else{A=r;B=z}Jq(w|0,v|0,A-y|0)|0;do{if((B|0)==0){C=w;D=p}else{y=o-(c[p>>2]|0)+B|0;if((y|0)>0){z=p+(((y|0)/4096|0)<<2)|0;C=(c[z>>2]|0)+((y|0)%4096|0)|0;D=z;break}else{z=4095-y|0;y=p+(((z|0)/-4096|0)<<2)|0;C=(c[y>>2]|0)+(4095-((z|0)%4096|0))|0;D=y;break}}}while(0);if((A|0)==(r|0)){s=D;t=C;break}else{v=A;w=C;p=D}}}p=s|0;w=t|0;c[k>>2]=p;c[k+4>>2]=w;v=n-q|0;do{if((q|0)!=0){u=c[l>>2]|0;o=(c[h>>2]|0)-(c[u>>2]|0)+q|0;if((o|0)>0){y=u+(((o|0)/4096|0)<<2)|0;c[l>>2]=y;c[h>>2]=(c[y>>2]|0)+((o|0)%4096|0);break}else{y=4095-o|0;o=u+(((y|0)/-4096|0)<<2)|0;c[l>>2]=o;c[h>>2]=(c[o>>2]|0)+(4095-((y|0)%4096|0));break}}}while(0);if((v|0)<=0){E=w;F=p;break}n=v;m=c[h>>2]|0}G=a;H=G|0;c[H>>2]=F;I=G+4|0;c[I>>2]=E;i=f;return}}while(0);h=e;E=c[h+4>>2]|0;F=c[h>>2]|0;G=a;H=G|0;c[H>>2]=F;I=G+4|0;c[I>>2]=E;i=f;return}function Re(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0;d=i;i=i+32|0;e=d|0;f=d+8|0;g=a|0;h=a+8|0;j=c[h>>2]|0;k=a+4|0;l=c[k>>2]|0;m=((j|0)==(l|0))+b|0;b=((m&4095|0)!=0)+(m>>>12)|0;m=a+16|0;n=c[m>>2]|0;o=n>>>12;p=b>>>0<o>>>0?b:o;q=b-p|0;if((b|0)==(p|0)){c[m>>2]=n-(b<<12);if((b|0)==0){i=d;return}n=a+12|0;r=a|0;s=b;t=j;u=l;while(1){v=c[u>>2]|0;w=u+4|0;c[k>>2]=w;do{if((t|0)==(c[n>>2]|0)){x=c[r>>2]|0;if(w>>>0>x>>>0){y=w;z=((y-x>>2)+1|0)/-2|0;A=t-y|0;Jq(u+(z+1<<2)|0,w|0,A|0)|0;y=u+((A>>2)+1+z<<2)|0;c[h>>2]=y;c[k>>2]=(c[k>>2]|0)+(z<<2);B=y;break}y=t-x>>1;z=(y|0)==0?1:y;y=qq(z<<2)|0;A=y+(z>>>2<<2)|0;C=y+(z<<2)|0;if((w|0)==(t|0)){D=A;E=x}else{x=w;z=A;do{if((z|0)==0){F=0}else{c[z>>2]=c[x>>2];F=z}z=F+4|0;x=x+4|0;}while((x|0)!=(t|0));D=z;E=c[r>>2]|0}c[r>>2]=y;c[k>>2]=A;c[h>>2]=D;c[n>>2]=C;if((E|0)==0){B=D;break}sq(E);B=c[h>>2]|0}else{B=t}}while(0);if((B|0)==0){G=0}else{c[B>>2]=v;G=c[h>>2]|0}w=G+4|0;c[h>>2]=w;x=s-1|0;if((x|0)==0){break}s=x;t=w;u=c[k>>2]|0}i=d;return}u=a+12|0;t=c[u>>2]|0;s=a|0;G=t-(c[s>>2]|0)|0;B=j-l>>2;if(!(q>>>0>((G>>2)-B|0)>>>0)){l=q;E=j;j=t;while(1){if((j|0)==(E|0)){H=19;break}t=qq(4096)|0;if((E|0)==0){I=0}else{c[E>>2]=t;I=c[h>>2]|0}t=I+4|0;c[h>>2]=t;D=l-1|0;if((D|0)==0){J=t;H=20;break}l=D;E=t;j=c[u>>2]|0}do{if((H|0)==19){if((l|0)==0){J=j;H=20;break}E=~o;I=~b;t=E>>>0>I>>>0?E:I;I=l;do{c[e>>2]=qq(4096)|0;Ed(g,e);I=I-1|0;K=c[h>>2]|0;L=(c[m>>2]|0)+4096-((K-(c[k>>2]|0)|0)==4)|0;c[m>>2]=L;}while((I|0)!=0);M=l-1-t|0;N=K;O=L}}while(0);if((H|0)==20){M=p;N=J;O=c[m>>2]|0}c[m>>2]=O-(M<<12);if((M|0)==0){i=d;return}else{P=M;Q=N}do{N=c[k>>2]|0;M=c[N>>2]|0;O=N+4|0;c[k>>2]=O;do{if((Q|0)==(c[u>>2]|0)){J=c[s>>2]|0;if(O>>>0>J>>>0){H=O;L=((H-J>>2)+1|0)/-2|0;K=Q-H|0;Jq(N+(L+1<<2)|0,O|0,K|0)|0;H=N+((K>>2)+1+L<<2)|0;c[h>>2]=H;c[k>>2]=(c[k>>2]|0)+(L<<2);R=H;break}H=Q-J>>1;L=(H|0)==0?1:H;H=qq(L<<2)|0;K=H+(L>>>2<<2)|0;l=H+(L<<2)|0;if((O|0)==(Q|0)){S=K;T=J}else{J=O;L=K;do{if((L|0)==0){U=0}else{c[L>>2]=c[J>>2];U=L}L=U+4|0;J=J+4|0;}while((J|0)!=(Q|0));S=L;T=c[s>>2]|0}c[s>>2]=H;c[k>>2]=K;c[h>>2]=S;c[u>>2]=l;if((T|0)==0){R=S;break}sq(T);R=c[h>>2]|0}else{R=Q}}while(0);if((R|0)==0){V=0}else{c[R>>2]=M;V=c[h>>2]|0}Q=V+4|0;c[h>>2]=Q;P=P-1|0;}while((P|0)!=0);i=d;return}P=p<<12;Q=G>>1;G=q+B|0;V=Q>>>0<G>>>0?G:Q;Q=f+12|0;c[Q>>2]=0;c[f+16>>2]=a+12;if((V|0)==0){W=0}else{W=qq(V<<2)|0}a=f|0;c[a>>2]=W;G=W+(B-p<<2)|0;B=f+8|0;c[B>>2]=G;R=f+4|0;c[R>>2]=G;c[Q>>2]=W+(V<<2);V=q;q=G;do{G=qq(4096)|0;do{if((q|0)==(c[Q>>2]|0)){W=c[R>>2]|0;T=c[a>>2]|0;if(W>>>0>T>>>0){S=W;U=((S-T>>2)+1|0)/-2|0;O=W+(U<<2)|0;N=q-S|0;Jq(O|0,W|0,N|0)|0;S=W+(U+(N>>2)<<2)|0;c[B>>2]=S;c[R>>2]=O;X=S;break}S=q-T>>1;O=(S|0)==0?1:S;S=qq(O<<2)|0;N=S+(O>>>2<<2)|0;U=S+(O<<2)|0;if((W|0)==(q|0)){Y=N;Z=T}else{T=W;W=N;do{if((W|0)==0){_=0}else{c[W>>2]=c[T>>2];_=W}W=_+4|0;T=T+4|0;}while((T|0)!=(q|0));Y=W;Z=c[a>>2]|0}c[a>>2]=S;c[R>>2]=N;c[B>>2]=Y;c[Q>>2]=U;if((Z|0)==0){X=Y;break}sq(Z);X=Y}else{X=q}}while(0);if((X|0)==0){$=0}else{c[X>>2]=G;$=c[B>>2]|0}q=$+4|0;c[B>>2]=q;V=V-1|0;}while((V|0)!=0);if((p|0)!=0){V=p;p=c[k>>2]|0;$=q;do{do{if(($|0)==(c[Q>>2]|0)){q=c[R>>2]|0;X=c[a>>2]|0;if(q>>>0>X>>>0){Y=q;Z=((Y-X>>2)+1|0)/-2|0;_=q+(Z<<2)|0;M=$-Y|0;Jq(_|0,q|0,M|0)|0;Y=q+(Z+(M>>2)<<2)|0;c[B>>2]=Y;c[R>>2]=_;aa=Y;break}Y=$-X>>1;_=(Y|0)==0?1:Y;Y=qq(_<<2)|0;M=Y+(_>>>2<<2)|0;Z=Y+(_<<2)|0;if((q|0)==($|0)){ba=M;ca=X}else{X=q;q=M;do{if((q|0)==0){da=0}else{c[q>>2]=c[X>>2];da=q}q=da+4|0;X=X+4|0;}while((X|0)!=($|0));ba=q;ca=c[a>>2]|0}c[a>>2]=Y;c[R>>2]=M;c[B>>2]=ba;c[Q>>2]=Z;if((ca|0)==0){aa=ba;break}sq(ca);aa=ba}else{aa=$}}while(0);if((aa|0)==0){ea=0}else{c[aa>>2]=c[p>>2];ea=c[B>>2]|0}$=ea+4|0;c[B>>2]=$;p=(c[k>>2]|0)+4|0;c[k>>2]=p;V=V-1|0;}while((V|0)!=0)}V=c[h>>2]|0;while(1){if((V|0)==(c[k>>2]|0)){break}p=V-4|0;Fd(f,p);V=p}f=c[s>>2]|0;c[s>>2]=c[a>>2];c[a>>2]=f;c[k>>2]=c[R>>2];c[R>>2]=V;R=c[h>>2]|0;c[h>>2]=c[B>>2];c[B>>2]=R;h=c[u>>2]|0;c[u>>2]=c[Q>>2];c[Q>>2]=h;c[m>>2]=(c[m>>2]|0)-P;if((R|0)!=(V|0)){c[B>>2]=R+(~((R-4+(-V|0)|0)>>>2)<<2)}if((f|0)==0){i=d;return}sq(f);i=d;return}function Se(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;f=i;i=i+8|0;g=b;b=i;i=i+8|0;c[b>>2]=c[g>>2];c[b+4>>2]=c[g+4>>2];g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=e;e=i;i=i+8|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];g=f|0;h=g;j=i;i=i+8|0;k=j;l=d+4|0;m=c[l>>2]|0;n=c[b+4>>2]|0;do{if((m|0)!=(n|0)){o=c[d>>2]|0;p=c[b>>2]|0;q=m-n-(c[o>>2]|0)+(o-p<<10)+(c[p>>2]|0)|0;if((q|0)<=0){break}p=d|0;o=e;r=q;q=m;s=c[o+4>>2]|0;t=c[o>>2]|0;u=c[p>>2]|0;while(1){v=c[u>>2]|0;if((q|0)==(v|0)){w=u-4|0;c[p>>2]=w;x=c[w>>2]|0;y=x+4096|0;z=w;A=x}else{y=q;z=u;A=v}v=y-1|0;x=y-A|0;if((x|0)>(r|0)){B=r;C=y+(-r|0)|0}else{B=x;C=A}c[j>>2]=t;c[j+4>>2]=s;Te(h,C,y,k,0);D=c[g>>2]|0;E=c[g+4>>2]|0;x=r-B|0;do{if((B|0)==1){F=v;G=z}else{w=v-(c[z>>2]|0)+(1-B)|0;if((w|0)>0){H=z+(((w|0)/4096|0)<<2)|0;c[p>>2]=H;F=(c[H>>2]|0)+((w|0)%4096|0)|0;G=H;break}else{H=4095-w|0;w=z+(((H|0)/-4096|0)<<2)|0;c[p>>2]=w;F=(c[w>>2]|0)+(4095-((H|0)%4096|0))|0;G=w;break}}}while(0);if((x|0)>0){r=x;q=F;s=E;t=D;u=G}else{break}}c[l>>2]=F;c[o>>2]=D;c[o+4>>2]=E;I=E;J=D;K=a;L=K|0;c[L>>2]=J;M=K+4|0;c[M>>2]=I;i=f;return}}while(0);D=e;I=c[D+4>>2]|0;J=c[D>>2]|0;K=a;L=K|0;c[L>>2]=J;M=K+4|0;c[M>>2]=I;i=f;return}function Te(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=i;g=e;e=i;i=i+8|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];g=e;if((d|0)==(b|0)){h=a;j=g|0;k=c[j>>2]|0;l=g+4|0;m=c[l>>2]|0;n=h|0;c[n>>2]=k;o=h+4|0;c[o>>2]=m;i=f;return}p=b;q=e+4|0;r=e|0;e=d;while(1){d=c[g>>2]|0;s=(c[g+4>>2]|0)-(c[d>>2]|0)|0;t=s-1|0;if((t|0)>0){u=c[d+(((t|0)/4096|0)<<2)>>2]|0;v=u+((t|0)%4096|0)|0;w=u}else{u=4096-s|0;s=c[d+(((u|0)/-4096|0)<<2)>>2]|0;v=s+(4095-((u|0)%4096|0))|0;w=s}s=v+1-w|0;u=e;t=u-p|0;if((t|0)>(s|0)){x=e+(-s|0)|0;y=s}else{x=b;y=t}t=u-x|0;Jq(v+(1-t)|0,x|0,t|0)|0;do{if((y|0)!=0){t=(c[q>>2]|0)-(c[d>>2]|0)-y|0;if((t|0)>0){u=d+(((t|0)/4096|0)<<2)|0;c[r>>2]=u;c[q>>2]=(c[u>>2]|0)+((t|0)%4096|0);break}else{u=4095-t|0;t=d+(((u|0)/-4096|0)<<2)|0;c[r>>2]=t;c[q>>2]=(c[t>>2]|0)+(4095-((u|0)%4096|0));break}}}while(0);if((x|0)==(b|0)){break}else{e=x}}h=a;j=g|0;k=c[j>>2]|0;l=g+4|0;m=c[l>>2]|0;n=h|0;c[n>>2]=k;o=h+4|0;c[o>>2]=m;i=f;return}function Ue(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+16|0;e=d|0;f=d+8|0;Kq(a|0,0,24)|0;g=c[b+4>>2]|0;h=c[b+16>>2]|0;j=g+(h>>>12<<2)|0;k=(c[b+8>>2]|0)==(g|0);if(k){l=0}else{l=(c[j>>2]|0)+(h&4095)|0}c[e>>2]=j;c[e+4>>2]=l;l=h+(c[b+20>>2]|0)|0;b=g+(l>>>12<<2)|0;if(k){m=0}else{m=(c[b>>2]|0)+(l&4095)|0}c[f>>2]=b;c[f+4>>2]=m;Ve(a,e,f,0);i=d;return}function Ve(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;f=i;g=d;d=i;i=i+8|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];g=e;e=i;i=i+8|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];g=d;h=e;j=c[g>>2]|0;k=c[g+4>>2]|0;g=c[h>>2]|0;l=c[h+4>>2]|0;h=j;if((l|0)==(k|0)){m=0}else{m=l-k+(g-j<<10)-(c[g>>2]|0)+(c[h>>2]|0)|0}g=b+8|0;j=c[g>>2]|0;k=b+4|0;l=c[k>>2]|0;if((j|0)==(l|0)){n=0}else{n=(j-l<<10)-1|0}o=b+16|0;p=c[o>>2]|0;q=b+20|0;r=c[q>>2]|0;s=n-p-r|0;if(m>>>0>s>>>0){Re(b,m-s|0);t=c[q>>2]|0;u=c[o>>2]|0;v=c[k>>2]|0;w=c[g>>2]|0}else{t=r;u=p;v=l;w=j}j=u+t|0;u=v+(j>>>12<<2)|0;if((w|0)==(v|0)){x=0}else{x=(c[u>>2]|0)+(j&4095)|0}j=d+4|0;v=c[j>>2]|0;w=c[e+4>>2]|0;if((v|0)==(w|0)){i=f;return}e=d|0;d=x;x=u;u=v;v=t;t=h;while(1){if((d|0)!=0){a[d]=a[u]|0}h=d+1|0;if((h-(c[x>>2]|0)|0)==4096){l=x+4|0;y=l;z=c[l>>2]|0}else{y=x;z=h}h=u+1|0;c[j>>2]=h;if((h-(c[t>>2]|0)|0)==4096){l=t+4|0;c[e>>2]=l;p=c[l>>2]|0;c[j>>2]=p;A=l;B=p}else{A=t;B=h}C=v+1|0;if((B|0)==(w|0)){break}else{d=z;x=y;u=B;v=C;t=A}}c[q>>2]=C;i=f;return}function We(a,b){a=a|0;b=b|0;ke(a|0,5);c[a>>2]=11200;c[a+96>>2]=1;Ze(a,b,1);return}function Xe(a){a=a|0;ne(a|0);kq(a);return}function Ye(a){a=a|0;ne(a|0);return}function Ze(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=b|0;c[b+4>>2]=d;if(!e){return}e=b+16|0;g=b+8|0;h=c[g>>2]|0;Kq(c[e>>2]|0,0,fa(h,h)|0)|0;h=c[b+96>>2]|0;i=(c[g>>2]|0)-h|0;j=i-1|0;if((j|0)>=(h|0)){k=d;d=j;l=i;while(1){m=(d|0)==(j|0);n=i+(1-l)|0;a:do{if((d|0)==(h|0)|m){if(m){o=k;p=j}else{q=k;r=j;while(1){if((r|0)==(h|0)){s=q}else{if((q&1|0)==0){t=(fa(c[g>>2]|0,n)|0)+r|0;a[(c[e>>2]|0)+t|0]=-1}s=q>>1}t=r-1|0;if((t|0)<(h|0)){u=s;break a}else{q=s;r=t}}}while(1){do{if((p|0)==(h|0)){v=o}else{if((p|0)==(j|0)){r=(fa(c[g>>2]|0,n)|0)+j|0;a[(c[e>>2]|0)+r|0]=-1;v=o;break}if((o&1|0)==0){r=(fa(c[g>>2]|0,n)|0)+p|0;a[(c[e>>2]|0)+r|0]=-1}v=o>>1}}while(0);r=p-1|0;if((r|0)<(h|0)){u=v;break}else{o=v;p=r}}}else{r=k;q=j;while(1){if((r&1|0)==0){t=(fa(c[g>>2]|0,n)|0)+q|0;a[(c[e>>2]|0)+t|0]=-1}t=r>>1;w=q-1|0;if((w|0)<(h|0)){u=t;break}else{r=t;q=w}}}}while(0);n=d-1|0;if((n|0)<(h|0)){break}else{k=u;l=d;d=n}}}qe(f,c[e>>2]|0);a[b+21|0]=0;a[b+22|0]=-1;a[b+20|0]=127;a[b+88|0]=1;a[b+89|0]=0;a[b+90|0]=0;return}function _e(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+8|0;d=b|0;if((oq(d,16,104)|0)!=0){c[d>>2]=0;Be();return 0}e=c[d>>2]|0;if((e|0)==0){Be();return 0}d=e;le(d,a|0);c[e>>2]=11200;c[e+96>>2]=c[a+96>>2];i=b;return d|0}function $e(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=c[b+96>>2]|0;f=b|0;g=b+8|0;h=c[g>>2]|0;i=h-e-1|0;if((a[b+88|0]|0)==0){j=d[b+20|0]|0}else{j=127}k=fa(h,e)|0;l=b+16|0;m=c[l>>2]|0;n=(d[m+(k+e)|0]|0)>>>0>=j>>>0;o=fa(h,i)|0;p=(d[m+(o+e)|0]|0)>>>0>=j>>>0;q=(d[m+(o+i)|0]|0)>>>0>=j>>>0;o=(d[m+(k+i)|0]|0)>>>0>=j>>>0;if(n|p|o^1){do{if(p|q|n^1){if(!(q|o|p^1)){r=2;break}if(o|n|q^1){s=0}else{r=3;break}return s|0}else{r=1}}while(0);xe(f,r);t=c[g>>2]|0}else{t=h}h=b+4|0;c[h>>2]=0;a:do{if((t|0)>0){b=t;g=0;b:while(1){r=b-1|0;f=(r|0)==0;q=(r|0)==(e|0);n=(r|0)==(i|0);o=0;p=g;while(1){do{if((o|0)==0|f){u=13}else{k=t-1|0;if((o|0)==(k|0)|(r|0)==(k|0)){u=13;break}k=(o|0)==(e|0);if(k&q){v=p;break}if(k&n|(o|0)==(i|0)&q){v=p;break}k=(fa(t,r)|0)+o|0;if((d[(c[l>>2]|0)+k|0]|0)>>>0<j>>>0){k=p|1;c[h>>2]=k;w=k}else{w=p}k=w<<1;c[h>>2]=k;v=k}}while(0);if((u|0)==13){u=0;k=(fa(t,r)|0)+o|0;if((d[(c[l>>2]|0)+k|0]|0)>>>0>j>>>0){s=0;break b}else{v=p}}k=o+1|0;if((k|0)<(t|0)){o=k;p=v}else{break}}if((r|0)>0){b=r;g=v}else{x=v;break a}}return s|0}else{x=0}}while(0);c[h>>2]=x>>1;s=1;return s|0}function af(b){b=b|0;c[b>>2]=11240;a[b+4|0]=1;a[b+5|0]=0;c[b+8>>2]=127;c[b+12>>2]=0;c[b+16>>2]=0;a[b+20|0]=0;Xd(b+32|0);Kq(b+176|0,0,20)|0;return}function bf(a){a=a|0;cf(a);sq(a);return}function cf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;c[a>>2]=11240;b=a+176|0;d=c[b>>2]|0;e=a+180|0;f=c[e>>2]|0;if((f|0)!=(d|0)){g=f;while(1){f=g-32|0;c[e>>2]=f;h=c[g-32+4>>2]|0;if((h|0)==0){i=f}else{uc[c[(c[h>>2]|0)+4>>2]&511](h);i=c[e>>2]|0}if((i|0)==(d|0)){break}else{g=i}}}i=c[a+188>>2]|0;if((i|0)!=0){uc[c[(c[i>>2]|0)+4>>2]&511](i)}i=c[b>>2]|0;if((i|0)==0){j=a+32|0;Zd(j);return}g=c[e>>2]|0;if((g|0)==(i|0)){k=i}else{d=g;while(1){g=d-32|0;c[e>>2]=g;h=c[d-32+4>>2]|0;if((h|0)==0){l=g}else{uc[c[(c[h>>2]|0)+4>>2]&511](h);l=c[e>>2]|0}if((l|0)==(i|0)){break}else{d=l}}k=c[b>>2]|0}kq(k);j=a+32|0;Zd(j);return}function df(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=+f;g=g|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;j=i;i=i+32|0;k=j|0;if((d|0)==0){i=j;return}l=k+4|0;c[l>>2]=0;m=k+8|0;a[m]=0;n=k+16|0;h[n>>3]=0.0;o=k+24|0;c[o>>2]=-1;c[k+28>>2]=0;p=c[5136]|0;c[5136]=p+1;c[k>>2]=p;q=wc[c[(c[d>>2]|0)+12>>2]&255](d)|0;c[l>>2]=q;d=e&1;a[m]=d;h[n>>3]=f;c[o>>2]=g;o=b+180|0;n=c[o>>2]|0;if((n|0)==(c[b+184>>2]|0)){hf(b+176|0,k);r=c[l>>2]|0}else{do{if((n|0)!=0){c[n>>2]=p;a[n+8|0]=d;h[n+16>>3]=f;c[n+24>>2]=g;c[n+28>>2]=0;if((q|0)==0){c[n+4>>2]=0;break}c[n+4>>2]=wc[c[(c[q>>2]|0)+12>>2]&255](q)|0}}while(0);c[o>>2]=(c[o>>2]|0)+32;r=q}if((r|0)==0){i=j;return}uc[c[(c[r>>2]|0)+4>>2]&511](r);i=j;return}function ef(b,d,e){b=b|0;d=d|0;e=e|0;c[b+12>>2]=d;c[b+16>>2]=e;_d(b+32|0,d,(a[b+5|0]|0)!=0,c[b+8>>2]|0);a[b+20|0]=1;d=b+192|0;c[d>>2]=(c[d>>2]|0)+1;return}function ff(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=b+20|0;if((a[d]|0)==0){e=0;return e|0}f=b+32|0;g=b;while(1){h=$d(f)|0;if((h|0)==0){i=6;break}if(Fc[c[(c[g>>2]|0)+16>>2]&63](b,h)|0){i=5;break}}if((i|0)==5){e=c[b+188>>2]|0;return e|0}else if((i|0)==6){a[d]=0;e=0;return e|0}return 0}function gf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0,u=0,v=0,w=0.0,x=0.0,y=0,z=0,A=0,B=0;e=i;i=i+8|0;f=e|0;g=c[b+176>>2]|0;j=b+180|0;if((g|0)==(c[j>>2]|0)){k=0;i=e;return k|0}l=b+12|0;m=b+16|0;n=b+4|0;o=b+5|0;p=b+188|0;q=g;g=-1;r=0;s=1.7976931348623157e+308;while(1){t=q+4|0;u=c[t>>2]|0;v=wc[c[(c[u>>2]|0)+12>>2]&255](u)|0;do{if(re(v,c[l>>2]|0,c[m>>2]|0,d,(a[n]|0)!=0,(a[o]|0)!=0)|0){do{if((a[q+8|0]|0)==0){if(!(wc[c[(c[v>>2]|0)+16>>2]&255](v)|0)){break}u=c[t>>2]|0;Jc[c[(c[u>>2]|0)+8>>2]&31](u,c[v+4>>2]|0,1)}}while(0);w=+te(v,c[t>>2]|0,f,c[q+24>>2]|0);if(!(w<=+h[q+16>>3]&w<s)){x=s;y=r;z=g;break}u=c[(c[t>>2]|0)+4>>2]|0;A=c[f>>2]|0;B=c[p>>2]|0;if((B|0)!=0){uc[c[(c[B>>2]|0)+4>>2]&511](B)}c[p>>2]=wc[c[(c[v>>2]|0)+12>>2]&255](v)|0;x=w;y=A;z=u}else{x=s;y=r;z=g}}while(0);if((v|0)!=0){uc[c[(c[v>>2]|0)+4>>2]&511](v)}t=q+32|0;if((t|0)==(c[j>>2]|0)){break}else{q=t;g=z;r=y;s=x}}if((z|0)==-1){k=0;i=e;return k|0}r=b+188|0;xe(c[r>>2]|0,y);y=c[r>>2]|0;Jc[c[(c[y>>2]|0)+8>>2]&31](y,z,0);h[b+24>>3]=x;k=1;i=e;return k|0}function hf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;i=i+8|0;f=e|0;g=b+4|0;j=b|0;k=c[j>>2]|0;l=(c[g>>2]|0)-k>>5;m=l+1|0;if((m|0)<0){pn(0)}n=b+8|0;b=(c[n>>2]|0)-k|0;if(!(b>>5>>>0<1073741823>>>0)){Be()}k=b>>4;b=k>>>0<m>>>0?m:k;do{if((b|0)==0){o=0;p=0}else{if(b>>>0>134217727>>>0){Be()}k=b<<5;if((oq(f,16,k)|0)==0){q=c[f>>2]|0}else{c[f>>2]=0;q=0}if((q|0)!=0|(k|0)==0){o=q;p=b;break}else{Be()}}}while(0);b=o+(l<<5)|0;q=o+(p<<5)|0;do{if((b|0)!=0){c[b>>2]=c[d>>2];a[o+(l<<5)+8|0]=a[d+8|0]|0;h[o+(l<<5)+16>>3]=+h[d+16>>3];c[o+(l<<5)+24>>2]=c[d+24>>2];c[o+(l<<5)+28>>2]=c[d+28>>2];p=c[d+4>>2]|0;if((p|0)==0){c[o+(l<<5)+4>>2]=0;break}c[o+(l<<5)+4>>2]=wc[c[(c[p>>2]|0)+12>>2]&255](p)|0}}while(0);l=o+(m<<5)|0;m=c[j>>2]|0;o=c[g>>2]|0;do{if((o|0)==(m|0)){c[j>>2]=b;c[g>>2]=l;c[n>>2]=q;r=m}else{d=o;p=b;while(1){s=p-32|0;f=d-32|0;do{if((s|0)!=0){c[s>>2]=c[f>>2];a[p-32+8|0]=a[d-32+8|0]|0;h[p-32+16>>3]=+h[d-32+16>>3];c[p-32+24>>2]=c[d-32+24>>2];c[p-32+28>>2]=c[d-32+28>>2];k=c[d-32+4>>2]|0;if((k|0)==0){c[p-32+4>>2]=0;break}c[p-32+4>>2]=wc[c[(c[k>>2]|0)+12>>2]&255](k)|0}}while(0);if((f|0)==(m|0)){break}else{d=f;p=s}}p=c[j>>2]|0;d=c[g>>2]|0;c[j>>2]=s;c[g>>2]=l;c[n>>2]=q;if((d|0)==(p|0)){r=p;break}else{t=d}while(1){d=t-32|0;k=c[t-32+4>>2]|0;if((k|0)!=0){uc[c[(c[k>>2]|0)+4>>2]&511](k)}if((d|0)==(p|0)){r=p;break}else{t=d}}}}while(0);if((r|0)==0){i=e;return}kq(r);i=e;return}function jf(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0;d=b|0;h[a>>3]=+h[d>>3];e=b+8|0;h[a+8>>3]=+h[e>>3];f=b+16|0;h[a+16>>3]=+h[f>>3];g=b+24|0;h[a+24>>3]=+h[g>>3];i=b+32|0;h[a+32>>3]=+h[i>>3];j=b+40|0;h[a+40>>3]=+h[j>>3];k=b+48|0;h[a+48>>3]=+h[k>>3];l=b+56|0;h[a+56>>3]=+h[l>>3];m=b+64|0;h[a+64>>3]=+h[m>>3];lf(a+72|0,c);n=+h[c+24>>3];o=+h[c+32>>3];p=+h[c+40>>3];q=+h[c+48>>3];r=+h[c>>3];s=+h[c+8>>3];t=+h[c+16>>3];u=n*2.0;v=o*2.0;w=p*2.0;x=u*q;y=v*q;z=w*q;q=n*u;u=n*v;A=n*w;n=o*v;v=o*w;o=p*w;w=1.0-(n+o);p=u-z;B=A+y;C=u+z;z=1.0-(q+o);o=v-x;u=A-y;y=v+x;x=1.0-(q+n);n=+h[d>>3];q=+h[g>>3];v=+h[k>>3];A=+h[e>>3];D=+h[i>>3];E=+h[l>>3];F=+h[f>>3];G=+h[j>>3];H=+h[m>>3];h[a+128>>3]=w*n+C*q+u*v;h[a+136>>3]=w*A+C*D+u*E;h[a+144>>3]=w*F+C*G+u*H;h[a+152>>3]=p*n+z*q+y*v;h[a+160>>3]=p*A+z*D+y*E;h[a+168>>3]=p*F+z*G+y*H;h[a+176>>3]=B*n+o*q+x*v;h[a+184>>3]=B*A+o*D+x*E;h[a+192>>3]=B*F+o*G+x*H;H=r*+h[e>>3]+s*+h[i>>3]+t*+h[l>>3];x=r*+h[f>>3]+s*+h[j>>3]+t*+h[m>>3];h[a+200>>3]=r*+h[d>>3]+s*+h[g>>3]+t*+h[k>>3];h[a+208>>3]=H;h[a+216>>3]=x;return}function kf(a){a=a|0;Kq(a|0,0,48)|0;h[a+48>>3]=1.0;return}function lf(a,b){a=a|0;b=b|0;h[a>>3]=+h[b>>3];h[a+8>>3]=+h[b+8>>3];h[a+16>>3]=+h[b+16>>3];h[a+24>>3]=+h[b+24>>3];h[a+32>>3]=+h[b+32>>3];h[a+40>>3]=+h[b+40>>3];h[a+48>>3]=+h[b+48>>3];return}function mf(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,g=0.0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;c=+h[b>>3];d=+h[b+32>>3];e=+h[b+64>>3];f=c+(d+e);if(f>0.0){g=+V(f+1.0);h[a+24>>3]=g*.5;f=.5/g;h[a>>3]=f*(+h[b+40>>3]- +h[b+56>>3]);h[a+8>>3]=f*(+h[b+48>>3]- +h[b+16>>3]);h[a+16>>3]=f*(+h[b+8>>3]- +h[b+24>>3]);return}else{i=d>c|0;j=e>+h[b+((-i&3)+i<<3)>>3]?2:i;i=((j+1|0)>>>0)%3|0;k=((i+1|0)>>>0)%3|0;l=j*3|0;m=i*3|0;n=k*3|0;e=+V(+h[b+(l+j<<3)>>3]- +h[b+(m+i<<3)>>3]- +h[b+(n+k<<3)>>3]+1.0);o=a;h[o+(j<<3)>>3]=e*.5;c=.5/e;h[a+24>>3]=c*(+h[b+(m+k<<3)>>3]- +h[b+(n+i<<3)>>3]);h[o+(i<<3)>>3]=c*(+h[b+(l+i<<3)>>3]+ +h[b+(m+j<<3)>>3]);h[o+(k<<3)>>3]=c*(+h[b+(l+k<<3)>>3]+ +h[b+(n+j<<3)>>3]);return}}function nf(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,g=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0;c=+h[a>>3];d=+h[a+8>>3];e=+h[a+16>>3];f=+h[a+24>>3];g=+h[a+32>>3];i=+h[a+40>>3];j=+h[a+48>>3];k=+h[a+56>>3];l=c-e+g-j;m=d-f+i-k;n=e-g;o=j-g;g=f-i;p=k-i;i=n*p-g*o;q=(l*p-o*m)/i;o=(n*m-g*l)/i;h[b>>3]=e-c+e*q;h[b+24>>3]=j-c+j*o;h[b+48>>3]=c;h[b+8>>3]=f-d+f*q;h[b+32>>3]=k-d+k*o;h[b+56>>3]=d;h[b+16>>3]=q;h[b+40>>3]=o;h[b+64>>3]=1.0;return}



function so(e,f,g,h,i,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;c[g>>2]=e;c[j>>2]=h;h=c[g>>2]|0;do{if((l&4|0)==0){m=h}else{if((f-h|0)<=2){m=h;break}if(!((a[h]|0)==-17)){m=h;break}if(!((a[h+1|0]|0)==-69)){m=h;break}if(!((a[h+2|0]|0)==-65)){m=h;break}e=h+3|0;c[g>>2]=e;m=e}}while(0);a:do{if(m>>>0<f>>>0){h=f;l=i;e=c[j>>2]|0;n=m;b:while(1){if(!(e>>>0<i>>>0)){o=n;break a}p=a[n]|0;q=p&255;if(q>>>0>k>>>0){r=2;s=41;break}do{if(p<<24>>24>-1){b[e>>1]=p&255;c[g>>2]=n+1}else{if((p&255)>>>0<194>>>0){r=2;s=41;break b}if((p&255)>>>0<224>>>0){if((h-n|0)<2){r=1;s=41;break b}t=d[n+1|0]|0;if((t&192|0)!=128){r=2;s=41;break b}u=t&63|q<<6&1984;if(u>>>0>k>>>0){r=2;s=41;break b}b[e>>1]=u;c[g>>2]=n+2;break}if((p&255)>>>0<240>>>0){if((h-n|0)<3){r=1;s=41;break b}u=a[n+1|0]|0;t=a[n+2|0]|0;if((q|0)==224){if(!((u&-32)<<24>>24==-96)){r=2;s=41;break b}}else if((q|0)==237){if(!((u&-32)<<24>>24==-128)){r=2;s=41;break b}}else{if(!((u&-64)<<24>>24==-128)){r=2;s=41;break b}}v=t&255;if((v&192|0)!=128){r=2;s=41;break b}t=(u&255)<<6&4032|q<<12|v&63;if((t&65535)>>>0>k>>>0){r=2;s=41;break b}b[e>>1]=t;c[g>>2]=n+3;break}if(!((p&255)>>>0<245>>>0)){r=2;s=41;break b}if((h-n|0)<4){r=1;s=41;break b}t=a[n+1|0]|0;v=a[n+2|0]|0;u=a[n+3|0]|0;if((q|0)==240){if(!((t+112&255)>>>0<48>>>0)){r=2;s=41;break b}}else if((q|0)==244){if(!((t&-16)<<24>>24==-128)){r=2;s=41;break b}}else{if(!((t&-64)<<24>>24==-128)){r=2;s=41;break b}}w=v&255;if((w&192|0)!=128){r=2;s=41;break b}v=u&255;if((v&192|0)!=128){r=2;s=41;break b}if((l-e|0)<4){r=1;s=41;break b}u=q&7;x=t&255;t=w<<6;y=v&63;if((x<<12&258048|u<<18|t&4032|y)>>>0>k>>>0){r=2;s=41;break b}b[e>>1]=x<<2&60|w>>>4&3|((x>>>4&3|u<<2)<<6)+16320|55296;u=e+2|0;c[j>>2]=u;b[u>>1]=y|t&960|56320;c[g>>2]=(c[g>>2]|0)+4}}while(0);q=(c[j>>2]|0)+2|0;c[j>>2]=q;p=c[g>>2]|0;if(p>>>0<f>>>0){e=q;n=p}else{o=p;break a}}if((s|0)==41){return r|0}}else{o=m}}while(0);r=o>>>0<f>>>0|0;return r|0}function to(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function uo(a){a=a|0;return 0}function vo(a){a=a|0;return 0}function wo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return xo(c,d,e,1114111,0)|0}function xo(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if(!((a[b]|0)==-17)){h=b;break}if(!((a[b+1|0]|0)==-69)){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);a:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=0;j=h;b:while(1){k=a[j]|0;l=k&255;if(l>>>0>f>>>0){m=j;break a}do{if(k<<24>>24>-1){n=j+1|0;o=i}else{if((k&255)>>>0<194>>>0){m=j;break a}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break a}p=d[j+1|0]|0;if((p&192|0)!=128){m=j;break a}if((p&63|l<<6&1984)>>>0>f>>>0){m=j;break a}n=j+2|0;o=i;break}if((k&255)>>>0<240>>>0){q=j;if((g-q|0)<3){m=j;break a}p=a[j+1|0]|0;r=a[j+2|0]|0;if((l|0)==224){if(!((p&-32)<<24>>24==-96)){s=21;break b}}else if((l|0)==237){if(!((p&-32)<<24>>24==-128)){s=23;break b}}else{if(!((p&-64)<<24>>24==-128)){s=25;break b}}t=r&255;if((t&192|0)!=128){m=j;break a}if(((p&255)<<6&4032|l<<12&61440|t&63)>>>0>f>>>0){m=j;break a}n=j+3|0;o=i;break}if(!((k&255)>>>0<245>>>0)){m=j;break a}u=j;if((g-u|0)<4){m=j;break a}if((e-i|0)>>>0<2>>>0){m=j;break a}t=a[j+1|0]|0;p=a[j+2|0]|0;r=a[j+3|0]|0;if((l|0)==240){if(!((t+112&255)>>>0<48>>>0)){s=34;break b}}else if((l|0)==244){if(!((t&-16)<<24>>24==-128)){s=36;break b}}else{if(!((t&-64)<<24>>24==-128)){s=38;break b}}v=p&255;if((v&192|0)!=128){m=j;break a}p=r&255;if((p&192|0)!=128){m=j;break a}if(((t&255)<<12&258048|l<<18&1835008|v<<6&4032|p&63)>>>0>f>>>0){m=j;break a}n=j+4|0;o=i+1|0}}while(0);l=o+1|0;if(n>>>0<c>>>0&l>>>0<e>>>0){i=l;j=n}else{m=n;break a}}if((s|0)==21){w=q-b|0;return w|0}else if((s|0)==23){w=q-b|0;return w|0}else if((s|0)==25){w=q-b|0;return w|0}else if((s|0)==34){w=u-b|0;return w|0}else if((s|0)==36){w=u-b|0;return w|0}else if((s|0)==38){w=u-b|0;return w|0}}else{m=h}}while(0);w=m-b|0;return w|0}function yo(a){a=a|0;return 4}function zo(a){a=a|0;mh(a|0);sq(a);return}function Ao(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=Bo(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>2<<2);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function Bo(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;c[e>>2]=b;c[h>>2]=f;do{if((j&2|0)!=0){if((g-f|0)<3){k=1;return k|0}else{c[h>>2]=f+1;a[f]=-17;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-69;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-65;break}}}while(0);f=c[e>>2]|0;if(!(f>>>0<d>>>0)){k=0;return k|0}j=g;g=f;a:while(1){f=c[g>>2]|0;if((f&-2048|0)==55296|f>>>0>i>>>0){k=2;l=19;break}do{if(f>>>0<128>>>0){b=c[h>>2]|0;if((j-b|0)<1){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f}else{if(f>>>0<2048>>>0){b=c[h>>2]|0;if((j-b|0)<2){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f>>>6|192;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}b=c[h>>2]|0;m=j-b|0;if(f>>>0<65536>>>0){if((m|0)<3){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f>>>12|224;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=f>>>6&63|128;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=f&63|128;break}else{if((m|0)<4){k=1;l=19;break a}c[h>>2]=b+1;a[b]=f>>>18|240;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>12&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f>>>6&63|128;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=f&63|128;break}}}while(0);f=(c[e>>2]|0)+4|0;c[e>>2]=f;if(f>>>0<d>>>0){g=f}else{k=0;l=19;break}}if((l|0)==19){return k|0}return 0}function Co(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=Do(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>2<<2);i=b;return l|0}function Do(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;c[f>>2]=b;c[i>>2]=g;g=c[f>>2]|0;do{if((k&4|0)==0){l=g}else{if((e-g|0)<=2){l=g;break}if(!((a[g]|0)==-17)){l=g;break}if(!((a[g+1|0]|0)==-69)){l=g;break}if(!((a[g+2|0]|0)==-65)){l=g;break}b=g+3|0;c[f>>2]=b;l=b}}while(0);a:do{if(l>>>0<e>>>0){g=e;k=c[i>>2]|0;b=l;b:while(1){if(!(k>>>0<h>>>0)){m=b;break a}n=a[b]|0;o=n&255;do{if(n<<24>>24>-1){if(o>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=o;c[f>>2]=b+1}else{if((n&255)>>>0<194>>>0){p=2;q=40;break b}if((n&255)>>>0<224>>>0){if((g-b|0)<2){p=1;q=40;break b}r=d[b+1|0]|0;if((r&192|0)!=128){p=2;q=40;break b}s=r&63|o<<6&1984;if(s>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=s;c[f>>2]=b+2;break}if((n&255)>>>0<240>>>0){if((g-b|0)<3){p=1;q=40;break b}s=a[b+1|0]|0;r=a[b+2|0]|0;if((o|0)==237){if(!((s&-32)<<24>>24==-128)){p=2;q=40;break b}}else if((o|0)==224){if(!((s&-32)<<24>>24==-96)){p=2;q=40;break b}}else{if(!((s&-64)<<24>>24==-128)){p=2;q=40;break b}}t=r&255;if((t&192|0)!=128){p=2;q=40;break b}r=(s&255)<<6&4032|o<<12&61440|t&63;if(r>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=r;c[f>>2]=b+3;break}if(!((n&255)>>>0<245>>>0)){p=2;q=40;break b}if((g-b|0)<4){p=1;q=40;break b}r=a[b+1|0]|0;t=a[b+2|0]|0;s=a[b+3|0]|0;if((o|0)==240){if(!((r+112&255)>>>0<48>>>0)){p=2;q=40;break b}}else if((o|0)==244){if(!((r&-16)<<24>>24==-128)){p=2;q=40;break b}}else{if(!((r&-64)<<24>>24==-128)){p=2;q=40;break b}}u=t&255;if((u&192|0)!=128){p=2;q=40;break b}t=s&255;if((t&192|0)!=128){p=2;q=40;break b}s=(r&255)<<12&258048|o<<18&1835008|u<<6&4032|t&63;if(s>>>0>j>>>0){p=2;q=40;break b}c[k>>2]=s;c[f>>2]=b+4}}while(0);o=(c[i>>2]|0)+4|0;c[i>>2]=o;n=c[f>>2]|0;if(n>>>0<e>>>0){k=o;b=n}else{m=n;break a}}if((q|0)==40){return p|0}}else{m=l}}while(0);p=m>>>0<e>>>0|0;return p|0}function Eo(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Fo(a){a=a|0;return 0}function Go(a){a=a|0;return 0}function Ho(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Io(c,d,e,1114111,0)|0}function Io(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if(!((a[b]|0)==-17)){h=b;break}if(!((a[b+1|0]|0)==-69)){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);a:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=1;j=h;b:while(1){k=a[j]|0;l=k&255;do{if(k<<24>>24>-1){if(l>>>0>f>>>0){m=j;break a}n=j+1|0}else{if((k&255)>>>0<194>>>0){m=j;break a}if((k&255)>>>0<224>>>0){if((g-j|0)<2){m=j;break a}o=d[j+1|0]|0;if((o&192|0)!=128){m=j;break a}if((o&63|l<<6&1984)>>>0>f>>>0){m=j;break a}n=j+2|0;break}if((k&255)>>>0<240>>>0){p=j;if((g-p|0)<3){m=j;break a}o=a[j+1|0]|0;q=a[j+2|0]|0;if((l|0)==224){if(!((o&-32)<<24>>24==-96)){r=21;break b}}else if((l|0)==237){if(!((o&-32)<<24>>24==-128)){r=23;break b}}else{if(!((o&-64)<<24>>24==-128)){r=25;break b}}s=q&255;if((s&192|0)!=128){m=j;break a}if(((o&255)<<6&4032|l<<12&61440|s&63)>>>0>f>>>0){m=j;break a}n=j+3|0;break}if(!((k&255)>>>0<245>>>0)){m=j;break a}t=j;if((g-t|0)<4){m=j;break a}s=a[j+1|0]|0;o=a[j+2|0]|0;q=a[j+3|0]|0;if((l|0)==244){if(!((s&-16)<<24>>24==-128)){r=35;break b}}else if((l|0)==240){if(!((s+112&255)>>>0<48>>>0)){r=33;break b}}else{if(!((s&-64)<<24>>24==-128)){r=37;break b}}u=o&255;if((u&192|0)!=128){m=j;break a}o=q&255;if((o&192|0)!=128){m=j;break a}if(((s&255)<<12&258048|l<<18&1835008|u<<6&4032|o&63)>>>0>f>>>0){m=j;break a}n=j+4|0}}while(0);if(!(n>>>0<c>>>0&i>>>0<e>>>0)){m=n;break a}i=i+1|0;j=n}if((r|0)==21){v=p-b|0;return v|0}else if((r|0)==23){v=p-b|0;return v|0}else if((r|0)==25){v=p-b|0;return v|0}else if((r|0)==33){v=t-b|0;return v|0}else if((r|0)==35){v=t-b|0;return v|0}else if((r|0)==37){v=t-b|0;return v|0}}else{m=h}}while(0);v=m-b|0;return v|0}function Jo(a){a=a|0;return 4}function Ko(a){a=a|0;mh(a|0);sq(a);return}function Lo(a){a=a|0;mh(a|0);sq(a);return}function Mo(a){a=a|0;c[a>>2]=8928;Nh(a+12|0);mh(a|0);sq(a);return}function No(a){a=a|0;c[a>>2]=8928;Nh(a+12|0);mh(a|0);return}function Oo(a){a=a|0;c[a>>2]=8880;Nh(a+16|0);mh(a|0);sq(a);return}function Po(a){a=a|0;c[a>>2]=8880;Nh(a+16|0);mh(a|0);return}function Qo(b){b=b|0;return a[b+8|0]|0}function Ro(a){a=a|0;return c[a+8>>2]|0}function So(b){b=b|0;return a[b+9|0]|0}function To(a){a=a|0;return c[a+12>>2]|0}function Uo(a,b){a=a|0;b=b|0;Kh(a,b+12|0);return}function Vo(a,b){a=a|0;b=b|0;Kh(a,b+16|0);return}function Wo(a,b){a=a|0;b=b|0;Lh(a,4648,4);return}function Xo(a,b){a=a|0;b=b|0;Xh(a,4584,Lp(4584)|0);return}function Yo(a,b){a=a|0;b=b|0;Lh(a,4480,5);return}function Zo(a,b){a=a|0;b=b|0;Xh(a,4456,Lp(4456)|0);return}function _o(b){b=b|0;var d=0;if((a[22072]|0)!=0){d=c[5098]|0;return d|0}if((rb(22072)|0)==0){d=c[5098]|0;return d|0}do{if((a[21960]|0)==0){if((rb(21960)|0)==0){break}Kq(19432,0,168)|0;eb(332,0,t|0)|0}}while(0);Ph(19432,6160)|0;Ph(19444,5848)|0;Ph(19456,5824)|0;Ph(19468,5808)|0;Ph(19480,5792)|0;Ph(19492,5784)|0;Ph(19504,5768)|0;Ph(19516,5760)|0;Ph(19528,5752)|0;Ph(19540,5728)|0;Ph(19552,5720)|0;Ph(19564,5624)|0;Ph(19576,5616)|0;Ph(19588,5600)|0;c[5098]=19432;d=c[5098]|0;return d|0}function $o(b){b=b|0;var d=0;if((a[22016]|0)!=0){d=c[5076]|0;return d|0}if((rb(22016)|0)==0){d=c[5076]|0;return d|0}do{if((a[21936]|0)==0){if((rb(21936)|0)==0){break}Kq(18688,0,168)|0;eb(186,0,t|0)|0}}while(0);_h(18688,6688)|0;_h(18700,6656)|0;_h(18712,6624)|0;_h(18724,6584)|0;_h(18736,6528)|0;_h(18748,6496)|0;_h(18760,6368)|0;_h(18772,6328)|0;_h(18784,6312)|0;_h(18796,6296)|0;_h(18808,6280)|0;_h(18820,6264)|0;_h(18832,6248)|0;_h(18844,6192)|0;c[5076]=18688;d=c[5076]|0;return d|0}function ap(b){b=b|0;var d=0;if((a[22064]|0)!=0){d=c[5096]|0;return d|0}if((rb(22064)|0)==0){d=c[5096]|0;return d|0}do{if((a[21952]|0)==0){if((rb(21952)|0)==0){break}Kq(19144,0,288)|0;eb(214,0,t|0)|0}}while(0);Ph(19144,464)|0;Ph(19156,448)|0;Ph(19168,440)|0;Ph(19180,432)|0;Ph(19192,424)|0;Ph(19204,416)|0;Ph(19216,408)|0;Ph(19228,400)|0;Ph(19240,368)|0;Ph(19252,264)|0;Ph(19264,152)|0;Ph(19276,96)|0;Ph(19288,88)|0;Ph(19300,80)|0;Ph(19312,72)|0;Ph(19324,64)|0;Ph(19336,424)|0;Ph(19348,56)|0;Ph(19360,48)|0;Ph(19372,7320)|0;Ph(19384,7160)|0;Ph(19396,6736)|0;Ph(19408,6728)|0;Ph(19420,6720)|0;c[5096]=19144;d=c[5096]|0;return d|0}function bp(b){b=b|0;var d=0;if((a[22008]|0)!=0){d=c[5074]|0;return d|0}if((rb(22008)|0)==0){d=c[5074]|0;return d|0}do{if((a[21928]|0)==0){if((rb(21928)|0)==0){break}Kq(18400,0,288)|0;eb(152,0,t|0)|0}}while(0);_h(18400,2384)|0;_h(18412,2048)|0;_h(18424,1928)|0;_h(18436,1824)|0;_h(18448,656)|0;_h(18460,1496)|0;_h(18472,1360)|0;_h(18484,1328)|0;_h(18496,1288)|0;_h(18508,1256)|0;_h(18520,1216)|0;_h(18532,1160)|0;_h(18544,1144)|0;_h(18556,1120)|0;_h(18568,688)|0;_h(18580,672)|0;_h(18592,656)|0;_h(18604,640)|0;_h(18616,624)|0;_h(18628,608)|0;_h(18640,592)|0;_h(18652,576)|0;_h(18664,560)|0;_h(18676,536)|0;c[5074]=18400;d=c[5074]|0;return d|0}function cp(b){b=b|0;var d=0;if((a[22080]|0)!=0){d=c[5100]|0;return d|0}if((rb(22080)|0)==0){d=c[5100]|0;return d|0}do{if((a[21968]|0)==0){if((rb(21968)|0)==0){break}Kq(19600,0,288)|0;eb(150,0,t|0)|0}}while(0);Ph(19600,2424)|0;Ph(19612,2416)|0;c[5100]=19600;d=c[5100]|0;return d|0}function dp(b){b=b|0;var d=0;if((a[22024]|0)!=0){d=c[5078]|0;return d|0}if((rb(22024)|0)==0){d=c[5078]|0;return d|0}do{if((a[21944]|0)==0){if((rb(21944)|0)==0){break}Kq(18856,0,288)|0;eb(304,0,t|0)|0}}while(0);_h(18856,2496)|0;_h(18868,2432)|0;c[5078]=18856;d=c[5078]|0;return d|0}function ep(b){b=b|0;if((a[22088]|0)!=0){return 20408}if((rb(22088)|0)==0){return 20408}Lh(20408,4224,8);eb(324,20408,t|0)|0;return 20408}function fp(b){b=b|0;if((a[22032]|0)!=0){return 20320}if((rb(22032)|0)==0){return 20320}Xh(20320,4032,Lp(4032)|0);eb(244,20320,t|0)|0;return 20320}function gp(b){b=b|0;if((a[22112]|0)!=0){return 20456}if((rb(22112)|0)==0){return 20456}Lh(20456,4016,8);eb(324,20456,t|0)|0;return 20456}function hp(b){b=b|0;if((a[22056]|0)!=0){return 20368}if((rb(22056)|0)==0){return 20368}Xh(20368,3976,Lp(3976)|0);eb(244,20368,t|0)|0;return 20368}function ip(b){b=b|0;if((a[22104]|0)!=0){return 20440}if((rb(22104)|0)==0){return 20440}Lh(20440,3912,20);eb(324,20440,t|0)|0;return 20440}function jp(b){b=b|0;if((a[22048]|0)!=0){return 20352}if((rb(22048)|0)==0){return 20352}Xh(20352,3728,Lp(3728)|0);eb(244,20352,t|0)|0;return 20352}function kp(b){b=b|0;if((a[22096]|0)!=0){return 20424}if((rb(22096)|0)==0){return 20424}Lh(20424,3608,11);eb(324,20424,t|0)|0;return 20424}function lp(b){b=b|0;if((a[22040]|0)!=0){return 20336}if((rb(22040)|0)==0){return 20336}Xh(20336,3536,Lp(3536)|0);eb(244,20336,t|0)|0;return 20336}function mp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Pb()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);l=+Hq(b,g,c[4980]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function np(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Pb()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);l=+Hq(b,g,c[4980]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=l;i=f;return+h}c[e>>2]=4;h=l;i=f;return+h}function op(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=Pb()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);l=+Hq(b,g,c[4980]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)==34){c[e>>2]=4}h=l;i=f;return+h}function pp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+8|0;h=g|0;do{if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0}else{if((a[b]|0)==45){c[e>>2]=4;j=0;k=0;break}l=Pb()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);n=Eb(b|0,h|0,f|0,c[4980]|0)|0;o=c[l>>2]|0;if((o|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;break}if((o|0)!=34){j=J;k=n;break}c[e>>2]=4;j=-1;k=-1}}while(0);i=g;return(J=j,k)|0}function qp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Pb()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);m=Eb(b|0,h|0,f|0,c[4980]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function rp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Pb()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);m=Eb(b|0,h|0,f|0,c[4980]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function sp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=Pb()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);m=Eb(b|0,h|0,f|0,c[4980]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>65535>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m&65535;i=g;return j|0}return 0}function tp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(J=j,k)|0}l=Pb()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);n=Hb(b|0,h|0,f|0,c[4980]|0)|0;f=J;b=c[l>>2]|0;if((b|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(J=j,k)|0}if((b|0)==34){c[e>>2]=4;e=0;b=(f|0)>(e|0)|(f|0)==(e|0)&n>>>0>0>>>0;i=g;return(J=b?2147483647:-2147483648,b?-1:0)|0}else{j=f;k=n;i=g;return(J=j,k)|0}return 0}function up(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}k=Pb()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[21992]|0)==0){if((rb(21992)|0)==0){break}c[4980]=Va(2147483647,5160,0)|0}}while(0);m=Hb(b|0,h|0,f|0,c[4980]|0)|0;f=J;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}do{if((b|0)==34){c[e>>2]=4;d=0;if((f|0)>(d|0)|(f|0)==(d|0)&m>>>0>0>>>0){j=2147483647}else{break}i=g;return j|0}else{d=-1;if((f|0)<(d|0)|(f|0)==(d|0)&m>>>0<-2147483648>>>0){c[e>>2]=4;break}d=0;if((f|0)>(d|0)|(f|0)==(d|0)&m>>>0>2147483647>>>0){c[e>>2]=4;j=2147483647;i=g;return j|0}else{j=m;i=g;return j|0}}}while(0);j=-2147483648;i=g;return j|0}function vp(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+4|0;d=(c[a>>2]|0)+(c[b+4>>2]|0)|0;a=d;e=c[b>>2]|0;if((e&1|0)==0){f=e;uc[f&511](a);return}else{f=c[(c[d>>2]|0)+(e-1)>>2]|0;uc[f&511](a);return}}function wp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=b+8|0;f=b+4|0;g=c[f>>2]|0;h=c[e>>2]|0;i=g;if(!(h-i>>2>>>0<d>>>0)){j=d;k=g;do{if((k|0)==0){l=0}else{c[k>>2]=0;l=c[f>>2]|0}k=l+4|0;c[f>>2]=k;j=j-1|0;}while((j|0)!=0);return}j=b+16|0;k=b|0;l=c[k>>2]|0;g=i-l>>2;i=g+d|0;if(i>>>0>1073741823>>>0){pn(0)}m=h-l|0;do{if(m>>2>>>0<536870911>>>0){l=m>>1;h=l>>>0<i>>>0?i:l;if((h|0)==0){n=0;o=0;break}l=b+128|0;if(!((a[l]|0)==0&h>>>0<29>>>0)){p=h;q=11;break}a[l]=1;n=j;o=h}else{p=1073741823;q=11}}while(0);if((q|0)==11){n=qq(p<<2)|0;o=p}p=d;d=n+(g<<2)|0;do{if((d|0)==0){r=0}else{c[d>>2]=0;r=d}d=r+4|0;p=p-1|0;}while((p|0)!=0);p=c[k>>2]|0;r=(c[f>>2]|0)-p|0;q=n+(g-(r>>2)<<2)|0;g=p;Iq(q|0,g|0,r)|0;c[k>>2]=q;c[f>>2]=d;c[e>>2]=n+(o<<2);if((p|0)==0){return}if((j|0)==(p|0)){a[b+128|0]=0;return}else{sq(g);return}}function xp(a){a=a|0;Zh(19132);Zh(19120);Zh(19108);Zh(19096);Zh(19084);Zh(19072);Zh(19060);Zh(19048);Zh(19036);Zh(19024);Zh(19012);Zh(19e3);Zh(18988);Zh(18976);Zh(18964);Zh(18952);Zh(18940);Zh(18928);Zh(18916);Zh(18904);Zh(18892);Zh(18880);Zh(18868);Zh(18856);return}function yp(a){a=a|0;Nh(19876);Nh(19864);Nh(19852);Nh(19840);Nh(19828);Nh(19816);Nh(19804);Nh(19792);Nh(19780);Nh(19768);Nh(19756);Nh(19744);Nh(19732);Nh(19720);Nh(19708);Nh(19696);Nh(19684);Nh(19672);Nh(19660);Nh(19648);Nh(19636);Nh(19624);Nh(19612);Nh(19600);return}function zp(a){a=a|0;Zh(18676);Zh(18664);Zh(18652);Zh(18640);Zh(18628);Zh(18616);Zh(18604);Zh(18592);Zh(18580);Zh(18568);Zh(18556);Zh(18544);Zh(18532);Zh(18520);Zh(18508);Zh(18496);Zh(18484);Zh(18472);Zh(18460);Zh(18448);Zh(18436);Zh(18424);Zh(18412);Zh(18400);return}function Ap(a){a=a|0;Nh(19420);Nh(19408);Nh(19396);Nh(19384);Nh(19372);Nh(19360);Nh(19348);Nh(19336);Nh(19324);Nh(19312);Nh(19300);Nh(19288);Nh(19276);Nh(19264);Nh(19252);Nh(19240);Nh(19228);Nh(19216);Nh(19204);Nh(19192);Nh(19180);Nh(19168);Nh(19156);Nh(19144);return}function Bp(a){a=a|0;Zh(18844);Zh(18832);Zh(18820);Zh(18808);Zh(18796);Zh(18784);Zh(18772);Zh(18760);Zh(18748);Zh(18736);Zh(18724);Zh(18712);Zh(18700);Zh(18688);return}function Cp(a){a=a|0;Nh(19588);Nh(19576);Nh(19564);Nh(19552);Nh(19540);Nh(19528);Nh(19516);Nh(19504);Nh(19492);Nh(19480);Nh(19468);Nh(19456);Nh(19444);Nh(19432);return}function Dp(a,b,c){a=a|0;b=b|0;c=c|0;return Ep(0,a,b,(c|0)!=0?c:17296)|0}function Ep(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;j=((f|0)==0?17288:f)|0;f=c[j>>2]|0;a:do{if((d|0)==0){if((f|0)==0){k=0}else{break}i=g;return k|0}else{if((b|0)==0){l=h;c[h>>2]=l;m=l}else{m=b}if((e|0)==0){k=-2;i=g;return k|0}do{if((f|0)==0){l=a[d]|0;n=l&255;if(l<<24>>24>-1){c[m>>2]=n;k=l<<24>>24!=0|0;i=g;return k|0}else{l=n-194|0;if(l>>>0>50>>>0){break a}o=d+1|0;p=c[7656+(l<<2)>>2]|0;q=e-1|0;break}}else{o=d;p=f;q=e}}while(0);b:do{if((q|0)==0){r=p}else{l=a[o]|0;n=(l&255)>>>3;if((n-16|n+(p>>26))>>>0>7>>>0){break a}else{s=o;t=p;u=q;v=l}while(1){s=s+1|0;t=(v&255)-128|t<<6;u=u-1|0;if((t|0)>=0){break}if((u|0)==0){r=t;break b}v=a[s]|0;if(((v&255)-128|0)>>>0>63>>>0){break a}}c[j>>2]=0;c[m>>2]=t;k=e-u|0;i=g;return k|0}}while(0);c[j>>2]=r;k=-2;i=g;return k|0}}while(0);c[j>>2]=0;c[(Pb()|0)>>2]=84;k=-1;i=g;return k|0}function Fp(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;g=i;i=i+1032|0;h=g|0;j=g+1024|0;k=c[b>>2]|0;c[j>>2]=k;l=(a|0)!=0;m=l?e:256;e=l?a:h|0;a:do{if((k|0)==0|(m|0)==0){n=0;o=d;p=m;q=e;r=k}else{a=h|0;s=m;t=d;u=0;v=e;w=k;while(1){x=t>>>2;y=x>>>0>=s>>>0;if(!(y|t>>>0>131>>>0)){n=u;o=t;p=s;q=v;r=w;break a}z=y?s:x;A=t-z|0;x=Gp(v,j,z,f)|0;if((x|0)==-1){break}if((v|0)==(a|0)){B=a;C=s}else{B=v+(x<<2)|0;C=s-x|0}z=x+u|0;x=c[j>>2]|0;if((x|0)==0|(C|0)==0){n=z;o=A;p=C;q=B;r=x;break a}else{s=C;t=A;u=z;v=B;w=x}}n=-1;o=A;p=0;q=v;r=c[j>>2]|0}}while(0);b:do{if((r|0)==0){D=n}else{if((p|0)==0|(o|0)==0){D=n;break}else{E=p;F=o;G=n;H=q;I=r}while(1){J=Ep(H,I,F,f)|0;if((J+2|0)>>>0<3>>>0){break}A=(c[j>>2]|0)+J|0;c[j>>2]=A;B=E-1|0;C=G+1|0;if((B|0)==0|(F|0)==(J|0)){D=C;break b}else{E=B;F=F-J|0;G=C;H=H+4|0;I=A}}if((J|0)==(-1|0)){D=-1;break}else if((J|0)==0){c[j>>2]=0;D=G;break}else{c[f>>2]=0;D=G;break}}}while(0);if(!l){i=g;return D|0}c[b>>2]=c[j>>2];i=g;return D|0}function Gp(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0;h=c[e>>2]|0;do{if((g|0)==0){i=5}else{j=g|0;k=c[j>>2]|0;if((k|0)==0){i=5;break}if((b|0)==0){l=k;m=h;n=f;i=16;break}c[j>>2]=0;o=k;p=h;q=b;r=f;i=36}}while(0);if((i|0)==5){if((b|0)==0){s=h;t=f;i=7}else{u=h;v=b;w=f;i=6}}a:while(1){if((i|0)==6){i=0;if((w|0)==0){x=f;i=53;break}else{y=w;z=v;A=u}while(1){h=a[A]|0;do{if(((h&255)-1|0)>>>0<127>>>0){if((A&3|0)==0&y>>>0>3>>>0){B=y;C=z;D=A}else{E=A;F=z;G=y;H=h;break}while(1){I=c[D>>2]|0;if(((I-16843009|I)&-2139062144|0)!=0){i=30;break}c[C>>2]=I&255;c[C+4>>2]=d[D+1|0]|0;c[C+8>>2]=d[D+2|0]|0;J=D+4|0;K=C+16|0;c[C+12>>2]=d[D+3|0]|0;L=B-4|0;if(L>>>0>3>>>0){B=L;C=K;D=J}else{i=31;break}}if((i|0)==30){i=0;E=D;F=C;G=B;H=I&255;break}else if((i|0)==31){i=0;E=J;F=K;G=L;H=a[J]|0;break}}else{E=A;F=z;G=y;H=h}}while(0);M=H&255;if(!((M-1|0)>>>0<127>>>0)){break}c[F>>2]=M;h=G-1|0;if((h|0)==0){x=f;i=53;break a}else{y=h;z=F+4|0;A=E+1|0}}h=M-194|0;if(h>>>0>50>>>0){N=G;O=F;P=E;i=47;break}o=c[7656+(h<<2)>>2]|0;p=E+1|0;q=F;r=G;i=36;continue}else if((i|0)==7){i=0;h=a[s]|0;do{if(((h&255)-1|0)>>>0<127>>>0){if((s&3|0)!=0){Q=s;R=t;S=h;break}g=c[s>>2]|0;if(((g-16843009|g)&-2139062144|0)==0){T=t;U=s}else{Q=s;R=t;S=g&255;break}do{U=U+4|0;T=T-4|0;V=c[U>>2]|0;}while(((V-16843009|V)&-2139062144|0)==0);Q=U;R=T;S=V&255}else{Q=s;R=t;S=h}}while(0);h=S&255;if((h-1|0)>>>0<127>>>0){s=Q+1|0;t=R-1|0;i=7;continue}g=h-194|0;if(g>>>0>50>>>0){N=R;O=b;P=Q;i=47;break}l=c[7656+(g<<2)>>2]|0;m=Q+1|0;n=R;i=16;continue}else if((i|0)==16){i=0;g=(d[m]|0)>>>3;if((g-16|g+(l>>26))>>>0>7>>>0){i=17;break}g=m+1|0;do{if((l&33554432|0)==0){W=g}else{if(((d[g]|0)-128|0)>>>0>63>>>0){i=20;break a}h=m+2|0;if((l&524288|0)==0){W=h;break}if(((d[h]|0)-128|0)>>>0>63>>>0){i=23;break a}W=m+3|0}}while(0);s=W;t=n-1|0;i=7;continue}else if((i|0)==36){i=0;g=d[p]|0;h=g>>>3;if((h-16|h+(o>>26))>>>0>7>>>0){i=37;break}h=p+1|0;X=g-128|o<<6;do{if((X|0)<0){g=(d[h]|0)-128|0;if(g>>>0>63>>>0){i=40;break a}k=p+2|0;Y=g|X<<6;if((Y|0)>=0){Z=Y;_=k;break}g=(d[k]|0)-128|0;if(g>>>0>63>>>0){i=43;break a}Z=g|Y<<6;_=p+3|0}else{Z=X;_=h}}while(0);c[q>>2]=Z;u=_;v=q+4|0;w=r-1|0;i=6;continue}}if((i|0)==17){$=l;aa=m-1|0;ba=b;ca=n;i=46}else if((i|0)==20){$=l;aa=m-1|0;ba=b;ca=n;i=46}else if((i|0)==23){$=l;aa=m-1|0;ba=b;ca=n;i=46}else if((i|0)==37){$=o;aa=p-1|0;ba=q;ca=r;i=46}else if((i|0)==40){$=X;aa=p-1|0;ba=q;ca=r;i=46}else if((i|0)==43){$=Y;aa=p-1|0;ba=q;ca=r;i=46}else if((i|0)==53){return x|0}if((i|0)==46){if(($|0)==0){N=ca;O=ba;P=aa;i=47}else{da=ba;ea=aa}}do{if((i|0)==47){if((a[P]|0)!=0){da=O;ea=P;break}if((O|0)!=0){c[O>>2]=0;c[e>>2]=0}x=f-N|0;return x|0}}while(0);c[(Pb()|0)>>2]=84;if((da|0)==0){x=-1;return x|0}c[e>>2]=ea;x=-1;return x|0}function Hp(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;if((e|0)==0){j=0;i=g;return j|0}do{if((f|0)!=0){if((b|0)==0){k=h;c[h>>2]=k;l=k}else{l=b}k=a[e]|0;m=k&255;if(k<<24>>24>-1){c[l>>2]=m;j=k<<24>>24!=0|0;i=g;return j|0}k=m-194|0;if(k>>>0>50>>>0){break}m=e+1|0;n=c[7656+(k<<2)>>2]|0;if(f>>>0<4>>>0){if((n&-2147483648>>>(((f*6|0)-6|0)>>>0)|0)!=0){break}}k=d[m]|0;m=k>>>3;if((m-16|m+(n>>26))>>>0>7>>>0){break}m=k-128|n<<6;if((m|0)>=0){c[l>>2]=m;j=2;i=g;return j|0}n=(d[e+2|0]|0)-128|0;if(n>>>0>63>>>0){break}k=n|m<<6;if((k|0)>=0){c[l>>2]=k;j=3;i=g;return j|0}m=(d[e+3|0]|0)-128|0;if(m>>>0>63>>>0){break}c[l>>2]=m|k<<6;j=4;i=g;return j|0}}while(0);c[(Pb()|0)>>2]=84;j=-1;i=g;return j|0}function Ip(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((b|0)==0){f=1;return f|0}if(d>>>0<128>>>0){a[b]=d;f=1;return f|0}if(d>>>0<2048>>>0){a[b]=d>>>6|192;a[b+1|0]=d&63|128;f=2;return f|0}if(d>>>0<55296>>>0|(d-57344|0)>>>0<8192>>>0){a[b]=d>>>12|224;a[b+1|0]=d>>>6&63|128;a[b+2|0]=d&63|128;f=3;return f|0}if((d-65536|0)>>>0<1048576>>>0){a[b]=d>>>18|240;a[b+1|0]=d>>>12&63|128;a[b+2|0]=d>>>6&63|128;a[b+3|0]=d&63|128;f=4;return f|0}else{c[(Pb()|0)>>2]=84;f=-1;return f|0}return 0}function Jp(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;f=i;i=i+264|0;g=f|0;h=f+256|0;j=c[b>>2]|0;c[h>>2]=j;k=(a|0)!=0;l=k?e:256;e=k?a:g|0;a:do{if((j|0)==0|(l|0)==0){m=0;n=d;o=l;p=e;q=j}else{a=g|0;r=l;s=d;t=0;u=e;v=j;while(1){w=s>>>0>=r>>>0;if(!(w|s>>>0>32>>>0)){m=t;n=s;o=r;p=u;q=v;break a}x=w?r:s;y=s-x|0;w=Kp(u,h,x,0)|0;if((w|0)==-1){break}if((u|0)==(a|0)){z=a;A=r}else{z=u+w|0;A=r-w|0}x=w+t|0;w=c[h>>2]|0;if((w|0)==0|(A|0)==0){m=x;n=y;o=A;p=z;q=w;break a}else{r=A;s=y;t=x;u=z;v=w}}m=-1;n=y;o=0;p=u;q=c[h>>2]|0}}while(0);b:do{if((q|0)==0){B=m}else{if((o|0)==0|(n|0)==0){B=m;break}else{C=o;D=n;E=m;F=p;G=q}while(1){H=Ip(F,c[G>>2]|0,0)|0;if((H+1|0)>>>0<2>>>0){break}y=(c[h>>2]|0)+4|0;c[h>>2]=y;z=D-1|0;A=E+1|0;if((C|0)==(H|0)|(z|0)==0){B=A;break b}else{C=C-H|0;D=z;E=A;F=F+H|0;G=y}}if((H|0)!=0){B=-1;break}c[h>>2]=0;B=E}}while(0);if(!k){i=f;return B|0}c[b>>2]=c[h>>2];i=f;return B|0}function Kp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+8|0;g=f|0;if((b|0)==0){h=c[d>>2]|0;j=g|0;k=c[h>>2]|0;if((k|0)==0){l=0;i=f;return l|0}else{m=0;n=h;o=k}while(1){if(o>>>0>127>>>0){k=Ip(j,o,0)|0;if((k|0)==-1){l=-1;p=26;break}else{q=k}}else{q=1}k=q+m|0;h=n+4|0;r=c[h>>2]|0;if((r|0)==0){l=k;p=26;break}else{m=k;n=h;o=r}}if((p|0)==26){i=f;return l|0}}a:do{if(e>>>0>3>>>0){o=e;n=b;m=c[d>>2]|0;while(1){q=c[m>>2]|0;if((q|0)==0){s=o;t=n;break a}if(q>>>0>127>>>0){j=Ip(n,q,0)|0;if((j|0)==-1){l=-1;break}u=n+j|0;v=o-j|0;w=m}else{a[n]=q;u=n+1|0;v=o-1|0;w=c[d>>2]|0}q=w+4|0;c[d>>2]=q;if(v>>>0>3>>>0){o=v;n=u;m=q}else{s=v;t=u;break a}}i=f;return l|0}else{s=e;t=b}}while(0);b:do{if((s|0)==0){x=0}else{b=g|0;u=s;v=t;w=c[d>>2]|0;while(1){m=c[w>>2]|0;if((m|0)==0){p=24;break}if(m>>>0>127>>>0){n=Ip(b,m,0)|0;if((n|0)==-1){l=-1;p=26;break}if(n>>>0>u>>>0){p=20;break}Ip(v,c[w>>2]|0,0)|0;y=v+n|0;z=u-n|0;A=w}else{a[v]=m;y=v+1|0;z=u-1|0;A=c[d>>2]|0}m=A+4|0;c[d>>2]=m;if((z|0)==0){x=0;break b}else{u=z;v=y;w=m}}if((p|0)==20){l=e-u|0;i=f;return l|0}else if((p|0)==24){a[v]=0;x=u;break}else if((p|0)==26){i=f;return l|0}}}while(0);c[d>>2]=0;l=e-x|0;i=f;return l|0}function Lp(a){a=a|0;var b=0;b=a;while(1){if((c[b>>2]|0)==0){break}else{b=b+4|0}}return b-a>>2|0}function Mp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((d|0)==0){return a|0}else{e=b;f=d;g=a}while(1){d=f-1|0;c[g>>2]=c[e>>2];if((d|0)==0){break}else{e=e+4|0;f=d;g=g+4|0}}return a|0}function Np(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=(d|0)==0;if(a-b>>2>>>0<d>>>0){if(e){return a|0}else{f=d}do{f=f-1|0;c[a+(f<<2)>>2]=c[b+(f<<2)>>2];}while((f|0)!=0);return a|0}else{if(e){return a|0}else{g=b;h=d;i=a}while(1){d=h-1|0;c[i>>2]=c[g>>2];if((d|0)==0){break}else{g=g+4|0;h=d;i=i+4|0}}return a|0}return 0}function Op(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((d|0)==0){return a|0}else{e=d;f=a}while(1){d=e-1|0;c[f>>2]=b;if((d|0)==0){break}else{e=d;f=f+4|0}}return a|0}function Pp(a){a=a|0;return}function Qp(a){a=a|0;c[a>>2]=8336;return}function Rp(a){a=a|0;sq(a);return}function Sp(a){a=a|0;return}function Tp(a){a=a|0;return 2368}function Up(a){a=a|0;Pp(a|0);return}function Vp(a){a=a|0;return}function Wp(a){a=a|0;return}function Xp(a){a=a|0;Pp(a|0);sq(a);return}function Yp(a){a=a|0;Pp(a|0);sq(a);return}function Zp(a){a=a|0;Pp(a|0);sq(a);return}function _p(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+56|0;f=e|0;if((a|0)==(b|0)){g=1;i=e;return g|0}if((b|0)==0){g=0;i=e;return g|0}h=cq(b,16640,16624,-1)|0;b=h;if((h|0)==0){g=0;i=e;return g|0}Kq(f|0,0,56)|0;c[f>>2]=b;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;Nc[c[(c[h>>2]|0)+28>>2]&31](b,f,c[d>>2]|0,1);if((c[f+24>>2]|0)!=1){g=0;i=e;return g|0}c[d>>2]=c[f+16>>2];g=1;i=e;return g|0}function $p(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((c[d+8>>2]|0)!=(b|0)){return}b=d+16|0;g=c[b>>2]|0;if((g|0)==0){c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((g|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function aq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((b|0)!=(c[d+8>>2]|0)){g=c[b+8>>2]|0;Nc[c[(c[g>>2]|0)+28>>2]&31](g,d,e,f);return}g=d+16|0;b=c[g>>2]|0;if((b|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function bq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;if((b|0)==(c[d+8>>2]|0)){g=d+16|0;h=c[g>>2]|0;if((h|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}h=d+24|0;if((c[h>>2]|0)!=2){return}c[h>>2]=f;return}h=c[b+12>>2]|0;g=b+16+(h<<3)|0;i=c[b+20>>2]|0;j=i>>8;if((i&1|0)==0){k=j}else{k=c[(c[e>>2]|0)+j>>2]|0}j=c[b+16>>2]|0;Nc[c[(c[j>>2]|0)+28>>2]&31](j,d,e+k|0,(i&2|0)!=0?f:2);if((h|0)<=1){return}h=d+54|0;i=e;k=b+24|0;while(1){b=c[k+4>>2]|0;j=b>>8;if((b&1|0)==0){l=j}else{l=c[(c[i>>2]|0)+j>>2]|0}j=c[k>>2]|0;Nc[c[(c[j>>2]|0)+28>>2]&31](j,d,e+l|0,(b&2|0)!=0?f:2);if((a[h]|0)!=0){m=16;break}b=k+8|0;if(b>>>0<g>>>0){k=b}else{m=16;break}}if((m|0)==16){return}}function cq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+56|0;g=f|0;h=c[a>>2]|0;j=a+(c[h-8>>2]|0)|0;k=c[h-4>>2]|0;h=k;c[g>>2]=d;c[g+4>>2]=a;c[g+8>>2]=b;c[g+12>>2]=e;e=g+16|0;b=g+20|0;a=g+24|0;l=g+28|0;m=g+32|0;n=g+40|0;Kq(e|0,0,39)|0;if((k|0)==(d|0)){c[g+48>>2]=1;Bc[c[(c[k>>2]|0)+20>>2]&63](h,g,j,j,1,0);i=f;return((c[a>>2]|0)==1?j:0)|0}tc[c[(c[k>>2]|0)+24>>2]&15](h,g,j,1,0);j=c[g+36>>2]|0;if((j|0)==0){if((c[n>>2]|0)!=1){o=0;i=f;return o|0}if((c[l>>2]|0)!=1){o=0;i=f;return o|0}o=(c[m>>2]|0)==1?c[b>>2]|0:0;i=f;return o|0}else if((j|0)==1){do{if((c[a>>2]|0)!=1){if((c[n>>2]|0)!=0){o=0;i=f;return o|0}if((c[l>>2]|0)!=1){o=0;i=f;return o|0}if((c[m>>2]|0)==1){break}else{o=0}i=f;return o|0}}while(0);o=c[e>>2]|0;i=f;return o|0}else{o=0;i=f;return o|0}return 0}function dq(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)==(c[d>>2]|0)){do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=c[b+12>>2]|0;k=b+16+(j<<3)|0;a:do{if((j|0)>0){l=d+52|0;m=d+53|0;n=d+54|0;o=b+8|0;p=d+24|0;q=e;r=0;s=b+16|0;t=0;b:while(1){a[l]=0;a[m]=0;u=c[s+4>>2]|0;v=u>>8;if((u&1|0)==0){w=v}else{w=c[(c[q>>2]|0)+v>>2]|0}v=c[s>>2]|0;Bc[c[(c[v>>2]|0)+20>>2]&63](v,d,e,e+w|0,2-(u>>>1&1)|0,g);if((a[n]|0)!=0){x=t;y=r;break}do{if((a[m]|0)==0){z=t;A=r}else{if((a[l]|0)==0){if((c[o>>2]&1|0)==0){x=1;y=r;break b}else{z=1;A=r;break}}if((c[p>>2]|0)==1){B=27;break a}if((c[o>>2]&2|0)==0){B=27;break a}else{z=1;A=1}}}while(0);u=s+8|0;if(u>>>0<k>>>0){r=A;s=u;t=z}else{x=z;y=A;break}}if(y){C=x;B=26}else{D=x;B=23}}else{D=0;B=23}}while(0);do{if((B|0)==23){c[h>>2]=e;k=d+40|0;c[k>>2]=(c[k>>2]|0)+1;if((c[d+36>>2]|0)!=1){C=D;B=26;break}if((c[d+24>>2]|0)!=2){C=D;B=26;break}a[d+54|0]=1;if(D){B=27}else{B=28}}}while(0);if((B|0)==26){if(C){B=27}else{B=28}}if((B|0)==27){c[i>>2]=3;return}else if((B|0)==28){c[i>>2]=4;return}}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}C=c[b+12>>2]|0;D=b+16+(C<<3)|0;x=c[b+20>>2]|0;y=x>>8;if((x&1|0)==0){E=y}else{E=c[(c[e>>2]|0)+y>>2]|0}y=c[b+16>>2]|0;tc[c[(c[y>>2]|0)+24>>2]&15](y,d,e+E|0,(x&2|0)!=0?f:2,g);x=b+24|0;if((C|0)<=1){return}C=c[b+8>>2]|0;do{if((C&2|0)==0){b=d+36|0;if((c[b>>2]|0)==1){break}if((C&1|0)==0){E=d+54|0;y=e;A=x;while(1){if((a[E]|0)!=0){B=53;break}if((c[b>>2]|0)==1){B=53;break}z=c[A+4>>2]|0;w=z>>8;if((z&1|0)==0){F=w}else{F=c[(c[y>>2]|0)+w>>2]|0}w=c[A>>2]|0;tc[c[(c[w>>2]|0)+24>>2]&15](w,d,e+F|0,(z&2|0)!=0?f:2,g);z=A+8|0;if(z>>>0<D>>>0){A=z}else{B=53;break}}if((B|0)==53){return}}A=d+24|0;y=d+54|0;E=e;i=x;while(1){if((a[y]|0)!=0){B=53;break}if((c[b>>2]|0)==1){if((c[A>>2]|0)==1){B=53;break}}z=c[i+4>>2]|0;w=z>>8;if((z&1|0)==0){G=w}else{G=c[(c[E>>2]|0)+w>>2]|0}w=c[i>>2]|0;tc[c[(c[w>>2]|0)+24>>2]&15](w,d,e+G|0,(z&2|0)!=0?f:2,g);z=i+8|0;if(z>>>0<D>>>0){i=z}else{B=53;break}}if((B|0)==53){return}}}while(0);G=d+54|0;F=e;C=x;while(1){if((a[G]|0)!=0){B=53;break}x=c[C+4>>2]|0;i=x>>8;if((x&1|0)==0){H=i}else{H=c[(c[F>>2]|0)+i>>2]|0}i=c[C>>2]|0;tc[c[(c[i>>2]|0)+24>>2]&15](i,d,e+H|0,(x&2|0)!=0?f:2,g);x=C+8|0;if(x>>>0<D>>>0){C=x}else{B=53;break}}if((B|0)==53){return}}function eq(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)!=(c[d>>2]|0)){h=c[b+8>>2]|0;tc[c[(c[h>>2]|0)+24>>2]&15](h,d,e,f,g);return}do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=d+52|0;a[j]=0;k=d+53|0;a[k]=0;l=c[b+8>>2]|0;Bc[c[(c[l>>2]|0)+20>>2]&63](l,d,e,e,1,g);if((a[k]|0)==0){m=0;n=13}else{if((a[j]|0)==0){m=1;n=13}}a:do{if((n|0)==13){c[h>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){n=16;break}a[d+54|0]=1;if(m){break a}}else{n=16}}while(0);if((n|0)==16){if(m){break}}c[i>>2]=4;return}}while(0);c[i>>2]=3;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function fq(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)!=(e|0)){return}g=d+28|0;if((c[g>>2]|0)==1){return}c[g>>2]=f;return}if((c[d>>2]|0)!=(b|0)){return}do{if((c[d+16>>2]|0)!=(e|0)){b=d+20|0;if((c[b>>2]|0)==(e|0)){break}c[d+32>>2]=f;c[b>>2]=e;b=d+40|0;c[b>>2]=(c[b>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){break}a[d+54|0]=1}}while(0);c[d+44>>2]=4;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function gq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;if((b|0)!=(c[d+8>>2]|0)){i=d+52|0;j=a[i]|0;k=d+53|0;l=a[k]|0;m=c[b+12>>2]|0;n=b+16+(m<<3)|0;a[i]=0;a[k]=0;o=c[b+20>>2]|0;p=o>>8;if((o&1|0)==0){q=p}else{q=c[(c[f>>2]|0)+p>>2]|0}p=c[b+16>>2]|0;Bc[c[(c[p>>2]|0)+20>>2]&63](p,d,e,f+q|0,(o&2|0)!=0?g:2,h);a:do{if((m|0)>1){o=d+24|0;q=b+8|0;p=d+54|0;r=f;s=b+24|0;do{if((a[p]|0)!=0){break a}do{if((a[i]|0)==0){if((a[k]|0)==0){break}if((c[q>>2]&1|0)==0){break a}}else{if((c[o>>2]|0)==1){break a}if((c[q>>2]&2|0)==0){break a}}}while(0);a[i]=0;a[k]=0;t=c[s+4>>2]|0;u=t>>8;if((t&1|0)==0){v=u}else{v=c[(c[r>>2]|0)+u>>2]|0}u=c[s>>2]|0;Bc[c[(c[u>>2]|0)+20>>2]&63](u,d,e,f+v|0,(t&2|0)!=0?g:2,h);s=s+8|0;}while(s>>>0<n>>>0)}}while(0);a[i]=j;a[k]=l;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;l=c[f>>2]|0;if((l|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((l|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;l=c[e>>2]|0;if((l|0)==2){c[e>>2]=g;w=g}else{w=l}if(!((c[d+48>>2]|0)==1&(w|0)==1)){return}a[d+54|0]=1;return}function hq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;if((b|0)!=(c[d+8>>2]|0)){i=c[b+8>>2]|0;Bc[c[(c[i>>2]|0)+20>>2]&63](i,d,e,f,g,h);return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;h=c[f>>2]|0;if((h|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((h|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;h=c[e>>2]|0;if((h|0)==2){c[e>>2]=g;j=g}else{j=h}if(!((c[d+48>>2]|0)==1&(j|0)==1)){return}a[d+54|0]=1;return}function iq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;if((c[d+8>>2]|0)!=(b|0)){return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;b=c[f>>2]|0;if((b|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;b=c[e>>2]|0;if((b|0)==2){c[e>>2]=g;i=g}else{i=b}if(!((c[d+48>>2]|0)==1&(i|0)==1)){return}a[d+54|0]=1;return}function jq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0;do{if(a>>>0<245>>>0){if(a>>>0<11>>>0){b=16}else{b=a+11&-8}d=b>>>3;e=c[4482]|0;f=e>>>(d>>>0);if((f&3|0)!=0){g=(f&1^1)+d|0;h=g<<1;i=17968+(h<<2)|0;j=17968+(h+2<<2)|0;h=c[j>>2]|0;k=h+8|0;l=c[k>>2]|0;do{if((i|0)==(l|0)){c[4482]=e&~(1<<g)}else{if(l>>>0<(c[4486]|0)>>>0){$b();return 0}m=l+12|0;if((c[m>>2]|0)==(h|0)){c[m>>2]=i;c[j>>2]=l;break}else{$b();return 0}}}while(0);l=g<<3;c[h+4>>2]=l|3;j=h+(l|4)|0;c[j>>2]=c[j>>2]|1;n=k;return n|0}if(!(b>>>0>(c[4484]|0)>>>0)){o=b;break}if((f|0)!=0){j=2<<d;l=f<<d&(j|-j);j=(l&-l)-1|0;l=j>>>12&16;i=j>>>(l>>>0);j=i>>>5&8;m=i>>>(j>>>0);i=m>>>2&4;p=m>>>(i>>>0);m=p>>>1&2;q=p>>>(m>>>0);p=q>>>1&1;r=(j|l|i|m|p)+(q>>>(p>>>0))|0;p=r<<1;q=17968+(p<<2)|0;m=17968+(p+2<<2)|0;p=c[m>>2]|0;i=p+8|0;l=c[i>>2]|0;do{if((q|0)==(l|0)){c[4482]=e&~(1<<r)}else{if(l>>>0<(c[4486]|0)>>>0){$b();return 0}j=l+12|0;if((c[j>>2]|0)==(p|0)){c[j>>2]=q;c[m>>2]=l;break}else{$b();return 0}}}while(0);l=r<<3;m=l-b|0;c[p+4>>2]=b|3;q=p;e=q+b|0;c[q+(b|4)>>2]=m|1;c[q+l>>2]=m;l=c[4484]|0;if((l|0)!=0){q=c[4487]|0;d=l>>>3;l=d<<1;f=17968+(l<<2)|0;k=c[4482]|0;h=1<<d;do{if((k&h|0)==0){c[4482]=k|h;s=f;t=17968+(l+2<<2)|0}else{d=17968+(l+2<<2)|0;g=c[d>>2]|0;if(!(g>>>0<(c[4486]|0)>>>0)){s=g;t=d;break}$b();return 0}}while(0);c[t>>2]=q;c[s+12>>2]=q;c[q+8>>2]=s;c[q+12>>2]=f}c[4484]=m;c[4487]=e;n=i;return n|0}l=c[4483]|0;if((l|0)==0){o=b;break}h=(l&-l)-1|0;l=h>>>12&16;k=h>>>(l>>>0);h=k>>>5&8;p=k>>>(h>>>0);k=p>>>2&4;r=p>>>(k>>>0);p=r>>>1&2;d=r>>>(p>>>0);r=d>>>1&1;g=c[18232+((h|l|k|p|r)+(d>>>(r>>>0))<<2)>>2]|0;r=g;d=g;p=(c[g+4>>2]&-8)-b|0;while(1){g=c[r+16>>2]|0;if((g|0)==0){k=c[r+20>>2]|0;if((k|0)==0){break}else{u=k}}else{u=g}g=(c[u+4>>2]&-8)-b|0;k=g>>>0<p>>>0;r=u;d=k?u:d;p=k?g:p}r=d;i=c[4486]|0;if(r>>>0<i>>>0){$b();return 0}e=r+b|0;m=e;if(!(r>>>0<e>>>0)){$b();return 0}e=c[d+24>>2]|0;f=c[d+12>>2]|0;do{if((f|0)==(d|0)){q=d+20|0;g=c[q>>2]|0;if((g|0)==0){k=d+16|0;l=c[k>>2]|0;if((l|0)==0){v=0;break}else{w=l;x=k}}else{w=g;x=q}while(1){q=w+20|0;g=c[q>>2]|0;if((g|0)!=0){w=g;x=q;continue}q=w+16|0;g=c[q>>2]|0;if((g|0)==0){break}else{w=g;x=q}}if(x>>>0<i>>>0){$b();return 0}else{c[x>>2]=0;v=w;break}}else{q=c[d+8>>2]|0;if(q>>>0<i>>>0){$b();return 0}g=q+12|0;if((c[g>>2]|0)!=(d|0)){$b();return 0}k=f+8|0;if((c[k>>2]|0)==(d|0)){c[g>>2]=f;c[k>>2]=q;v=f;break}else{$b();return 0}}}while(0);a:do{if((e|0)!=0){f=c[d+28>>2]|0;i=18232+(f<<2)|0;do{if((d|0)==(c[i>>2]|0)){c[i>>2]=v;if((v|0)!=0){break}c[4483]=c[4483]&~(1<<f);break a}else{if(e>>>0<(c[4486]|0)>>>0){$b();return 0}q=e+16|0;if((c[q>>2]|0)==(d|0)){c[q>>2]=v}else{c[e+20>>2]=v}if((v|0)==0){break a}}}while(0);if(v>>>0<(c[4486]|0)>>>0){$b();return 0}c[v+24>>2]=e;f=c[d+16>>2]|0;do{if((f|0)!=0){if(f>>>0<(c[4486]|0)>>>0){$b();return 0}else{c[v+16>>2]=f;c[f+24>>2]=v;break}}}while(0);f=c[d+20>>2]|0;if((f|0)==0){break}if(f>>>0<(c[4486]|0)>>>0){$b();return 0}else{c[v+20>>2]=f;c[f+24>>2]=v;break}}}while(0);if(p>>>0<16>>>0){e=p+b|0;c[d+4>>2]=e|3;f=r+(e+4)|0;c[f>>2]=c[f>>2]|1}else{c[d+4>>2]=b|3;c[r+(b|4)>>2]=p|1;c[r+(p+b)>>2]=p;f=c[4484]|0;if((f|0)!=0){e=c[4487]|0;i=f>>>3;f=i<<1;q=17968+(f<<2)|0;k=c[4482]|0;g=1<<i;do{if((k&g|0)==0){c[4482]=k|g;y=q;z=17968+(f+2<<2)|0}else{i=17968+(f+2<<2)|0;l=c[i>>2]|0;if(!(l>>>0<(c[4486]|0)>>>0)){y=l;z=i;break}$b();return 0}}while(0);c[z>>2]=e;c[y+12>>2]=e;c[e+8>>2]=y;c[e+12>>2]=q}c[4484]=p;c[4487]=m}f=d+8|0;if((f|0)==0){o=b;break}else{n=f}return n|0}else{if(a>>>0>4294967231>>>0){o=-1;break}f=a+11|0;g=f&-8;k=c[4483]|0;if((k|0)==0){o=g;break}r=-g|0;i=f>>>8;do{if((i|0)==0){A=0}else{if(g>>>0>16777215>>>0){A=31;break}f=(i+1048320|0)>>>16&8;l=i<<f;h=(l+520192|0)>>>16&4;j=l<<h;l=(j+245760|0)>>>16&2;B=14-(h|f|l)+(j<<l>>>15)|0;A=g>>>((B+7|0)>>>0)&1|B<<1}}while(0);i=c[18232+(A<<2)>>2]|0;b:do{if((i|0)==0){C=0;D=r;E=0}else{if((A|0)==31){F=0}else{F=25-(A>>>1)|0}d=0;m=r;p=i;q=g<<F;e=0;while(1){B=c[p+4>>2]&-8;l=B-g|0;if(l>>>0<m>>>0){if((B|0)==(g|0)){C=p;D=l;E=p;break b}else{G=p;H=l}}else{G=d;H=m}l=c[p+20>>2]|0;B=c[p+16+(q>>>31<<2)>>2]|0;j=(l|0)==0|(l|0)==(B|0)?e:l;if((B|0)==0){C=G;D=H;E=j;break}else{d=G;m=H;p=B;q=q<<1;e=j}}}}while(0);if((E|0)==0&(C|0)==0){i=2<<A;r=k&(i|-i);if((r|0)==0){o=g;break}i=(r&-r)-1|0;r=i>>>12&16;e=i>>>(r>>>0);i=e>>>5&8;q=e>>>(i>>>0);e=q>>>2&4;p=q>>>(e>>>0);q=p>>>1&2;m=p>>>(q>>>0);p=m>>>1&1;I=c[18232+((i|r|e|q|p)+(m>>>(p>>>0))<<2)>>2]|0}else{I=E}if((I|0)==0){J=D;K=C}else{p=I;m=D;q=C;while(1){e=(c[p+4>>2]&-8)-g|0;r=e>>>0<m>>>0;i=r?e:m;e=r?p:q;r=c[p+16>>2]|0;if((r|0)!=0){p=r;m=i;q=e;continue}r=c[p+20>>2]|0;if((r|0)==0){J=i;K=e;break}else{p=r;m=i;q=e}}}if((K|0)==0){o=g;break}if(!(J>>>0<((c[4484]|0)-g|0)>>>0)){o=g;break}q=K;m=c[4486]|0;if(q>>>0<m>>>0){$b();return 0}p=q+g|0;k=p;if(!(q>>>0<p>>>0)){$b();return 0}e=c[K+24>>2]|0;i=c[K+12>>2]|0;do{if((i|0)==(K|0)){r=K+20|0;d=c[r>>2]|0;if((d|0)==0){j=K+16|0;B=c[j>>2]|0;if((B|0)==0){L=0;break}else{M=B;N=j}}else{M=d;N=r}while(1){r=M+20|0;d=c[r>>2]|0;if((d|0)!=0){M=d;N=r;continue}r=M+16|0;d=c[r>>2]|0;if((d|0)==0){break}else{M=d;N=r}}if(N>>>0<m>>>0){$b();return 0}else{c[N>>2]=0;L=M;break}}else{r=c[K+8>>2]|0;if(r>>>0<m>>>0){$b();return 0}d=r+12|0;if((c[d>>2]|0)!=(K|0)){$b();return 0}j=i+8|0;if((c[j>>2]|0)==(K|0)){c[d>>2]=i;c[j>>2]=r;L=i;break}else{$b();return 0}}}while(0);c:do{if((e|0)!=0){i=c[K+28>>2]|0;m=18232+(i<<2)|0;do{if((K|0)==(c[m>>2]|0)){c[m>>2]=L;if((L|0)!=0){break}c[4483]=c[4483]&~(1<<i);break c}else{if(e>>>0<(c[4486]|0)>>>0){$b();return 0}r=e+16|0;if((c[r>>2]|0)==(K|0)){c[r>>2]=L}else{c[e+20>>2]=L}if((L|0)==0){break c}}}while(0);if(L>>>0<(c[4486]|0)>>>0){$b();return 0}c[L+24>>2]=e;i=c[K+16>>2]|0;do{if((i|0)!=0){if(i>>>0<(c[4486]|0)>>>0){$b();return 0}else{c[L+16>>2]=i;c[i+24>>2]=L;break}}}while(0);i=c[K+20>>2]|0;if((i|0)==0){break}if(i>>>0<(c[4486]|0)>>>0){$b();return 0}else{c[L+20>>2]=i;c[i+24>>2]=L;break}}}while(0);do{if(J>>>0<16>>>0){e=J+g|0;c[K+4>>2]=e|3;i=q+(e+4)|0;c[i>>2]=c[i>>2]|1}else{c[K+4>>2]=g|3;c[q+(g|4)>>2]=J|1;c[q+(J+g)>>2]=J;i=J>>>3;if(J>>>0<256>>>0){e=i<<1;m=17968+(e<<2)|0;r=c[4482]|0;j=1<<i;do{if((r&j|0)==0){c[4482]=r|j;O=m;P=17968+(e+2<<2)|0}else{i=17968+(e+2<<2)|0;d=c[i>>2]|0;if(!(d>>>0<(c[4486]|0)>>>0)){O=d;P=i;break}$b();return 0}}while(0);c[P>>2]=k;c[O+12>>2]=k;c[q+(g+8)>>2]=O;c[q+(g+12)>>2]=m;break}e=p;j=J>>>8;do{if((j|0)==0){Q=0}else{if(J>>>0>16777215>>>0){Q=31;break}r=(j+1048320|0)>>>16&8;i=j<<r;d=(i+520192|0)>>>16&4;B=i<<d;i=(B+245760|0)>>>16&2;l=14-(d|r|i)+(B<<i>>>15)|0;Q=J>>>((l+7|0)>>>0)&1|l<<1}}while(0);j=18232+(Q<<2)|0;c[q+(g+28)>>2]=Q;c[q+(g+20)>>2]=0;c[q+(g+16)>>2]=0;m=c[4483]|0;l=1<<Q;if((m&l|0)==0){c[4483]=m|l;c[j>>2]=e;c[q+(g+24)>>2]=j;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}if((Q|0)==31){R=0}else{R=25-(Q>>>1)|0}l=J<<R;m=c[j>>2]|0;while(1){if((c[m+4>>2]&-8|0)==(J|0)){break}S=m+16+(l>>>31<<2)|0;j=c[S>>2]|0;if((j|0)==0){T=151;break}else{l=l<<1;m=j}}if((T|0)==151){if(S>>>0<(c[4486]|0)>>>0){$b();return 0}else{c[S>>2]=e;c[q+(g+24)>>2]=m;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}}l=m+8|0;j=c[l>>2]|0;i=c[4486]|0;if(m>>>0<i>>>0){$b();return 0}if(j>>>0<i>>>0){$b();return 0}else{c[j+12>>2]=e;c[l>>2]=e;c[q+(g+8)>>2]=j;c[q+(g+12)>>2]=m;c[q+(g+24)>>2]=0;break}}}while(0);q=K+8|0;if((q|0)==0){o=g;break}else{n=q}return n|0}}while(0);K=c[4484]|0;if(!(o>>>0>K>>>0)){S=K-o|0;J=c[4487]|0;if(S>>>0>15>>>0){R=J;c[4487]=R+o;c[4484]=S;c[R+(o+4)>>2]=S|1;c[R+K>>2]=S;c[J+4>>2]=o|3}else{c[4484]=0;c[4487]=0;c[J+4>>2]=K|3;S=J+(K+4)|0;c[S>>2]=c[S>>2]|1}n=J+8|0;return n|0}J=c[4485]|0;if(o>>>0<J>>>0){S=J-o|0;c[4485]=S;J=c[4488]|0;K=J;c[4488]=K+o;c[K+(o+4)>>2]=S|1;c[J+4>>2]=o|3;n=J+8|0;return n|0}do{if((c[4284]|0)==0){J=Gb(30)|0;if((J-1&J|0)==0){c[4286]=J;c[4285]=J;c[4287]=-1;c[4288]=-1;c[4289]=0;c[4593]=0;c[4284]=(rc(0)|0)&-16^1431655768;break}else{$b();return 0}}}while(0);J=o+48|0;S=c[4286]|0;K=o+47|0;R=S+K|0;Q=-S|0;S=R&Q;if(!(S>>>0>o>>>0)){n=0;return n|0}O=c[4592]|0;do{if((O|0)!=0){P=c[4590]|0;L=P+S|0;if(L>>>0<=P>>>0|L>>>0>O>>>0){n=0}else{break}return n|0}}while(0);d:do{if((c[4593]&4|0)==0){O=c[4488]|0;e:do{if((O|0)==0){T=181}else{L=O;P=18376;while(1){U=P|0;M=c[U>>2]|0;if(!(M>>>0>L>>>0)){V=P+4|0;if((M+(c[V>>2]|0)|0)>>>0>L>>>0){break}}M=c[P+8>>2]|0;if((M|0)==0){T=181;break e}else{P=M}}if((P|0)==0){T=181;break}L=R-(c[4485]|0)&Q;if(!(L>>>0<2147483647>>>0)){W=0;break}m=Ob(L|0)|0;e=(m|0)==((c[U>>2]|0)+(c[V>>2]|0)|0);X=e?m:-1;Y=e?L:0;Z=m;_=L;T=190}}while(0);do{if((T|0)==181){O=Ob(0)|0;if((O|0)==-1){W=0;break}g=O;L=c[4285]|0;m=L-1|0;if((m&g|0)==0){$=S}else{$=S-g+(m+g&-L)|0}L=c[4590]|0;g=L+$|0;if(!($>>>0>o>>>0&$>>>0<2147483647>>>0)){W=0;break}m=c[4592]|0;if((m|0)!=0){if(g>>>0<=L>>>0|g>>>0>m>>>0){W=0;break}}m=Ob($|0)|0;g=(m|0)==(O|0);X=g?O:-1;Y=g?$:0;Z=m;_=$;T=190}}while(0);f:do{if((T|0)==190){m=-_|0;if(!((X|0)==-1)){aa=Y;ba=X;T=201;break d}do{if((Z|0)!=-1&_>>>0<2147483647>>>0&_>>>0<J>>>0){g=c[4286]|0;O=K-_+g&-g;if(!(O>>>0<2147483647>>>0)){ca=_;break}if((Ob(O|0)|0)==-1){Ob(m|0)|0;W=Y;break f}else{ca=O+_|0;break}}else{ca=_}}while(0);if((Z|0)==-1){W=Y}else{aa=ca;ba=Z;T=201;break d}}}while(0);c[4593]=c[4593]|4;da=W;T=198}else{da=0;T=198}}while(0);do{if((T|0)==198){if(!(S>>>0<2147483647>>>0)){break}W=Ob(S|0)|0;Z=Ob(0)|0;if(!((Z|0)!=-1&(W|0)!=-1&W>>>0<Z>>>0)){break}ca=Z-W|0;Z=ca>>>0>(o+40|0)>>>0;Y=Z?W:-1;if(!((Y|0)==-1)){aa=Z?ca:da;ba=Y;T=201}}}while(0);do{if((T|0)==201){da=(c[4590]|0)+aa|0;c[4590]=da;if(da>>>0>(c[4591]|0)>>>0){c[4591]=da}da=c[4488]|0;g:do{if((da|0)==0){S=c[4486]|0;if((S|0)==0|ba>>>0<S>>>0){c[4486]=ba}c[4594]=ba;c[4595]=aa;c[4597]=0;c[4491]=c[4284];c[4490]=-1;S=0;do{Y=S<<1;ca=17968+(Y<<2)|0;c[17968+(Y+3<<2)>>2]=ca;c[17968+(Y+2<<2)>>2]=ca;S=S+1|0;}while(S>>>0<32>>>0);S=ba+8|0;if((S&7|0)==0){ea=0}else{ea=-S&7}S=aa-40-ea|0;c[4488]=ba+ea;c[4485]=S;c[ba+(ea+4)>>2]=S|1;c[ba+(aa-36)>>2]=40;c[4489]=c[4288]}else{S=18376;while(1){fa=c[S>>2]|0;ga=S+4|0;ha=c[ga>>2]|0;if((ba|0)==(fa+ha|0)){T=213;break}ca=c[S+8>>2]|0;if((ca|0)==0){break}else{S=ca}}do{if((T|0)==213){if((c[S+12>>2]&8|0)!=0){break}ca=da;if(!(ca>>>0>=fa>>>0&ca>>>0<ba>>>0)){break}c[ga>>2]=ha+aa;Y=(c[4485]|0)+aa|0;Z=da+8|0;if((Z&7|0)==0){ia=0}else{ia=-Z&7}Z=Y-ia|0;c[4488]=ca+ia;c[4485]=Z;c[ca+(ia+4)>>2]=Z|1;c[ca+(Y+4)>>2]=40;c[4489]=c[4288];break g}}while(0);if(ba>>>0<(c[4486]|0)>>>0){c[4486]=ba}S=ba+aa|0;Y=18376;while(1){ja=Y|0;if((c[ja>>2]|0)==(S|0)){T=223;break}ca=c[Y+8>>2]|0;if((ca|0)==0){break}else{Y=ca}}do{if((T|0)==223){if((c[Y+12>>2]&8|0)!=0){break}c[ja>>2]=ba;S=Y+4|0;c[S>>2]=(c[S>>2]|0)+aa;S=ba+8|0;if((S&7|0)==0){ka=0}else{ka=-S&7}S=ba+(aa+8)|0;if((S&7|0)==0){la=0}else{la=-S&7}S=ba+(la+aa)|0;ca=S;Z=ka+o|0;W=ba+Z|0;_=W;K=S-(ba+ka)-o|0;c[ba+(ka+4)>>2]=o|3;do{if((ca|0)==(c[4488]|0)){J=(c[4485]|0)+K|0;c[4485]=J;c[4488]=_;c[ba+(Z+4)>>2]=J|1}else{if((ca|0)==(c[4487]|0)){J=(c[4484]|0)+K|0;c[4484]=J;c[4487]=_;c[ba+(Z+4)>>2]=J|1;c[ba+(J+Z)>>2]=J;break}J=aa+4|0;X=c[ba+(J+la)>>2]|0;if((X&3|0)==1){$=X&-8;V=X>>>3;h:do{if(X>>>0<256>>>0){U=c[ba+((la|8)+aa)>>2]|0;Q=c[ba+(aa+12+la)>>2]|0;R=17968+(V<<1<<2)|0;do{if((U|0)!=(R|0)){if(U>>>0<(c[4486]|0)>>>0){$b();return 0}if((c[U+12>>2]|0)==(ca|0)){break}$b();return 0}}while(0);if((Q|0)==(U|0)){c[4482]=c[4482]&~(1<<V);break}do{if((Q|0)==(R|0)){ma=Q+8|0}else{if(Q>>>0<(c[4486]|0)>>>0){$b();return 0}m=Q+8|0;if((c[m>>2]|0)==(ca|0)){ma=m;break}$b();return 0}}while(0);c[U+12>>2]=Q;c[ma>>2]=U}else{R=S;m=c[ba+((la|24)+aa)>>2]|0;P=c[ba+(aa+12+la)>>2]|0;do{if((P|0)==(R|0)){O=la|16;g=ba+(J+O)|0;L=c[g>>2]|0;if((L|0)==0){e=ba+(O+aa)|0;O=c[e>>2]|0;if((O|0)==0){na=0;break}else{oa=O;pa=e}}else{oa=L;pa=g}while(1){g=oa+20|0;L=c[g>>2]|0;if((L|0)!=0){oa=L;pa=g;continue}g=oa+16|0;L=c[g>>2]|0;if((L|0)==0){break}else{oa=L;pa=g}}if(pa>>>0<(c[4486]|0)>>>0){$b();return 0}else{c[pa>>2]=0;na=oa;break}}else{g=c[ba+((la|8)+aa)>>2]|0;if(g>>>0<(c[4486]|0)>>>0){$b();return 0}L=g+12|0;if((c[L>>2]|0)!=(R|0)){$b();return 0}e=P+8|0;if((c[e>>2]|0)==(R|0)){c[L>>2]=P;c[e>>2]=g;na=P;break}else{$b();return 0}}}while(0);if((m|0)==0){break}P=c[ba+(aa+28+la)>>2]|0;U=18232+(P<<2)|0;do{if((R|0)==(c[U>>2]|0)){c[U>>2]=na;if((na|0)!=0){break}c[4483]=c[4483]&~(1<<P);break h}else{if(m>>>0<(c[4486]|0)>>>0){$b();return 0}Q=m+16|0;if((c[Q>>2]|0)==(R|0)){c[Q>>2]=na}else{c[m+20>>2]=na}if((na|0)==0){break h}}}while(0);if(na>>>0<(c[4486]|0)>>>0){$b();return 0}c[na+24>>2]=m;R=la|16;P=c[ba+(R+aa)>>2]|0;do{if((P|0)!=0){if(P>>>0<(c[4486]|0)>>>0){$b();return 0}else{c[na+16>>2]=P;c[P+24>>2]=na;break}}}while(0);P=c[ba+(J+R)>>2]|0;if((P|0)==0){break}if(P>>>0<(c[4486]|0)>>>0){$b();return 0}else{c[na+20>>2]=P;c[P+24>>2]=na;break}}}while(0);qa=ba+(($|la)+aa)|0;ra=$+K|0}else{qa=ca;ra=K}J=qa+4|0;c[J>>2]=c[J>>2]&-2;c[ba+(Z+4)>>2]=ra|1;c[ba+(ra+Z)>>2]=ra;J=ra>>>3;if(ra>>>0<256>>>0){V=J<<1;X=17968+(V<<2)|0;P=c[4482]|0;m=1<<J;do{if((P&m|0)==0){c[4482]=P|m;sa=X;ta=17968+(V+2<<2)|0}else{J=17968+(V+2<<2)|0;U=c[J>>2]|0;if(!(U>>>0<(c[4486]|0)>>>0)){sa=U;ta=J;break}$b();return 0}}while(0);c[ta>>2]=_;c[sa+12>>2]=_;c[ba+(Z+8)>>2]=sa;c[ba+(Z+12)>>2]=X;break}V=W;m=ra>>>8;do{if((m|0)==0){ua=0}else{if(ra>>>0>16777215>>>0){ua=31;break}P=(m+1048320|0)>>>16&8;$=m<<P;J=($+520192|0)>>>16&4;U=$<<J;$=(U+245760|0)>>>16&2;Q=14-(J|P|$)+(U<<$>>>15)|0;ua=ra>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=18232+(ua<<2)|0;c[ba+(Z+28)>>2]=ua;c[ba+(Z+20)>>2]=0;c[ba+(Z+16)>>2]=0;X=c[4483]|0;Q=1<<ua;if((X&Q|0)==0){c[4483]=X|Q;c[m>>2]=V;c[ba+(Z+24)>>2]=m;c[ba+(Z+12)>>2]=V;c[ba+(Z+8)>>2]=V;break}if((ua|0)==31){va=0}else{va=25-(ua>>>1)|0}Q=ra<<va;X=c[m>>2]|0;while(1){if((c[X+4>>2]&-8|0)==(ra|0)){break}wa=X+16+(Q>>>31<<2)|0;m=c[wa>>2]|0;if((m|0)==0){T=296;break}else{Q=Q<<1;X=m}}if((T|0)==296){if(wa>>>0<(c[4486]|0)>>>0){$b();return 0}else{c[wa>>2]=V;c[ba+(Z+24)>>2]=X;c[ba+(Z+12)>>2]=V;c[ba+(Z+8)>>2]=V;break}}Q=X+8|0;m=c[Q>>2]|0;$=c[4486]|0;if(X>>>0<$>>>0){$b();return 0}if(m>>>0<$>>>0){$b();return 0}else{c[m+12>>2]=V;c[Q>>2]=V;c[ba+(Z+8)>>2]=m;c[ba+(Z+12)>>2]=X;c[ba+(Z+24)>>2]=0;break}}}while(0);n=ba+(ka|8)|0;return n|0}}while(0);Y=da;Z=18376;while(1){xa=c[Z>>2]|0;if(!(xa>>>0>Y>>>0)){ya=c[Z+4>>2]|0;za=xa+ya|0;if(za>>>0>Y>>>0){break}}Z=c[Z+8>>2]|0}Z=xa+(ya-39)|0;if((Z&7|0)==0){Aa=0}else{Aa=-Z&7}Z=xa+(ya-47+Aa)|0;W=Z>>>0<(da+16|0)>>>0?Y:Z;Z=W+8|0;_=ba+8|0;if((_&7|0)==0){Ba=0}else{Ba=-_&7}_=aa-40-Ba|0;c[4488]=ba+Ba;c[4485]=_;c[ba+(Ba+4)>>2]=_|1;c[ba+(aa-36)>>2]=40;c[4489]=c[4288];c[W+4>>2]=27;c[Z>>2]=c[4594];c[Z+4>>2]=c[4595];c[Z+8>>2]=c[4596];c[Z+12>>2]=c[4597];c[4594]=ba;c[4595]=aa;c[4597]=0;c[4596]=Z;Z=W+28|0;c[Z>>2]=7;if((W+32|0)>>>0<za>>>0){_=Z;while(1){Z=_+4|0;c[Z>>2]=7;if((_+8|0)>>>0<za>>>0){_=Z}else{break}}}if((W|0)==(Y|0)){break}_=W-da|0;Z=Y+(_+4)|0;c[Z>>2]=c[Z>>2]&-2;c[da+4>>2]=_|1;c[Y+_>>2]=_;Z=_>>>3;if(_>>>0<256>>>0){K=Z<<1;ca=17968+(K<<2)|0;S=c[4482]|0;m=1<<Z;do{if((S&m|0)==0){c[4482]=S|m;Ca=ca;Da=17968+(K+2<<2)|0}else{Z=17968+(K+2<<2)|0;Q=c[Z>>2]|0;if(!(Q>>>0<(c[4486]|0)>>>0)){Ca=Q;Da=Z;break}$b();return 0}}while(0);c[Da>>2]=da;c[Ca+12>>2]=da;c[da+8>>2]=Ca;c[da+12>>2]=ca;break}K=da;m=_>>>8;do{if((m|0)==0){Ea=0}else{if(_>>>0>16777215>>>0){Ea=31;break}S=(m+1048320|0)>>>16&8;Y=m<<S;W=(Y+520192|0)>>>16&4;Z=Y<<W;Y=(Z+245760|0)>>>16&2;Q=14-(W|S|Y)+(Z<<Y>>>15)|0;Ea=_>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=18232+(Ea<<2)|0;c[da+28>>2]=Ea;c[da+20>>2]=0;c[da+16>>2]=0;ca=c[4483]|0;Q=1<<Ea;if((ca&Q|0)==0){c[4483]=ca|Q;c[m>>2]=K;c[da+24>>2]=m;c[da+12>>2]=da;c[da+8>>2]=da;break}if((Ea|0)==31){Fa=0}else{Fa=25-(Ea>>>1)|0}Q=_<<Fa;ca=c[m>>2]|0;while(1){if((c[ca+4>>2]&-8|0)==(_|0)){break}Ga=ca+16+(Q>>>31<<2)|0;m=c[Ga>>2]|0;if((m|0)==0){T=331;break}else{Q=Q<<1;ca=m}}if((T|0)==331){if(Ga>>>0<(c[4486]|0)>>>0){$b();return 0}else{c[Ga>>2]=K;c[da+24>>2]=ca;c[da+12>>2]=da;c[da+8>>2]=da;break}}Q=ca+8|0;_=c[Q>>2]|0;m=c[4486]|0;if(ca>>>0<m>>>0){$b();return 0}if(_>>>0<m>>>0){$b();return 0}else{c[_+12>>2]=K;c[Q>>2]=K;c[da+8>>2]=_;c[da+12>>2]=ca;c[da+24>>2]=0;break}}}while(0);da=c[4485]|0;if(!(da>>>0>o>>>0)){break}_=da-o|0;c[4485]=_;da=c[4488]|0;Q=da;c[4488]=Q+o;c[Q+(o+4)>>2]=_|1;c[da+4>>2]=o|3;n=da+8|0;return n|0}}while(0);c[(Pb()|0)>>2]=12;n=0;return n|0}function kq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;if((a|0)==0){return}b=a-8|0;d=b;e=c[4486]|0;if(b>>>0<e>>>0){$b()}f=c[a-4>>2]|0;g=f&3;if((g|0)==1){$b()}h=f&-8;i=a+(h-8)|0;j=i;a:do{if((f&1|0)==0){k=c[b>>2]|0;if((g|0)==0){return}l=-8-k|0;m=a+l|0;n=m;o=k+h|0;if(m>>>0<e>>>0){$b()}if((n|0)==(c[4487]|0)){p=a+(h-4)|0;if((c[p>>2]&3|0)!=3){q=n;r=o;break}c[4484]=o;c[p>>2]=c[p>>2]&-2;c[a+(l+4)>>2]=o|1;c[i>>2]=o;return}p=k>>>3;if(k>>>0<256>>>0){k=c[a+(l+8)>>2]|0;s=c[a+(l+12)>>2]|0;t=17968+(p<<1<<2)|0;do{if((k|0)!=(t|0)){if(k>>>0<e>>>0){$b()}if((c[k+12>>2]|0)==(n|0)){break}$b()}}while(0);if((s|0)==(k|0)){c[4482]=c[4482]&~(1<<p);q=n;r=o;break}do{if((s|0)==(t|0)){u=s+8|0}else{if(s>>>0<e>>>0){$b()}v=s+8|0;if((c[v>>2]|0)==(n|0)){u=v;break}$b()}}while(0);c[k+12>>2]=s;c[u>>2]=k;q=n;r=o;break}t=m;p=c[a+(l+24)>>2]|0;v=c[a+(l+12)>>2]|0;do{if((v|0)==(t|0)){w=a+(l+20)|0;x=c[w>>2]|0;if((x|0)==0){y=a+(l+16)|0;z=c[y>>2]|0;if((z|0)==0){A=0;break}else{B=z;C=y}}else{B=x;C=w}while(1){w=B+20|0;x=c[w>>2]|0;if((x|0)!=0){B=x;C=w;continue}w=B+16|0;x=c[w>>2]|0;if((x|0)==0){break}else{B=x;C=w}}if(C>>>0<e>>>0){$b()}else{c[C>>2]=0;A=B;break}}else{w=c[a+(l+8)>>2]|0;if(w>>>0<e>>>0){$b()}x=w+12|0;if((c[x>>2]|0)!=(t|0)){$b()}y=v+8|0;if((c[y>>2]|0)==(t|0)){c[x>>2]=v;c[y>>2]=w;A=v;break}else{$b()}}}while(0);if((p|0)==0){q=n;r=o;break}v=c[a+(l+28)>>2]|0;m=18232+(v<<2)|0;do{if((t|0)==(c[m>>2]|0)){c[m>>2]=A;if((A|0)!=0){break}c[4483]=c[4483]&~(1<<v);q=n;r=o;break a}else{if(p>>>0<(c[4486]|0)>>>0){$b()}k=p+16|0;if((c[k>>2]|0)==(t|0)){c[k>>2]=A}else{c[p+20>>2]=A}if((A|0)==0){q=n;r=o;break a}}}while(0);if(A>>>0<(c[4486]|0)>>>0){$b()}c[A+24>>2]=p;t=c[a+(l+16)>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[4486]|0)>>>0){$b()}else{c[A+16>>2]=t;c[t+24>>2]=A;break}}}while(0);t=c[a+(l+20)>>2]|0;if((t|0)==0){q=n;r=o;break}if(t>>>0<(c[4486]|0)>>>0){$b()}else{c[A+20>>2]=t;c[t+24>>2]=A;q=n;r=o;break}}else{q=d;r=h}}while(0);d=q;if(!(d>>>0<i>>>0)){$b()}A=a+(h-4)|0;e=c[A>>2]|0;if((e&1|0)==0){$b()}do{if((e&2|0)==0){if((j|0)==(c[4488]|0)){B=(c[4485]|0)+r|0;c[4485]=B;c[4488]=q;c[q+4>>2]=B|1;if((q|0)!=(c[4487]|0)){return}c[4487]=0;c[4484]=0;return}if((j|0)==(c[4487]|0)){B=(c[4484]|0)+r|0;c[4484]=B;c[4487]=q;c[q+4>>2]=B|1;c[d+B>>2]=B;return}B=(e&-8)+r|0;C=e>>>3;b:do{if(e>>>0<256>>>0){u=c[a+h>>2]|0;g=c[a+(h|4)>>2]|0;b=17968+(C<<1<<2)|0;do{if((u|0)!=(b|0)){if(u>>>0<(c[4486]|0)>>>0){$b()}if((c[u+12>>2]|0)==(j|0)){break}$b()}}while(0);if((g|0)==(u|0)){c[4482]=c[4482]&~(1<<C);break}do{if((g|0)==(b|0)){D=g+8|0}else{if(g>>>0<(c[4486]|0)>>>0){$b()}f=g+8|0;if((c[f>>2]|0)==(j|0)){D=f;break}$b()}}while(0);c[u+12>>2]=g;c[D>>2]=u}else{b=i;f=c[a+(h+16)>>2]|0;t=c[a+(h|4)>>2]|0;do{if((t|0)==(b|0)){p=a+(h+12)|0;v=c[p>>2]|0;if((v|0)==0){m=a+(h+8)|0;k=c[m>>2]|0;if((k|0)==0){E=0;break}else{F=k;G=m}}else{F=v;G=p}while(1){p=F+20|0;v=c[p>>2]|0;if((v|0)!=0){F=v;G=p;continue}p=F+16|0;v=c[p>>2]|0;if((v|0)==0){break}else{F=v;G=p}}if(G>>>0<(c[4486]|0)>>>0){$b()}else{c[G>>2]=0;E=F;break}}else{p=c[a+h>>2]|0;if(p>>>0<(c[4486]|0)>>>0){$b()}v=p+12|0;if((c[v>>2]|0)!=(b|0)){$b()}m=t+8|0;if((c[m>>2]|0)==(b|0)){c[v>>2]=t;c[m>>2]=p;E=t;break}else{$b()}}}while(0);if((f|0)==0){break}t=c[a+(h+20)>>2]|0;u=18232+(t<<2)|0;do{if((b|0)==(c[u>>2]|0)){c[u>>2]=E;if((E|0)!=0){break}c[4483]=c[4483]&~(1<<t);break b}else{if(f>>>0<(c[4486]|0)>>>0){$b()}g=f+16|0;if((c[g>>2]|0)==(b|0)){c[g>>2]=E}else{c[f+20>>2]=E}if((E|0)==0){break b}}}while(0);if(E>>>0<(c[4486]|0)>>>0){$b()}c[E+24>>2]=f;b=c[a+(h+8)>>2]|0;do{if((b|0)!=0){if(b>>>0<(c[4486]|0)>>>0){$b()}else{c[E+16>>2]=b;c[b+24>>2]=E;break}}}while(0);b=c[a+(h+12)>>2]|0;if((b|0)==0){break}if(b>>>0<(c[4486]|0)>>>0){$b()}else{c[E+20>>2]=b;c[b+24>>2]=E;break}}}while(0);c[q+4>>2]=B|1;c[d+B>>2]=B;if((q|0)!=(c[4487]|0)){H=B;break}c[4484]=B;return}else{c[A>>2]=e&-2;c[q+4>>2]=r|1;c[d+r>>2]=r;H=r}}while(0);r=H>>>3;if(H>>>0<256>>>0){d=r<<1;e=17968+(d<<2)|0;A=c[4482]|0;E=1<<r;do{if((A&E|0)==0){c[4482]=A|E;I=e;J=17968+(d+2<<2)|0}else{r=17968+(d+2<<2)|0;h=c[r>>2]|0;if(!(h>>>0<(c[4486]|0)>>>0)){I=h;J=r;break}$b()}}while(0);c[J>>2]=q;c[I+12>>2]=q;c[q+8>>2]=I;c[q+12>>2]=e;return}e=q;I=H>>>8;do{if((I|0)==0){K=0}else{if(H>>>0>16777215>>>0){K=31;break}J=(I+1048320|0)>>>16&8;d=I<<J;E=(d+520192|0)>>>16&4;A=d<<E;d=(A+245760|0)>>>16&2;r=14-(E|J|d)+(A<<d>>>15)|0;K=H>>>((r+7|0)>>>0)&1|r<<1}}while(0);I=18232+(K<<2)|0;c[q+28>>2]=K;c[q+20>>2]=0;c[q+16>>2]=0;r=c[4483]|0;d=1<<K;do{if((r&d|0)==0){c[4483]=r|d;c[I>>2]=e;c[q+24>>2]=I;c[q+12>>2]=q;c[q+8>>2]=q}else{if((K|0)==31){L=0}else{L=25-(K>>>1)|0}A=H<<L;J=c[I>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(H|0)){break}M=J+16+(A>>>31<<2)|0;E=c[M>>2]|0;if((E|0)==0){N=129;break}else{A=A<<1;J=E}}if((N|0)==129){if(M>>>0<(c[4486]|0)>>>0){$b()}else{c[M>>2]=e;c[q+24>>2]=J;c[q+12>>2]=q;c[q+8>>2]=q;break}}A=J+8|0;B=c[A>>2]|0;E=c[4486]|0;if(J>>>0<E>>>0){$b()}if(B>>>0<E>>>0){$b()}else{c[B+12>>2]=e;c[A>>2]=e;c[q+8>>2]=B;c[q+12>>2]=J;c[q+24>>2]=0;break}}}while(0);q=(c[4490]|0)-1|0;c[4490]=q;if((q|0)==0){O=18384}else{return}while(1){q=c[O>>2]|0;if((q|0)==0){break}else{O=q+8|0}}c[4490]=-1;return}function lq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if((a|0)==0){d=jq(b)|0;return d|0}if(b>>>0>4294967231>>>0){c[(Pb()|0)>>2]=12;d=0;return d|0}if(b>>>0<11>>>0){e=16}else{e=b+11&-8}f=mq(a-8|0,e)|0;if((f|0)!=0){d=f+8|0;return d|0}f=jq(b)|0;if((f|0)==0){d=0;return d|0}e=c[a-4>>2]|0;g=(e&-8)-((e&3|0)==0?8:4)|0;Iq(f|0,a|0,g>>>0<b>>>0?g:b)|0;kq(a);d=f;return d|0}function mq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a;h=g+f|0;i=h;j=c[4486]|0;if(g>>>0<j>>>0){$b();return 0}k=e&3;if(!((k|0)!=1&g>>>0<h>>>0)){$b();return 0}l=g+(f|4)|0;m=c[l>>2]|0;if((m&1|0)==0){$b();return 0}if((k|0)==0){if(b>>>0<256>>>0){n=0;return n|0}do{if(!(f>>>0<(b+4|0)>>>0)){if((f-b|0)>>>0>c[4286]<<1>>>0){break}else{n=a}return n|0}}while(0);n=0;return n|0}if(!(f>>>0<b>>>0)){k=f-b|0;if(!(k>>>0>15>>>0)){n=a;return n|0}c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|3;c[l>>2]=c[l>>2]|1;pq(g+b|0,k);n=a;return n|0}if((i|0)==(c[4488]|0)){k=(c[4485]|0)+f|0;if(!(k>>>0>b>>>0)){n=0;return n|0}l=k-b|0;c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=l|1;c[4488]=g+b;c[4485]=l;n=a;return n|0}if((i|0)==(c[4487]|0)){l=(c[4484]|0)+f|0;if(l>>>0<b>>>0){n=0;return n|0}k=l-b|0;if(k>>>0>15>>>0){c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|1;c[g+l>>2]=k;o=g+(l+4)|0;c[o>>2]=c[o>>2]&-2;p=g+b|0;q=k}else{c[d>>2]=e&1|l|2;e=g+(l+4)|0;c[e>>2]=c[e>>2]|1;p=0;q=0}c[4484]=q;c[4487]=p;n=a;return n|0}if((m&2|0)!=0){n=0;return n|0}p=(m&-8)+f|0;if(p>>>0<b>>>0){n=0;return n|0}q=p-b|0;e=m>>>3;a:do{if(m>>>0<256>>>0){l=c[g+(f+8)>>2]|0;k=c[g+(f+12)>>2]|0;o=17968+(e<<1<<2)|0;do{if((l|0)!=(o|0)){if(l>>>0<j>>>0){$b();return 0}if((c[l+12>>2]|0)==(i|0)){break}$b();return 0}}while(0);if((k|0)==(l|0)){c[4482]=c[4482]&~(1<<e);break}do{if((k|0)==(o|0)){r=k+8|0}else{if(k>>>0<j>>>0){$b();return 0}s=k+8|0;if((c[s>>2]|0)==(i|0)){r=s;break}$b();return 0}}while(0);c[l+12>>2]=k;c[r>>2]=l}else{o=h;s=c[g+(f+24)>>2]|0;t=c[g+(f+12)>>2]|0;do{if((t|0)==(o|0)){u=g+(f+20)|0;v=c[u>>2]|0;if((v|0)==0){w=g+(f+16)|0;x=c[w>>2]|0;if((x|0)==0){y=0;break}else{z=x;A=w}}else{z=v;A=u}while(1){u=z+20|0;v=c[u>>2]|0;if((v|0)!=0){z=v;A=u;continue}u=z+16|0;v=c[u>>2]|0;if((v|0)==0){break}else{z=v;A=u}}if(A>>>0<j>>>0){$b();return 0}else{c[A>>2]=0;y=z;break}}else{u=c[g+(f+8)>>2]|0;if(u>>>0<j>>>0){$b();return 0}v=u+12|0;if((c[v>>2]|0)!=(o|0)){$b();return 0}w=t+8|0;if((c[w>>2]|0)==(o|0)){c[v>>2]=t;c[w>>2]=u;y=t;break}else{$b();return 0}}}while(0);if((s|0)==0){break}t=c[g+(f+28)>>2]|0;l=18232+(t<<2)|0;do{if((o|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[4483]=c[4483]&~(1<<t);break a}else{if(s>>>0<(c[4486]|0)>>>0){$b();return 0}k=s+16|0;if((c[k>>2]|0)==(o|0)){c[k>>2]=y}else{c[s+20>>2]=y}if((y|0)==0){break a}}}while(0);if(y>>>0<(c[4486]|0)>>>0){$b();return 0}c[y+24>>2]=s;o=c[g+(f+16)>>2]|0;do{if((o|0)!=0){if(o>>>0<(c[4486]|0)>>>0){$b();return 0}else{c[y+16>>2]=o;c[o+24>>2]=y;break}}}while(0);o=c[g+(f+20)>>2]|0;if((o|0)==0){break}if(o>>>0<(c[4486]|0)>>>0){$b();return 0}else{c[y+20>>2]=o;c[o+24>>2]=y;break}}}while(0);if(q>>>0<16>>>0){c[d>>2]=p|c[d>>2]&1|2;y=g+(p|4)|0;c[y>>2]=c[y>>2]|1;n=a;return n|0}else{c[d>>2]=c[d>>2]&1|b|2;c[g+(b+4)>>2]=q|3;d=g+(p|4)|0;c[d>>2]=c[d>>2]|1;pq(g+b|0,q);n=a;return n|0}return 0}function nq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a>>>0<16>>>0?16:a;if((d-1&d|0)==0){e=d}else{a=16;while(1){if(a>>>0<d>>>0){a=a<<1}else{e=a;break}}}if(!((-64-e|0)>>>0>b>>>0)){c[(Pb()|0)>>2]=12;f=0;return f|0}if(b>>>0<11>>>0){g=16}else{g=b+11&-8}b=jq(e+12+g|0)|0;if((b|0)==0){f=0;return f|0}a=b-8|0;d=a;h=e-1|0;do{if((b&h|0)==0){i=d}else{j=b+h&-e;k=j-8|0;l=a;if((k-l|0)>>>0>15>>>0){m=k}else{m=j+(e-8)|0}j=m;k=m-l|0;l=b-4|0;n=c[l>>2]|0;o=(n&-8)-k|0;if((n&3|0)==0){c[m>>2]=(c[a>>2]|0)+k;c[m+4>>2]=o;i=j;break}else{n=m+4|0;c[n>>2]=o|c[n>>2]&1|2;n=m+(o+4)|0;c[n>>2]=c[n>>2]|1;c[l>>2]=k|c[l>>2]&1|2;l=b+(k-4)|0;c[l>>2]=c[l>>2]|1;pq(d,k);i=j;break}}}while(0);d=i+4|0;b=c[d>>2]|0;do{if((b&3|0)!=0){m=b&-8;if(!(m>>>0>(g+16|0)>>>0)){break}a=m-g|0;e=i;c[d>>2]=g|b&1|2;c[e+(g|4)>>2]=a|3;h=e+(m|4)|0;c[h>>2]=c[h>>2]|1;pq(e+g|0,a)}}while(0);f=i+8|0;return f|0}function oq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;do{if((b|0)==8){e=jq(d)|0}else{f=b>>>2;if((b&3|0)!=0|(f|0)==0){g=22;return g|0}if((f+1073741823&f|0)!=0){g=22;return g|0}if((-64-b|0)>>>0<d>>>0){g=12;return g|0}else{e=nq(b>>>0<16>>>0?16:b,d)|0;break}}}while(0);if((e|0)==0){g=12;return g|0}c[a>>2]=e;g=0;return g|0}function pq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=a;e=d+b|0;f=e;g=c[a+4>>2]|0;a:do{if((g&1|0)==0){h=c[a>>2]|0;if((g&3|0)==0){return}i=d+(-h|0)|0;j=i;k=h+b|0;l=c[4486]|0;if(i>>>0<l>>>0){$b()}if((j|0)==(c[4487]|0)){m=d+(b+4)|0;if((c[m>>2]&3|0)!=3){n=j;o=k;break}c[4484]=k;c[m>>2]=c[m>>2]&-2;c[d+(4-h)>>2]=k|1;c[e>>2]=k;return}m=h>>>3;if(h>>>0<256>>>0){p=c[d+(8-h)>>2]|0;q=c[d+(12-h)>>2]|0;r=17968+(m<<1<<2)|0;do{if((p|0)!=(r|0)){if(p>>>0<l>>>0){$b()}if((c[p+12>>2]|0)==(j|0)){break}$b()}}while(0);if((q|0)==(p|0)){c[4482]=c[4482]&~(1<<m);n=j;o=k;break}do{if((q|0)==(r|0)){s=q+8|0}else{if(q>>>0<l>>>0){$b()}t=q+8|0;if((c[t>>2]|0)==(j|0)){s=t;break}$b()}}while(0);c[p+12>>2]=q;c[s>>2]=p;n=j;o=k;break}r=i;m=c[d+(24-h)>>2]|0;t=c[d+(12-h)>>2]|0;do{if((t|0)==(r|0)){u=16-h|0;v=d+(u+4)|0;w=c[v>>2]|0;if((w|0)==0){x=d+u|0;u=c[x>>2]|0;if((u|0)==0){y=0;break}else{z=u;A=x}}else{z=w;A=v}while(1){v=z+20|0;w=c[v>>2]|0;if((w|0)!=0){z=w;A=v;continue}v=z+16|0;w=c[v>>2]|0;if((w|0)==0){break}else{z=w;A=v}}if(A>>>0<l>>>0){$b()}else{c[A>>2]=0;y=z;break}}else{v=c[d+(8-h)>>2]|0;if(v>>>0<l>>>0){$b()}w=v+12|0;if((c[w>>2]|0)!=(r|0)){$b()}x=t+8|0;if((c[x>>2]|0)==(r|0)){c[w>>2]=t;c[x>>2]=v;y=t;break}else{$b()}}}while(0);if((m|0)==0){n=j;o=k;break}t=c[d+(28-h)>>2]|0;l=18232+(t<<2)|0;do{if((r|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[4483]=c[4483]&~(1<<t);n=j;o=k;break a}else{if(m>>>0<(c[4486]|0)>>>0){$b()}i=m+16|0;if((c[i>>2]|0)==(r|0)){c[i>>2]=y}else{c[m+20>>2]=y}if((y|0)==0){n=j;o=k;break a}}}while(0);if(y>>>0<(c[4486]|0)>>>0){$b()}c[y+24>>2]=m;r=16-h|0;t=c[d+r>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[4486]|0)>>>0){$b()}else{c[y+16>>2]=t;c[t+24>>2]=y;break}}}while(0);t=c[d+(r+4)>>2]|0;if((t|0)==0){n=j;o=k;break}if(t>>>0<(c[4486]|0)>>>0){$b()}else{c[y+20>>2]=t;c[t+24>>2]=y;n=j;o=k;break}}else{n=a;o=b}}while(0);a=c[4486]|0;if(e>>>0<a>>>0){$b()}y=d+(b+4)|0;z=c[y>>2]|0;do{if((z&2|0)==0){if((f|0)==(c[4488]|0)){A=(c[4485]|0)+o|0;c[4485]=A;c[4488]=n;c[n+4>>2]=A|1;if((n|0)!=(c[4487]|0)){return}c[4487]=0;c[4484]=0;return}if((f|0)==(c[4487]|0)){A=(c[4484]|0)+o|0;c[4484]=A;c[4487]=n;c[n+4>>2]=A|1;c[n+A>>2]=A;return}A=(z&-8)+o|0;s=z>>>3;b:do{if(z>>>0<256>>>0){g=c[d+(b+8)>>2]|0;t=c[d+(b+12)>>2]|0;h=17968+(s<<1<<2)|0;do{if((g|0)!=(h|0)){if(g>>>0<a>>>0){$b()}if((c[g+12>>2]|0)==(f|0)){break}$b()}}while(0);if((t|0)==(g|0)){c[4482]=c[4482]&~(1<<s);break}do{if((t|0)==(h|0)){B=t+8|0}else{if(t>>>0<a>>>0){$b()}m=t+8|0;if((c[m>>2]|0)==(f|0)){B=m;break}$b()}}while(0);c[g+12>>2]=t;c[B>>2]=g}else{h=e;m=c[d+(b+24)>>2]|0;l=c[d+(b+12)>>2]|0;do{if((l|0)==(h|0)){i=d+(b+20)|0;p=c[i>>2]|0;if((p|0)==0){q=d+(b+16)|0;v=c[q>>2]|0;if((v|0)==0){C=0;break}else{D=v;E=q}}else{D=p;E=i}while(1){i=D+20|0;p=c[i>>2]|0;if((p|0)!=0){D=p;E=i;continue}i=D+16|0;p=c[i>>2]|0;if((p|0)==0){break}else{D=p;E=i}}if(E>>>0<a>>>0){$b()}else{c[E>>2]=0;C=D;break}}else{i=c[d+(b+8)>>2]|0;if(i>>>0<a>>>0){$b()}p=i+12|0;if((c[p>>2]|0)!=(h|0)){$b()}q=l+8|0;if((c[q>>2]|0)==(h|0)){c[p>>2]=l;c[q>>2]=i;C=l;break}else{$b()}}}while(0);if((m|0)==0){break}l=c[d+(b+28)>>2]|0;g=18232+(l<<2)|0;do{if((h|0)==(c[g>>2]|0)){c[g>>2]=C;if((C|0)!=0){break}c[4483]=c[4483]&~(1<<l);break b}else{if(m>>>0<(c[4486]|0)>>>0){$b()}t=m+16|0;if((c[t>>2]|0)==(h|0)){c[t>>2]=C}else{c[m+20>>2]=C}if((C|0)==0){break b}}}while(0);if(C>>>0<(c[4486]|0)>>>0){$b()}c[C+24>>2]=m;h=c[d+(b+16)>>2]|0;do{if((h|0)!=0){if(h>>>0<(c[4486]|0)>>>0){$b()}else{c[C+16>>2]=h;c[h+24>>2]=C;break}}}while(0);h=c[d+(b+20)>>2]|0;if((h|0)==0){break}if(h>>>0<(c[4486]|0)>>>0){$b()}else{c[C+20>>2]=h;c[h+24>>2]=C;break}}}while(0);c[n+4>>2]=A|1;c[n+A>>2]=A;if((n|0)!=(c[4487]|0)){F=A;break}c[4484]=A;return}else{c[y>>2]=z&-2;c[n+4>>2]=o|1;c[n+o>>2]=o;F=o}}while(0);o=F>>>3;if(F>>>0<256>>>0){z=o<<1;y=17968+(z<<2)|0;C=c[4482]|0;b=1<<o;do{if((C&b|0)==0){c[4482]=C|b;G=y;H=17968+(z+2<<2)|0}else{o=17968+(z+2<<2)|0;d=c[o>>2]|0;if(!(d>>>0<(c[4486]|0)>>>0)){G=d;H=o;break}$b()}}while(0);c[H>>2]=n;c[G+12>>2]=n;c[n+8>>2]=G;c[n+12>>2]=y;return}y=n;G=F>>>8;do{if((G|0)==0){I=0}else{if(F>>>0>16777215>>>0){I=31;break}H=(G+1048320|0)>>>16&8;z=G<<H;b=(z+520192|0)>>>16&4;C=z<<b;z=(C+245760|0)>>>16&2;o=14-(b|H|z)+(C<<z>>>15)|0;I=F>>>((o+7|0)>>>0)&1|o<<1}}while(0);G=18232+(I<<2)|0;c[n+28>>2]=I;c[n+20>>2]=0;c[n+16>>2]=0;o=c[4483]|0;z=1<<I;if((o&z|0)==0){c[4483]=o|z;c[G>>2]=y;c[n+24>>2]=G;c[n+12>>2]=n;c[n+8>>2]=n;return}if((I|0)==31){J=0}else{J=25-(I>>>1)|0}I=F<<J;J=c[G>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(F|0)){break}K=J+16+(I>>>31<<2)|0;G=c[K>>2]|0;if((G|0)==0){L=126;break}else{I=I<<1;J=G}}if((L|0)==126){if(K>>>0<(c[4486]|0)>>>0){$b()}c[K>>2]=y;c[n+24>>2]=J;c[n+12>>2]=n;c[n+8>>2]=n;return}K=J+8|0;L=c[K>>2]|0;I=c[4486]|0;if(J>>>0<I>>>0){$b()}if(L>>>0<I>>>0){$b()}c[L+12>>2]=y;c[K>>2]=y;c[n+8>>2]=L;c[n+12>>2]=J;c[n+24>>2]=0;return}function qq(a){a=a|0;var b=0,d=0,e=0;b=(a|0)==0?1:a;while(1){d=jq(b)|0;if((d|0)!=0){e=10;break}a=(H=c[5480]|0,c[5480]=H+0,H);if((a|0)==0){break}Kc[a&1]()}if((e|0)==10){return d|0}d=ic(4)|0;c[d>>2]=8304;Cb(d|0,14936,184);return 0}function rq(a){a=a|0;return qq(a)|0}function sq(a){a=a|0;if((a|0)==0){return}kq(a);return}function tq(a){a=a|0;sq(a);return}function uq(a){a=a|0;c[a>>2]=8304;return}function vq(a){a=a|0;sq(a);return}function wq(a){a=a|0;return}function xq(a){a=a|0;return 3520}function yq(){var a=0;a=ic(4)|0;c[a>>2]=8304;Cb(a|0,14936,184)}function zq(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0.0,S=0.0,T=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,ga=0,ha=0.0,ia=0.0,ja=0,ka=0,la=0.0,ma=0.0,na=0,oa=0.0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0.0,ya=0,za=0.0,Aa=0,Ba=0.0,Ca=0,Da=0,Ea=0,Fa=0.0,Ga=0,Ha=0.0,Ia=0.0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0.0,Ac=0,Bc=0,Cc=0.0,Dc=0.0,Ec=0.0,Fc=0.0,Gc=0.0,Hc=0.0,Ic=0.0,Jc=0,Kc=0,Lc=0.0,Mc=0,Nc=0;g=i;i=i+512|0;h=g|0;if((e|0)==1){j=-1074;k=53}else if((e|0)==2){j=-1074;k=53}else if((e|0)==0){j=-149;k=24}else{l=0.0;i=g;return+l}e=b+4|0;m=b+100|0;do{n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;o=d[n]|0}else{o=Cq(b)|0}}while((Qa(o|0)|0)!=0);do{if((o|0)==45|(o|0)==43){n=1-(((o|0)==45)<<1)|0;p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;q=d[p]|0;r=n;break}else{q=Cq(b)|0;r=n;break}}else{q=o;r=1}}while(0);o=0;n=q;while(1){if((n|32|0)!=(a[1200+o|0]|0)){s=o;t=n;break}do{if(o>>>0<7>>>0){q=c[e>>2]|0;if(q>>>0<(c[m>>2]|0)>>>0){c[e>>2]=q+1;w=d[q]|0;break}else{w=Cq(b)|0;break}}else{w=n}}while(0);q=o+1|0;if(q>>>0<8>>>0){o=q;n=w}else{s=q;t=w;break}}do{if((s|0)==3){x=23}else if((s|0)!=8){w=(f|0)==0;if(!(s>>>0<4>>>0|w)){if((s|0)==8){break}else{x=23;break}}do{if((s|0)==0){if((t|32|0)==110){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;y=d[n]|0}else{y=Cq(b)|0}if((y|32|0)!=97){break}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;z=d[n]|0}else{z=Cq(b)|0}if((z|32|0)!=110){break}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;A=d[n]|0}else{A=Cq(b)|0}if((A|0)==40){B=1}else{if((c[m>>2]|0)==0){l=+u;i=g;return+l}c[e>>2]=(c[e>>2]|0)-1;l=+u;i=g;return+l}while(1){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;C=d[n]|0}else{C=Cq(b)|0}if(!((C-48|0)>>>0<10>>>0|(C-65|0)>>>0<26>>>0)){if(!((C-97|0)>>>0<26>>>0|(C|0)==95)){break}}B=B+1|0}if((C|0)==41){l=+u;i=g;return+l}n=(c[m>>2]|0)==0;if(!n){c[e>>2]=(c[e>>2]|0)-1}if(w){c[(Pb()|0)>>2]=22;Bq(b,0);l=0.0;i=g;return+l}if((B|0)==0|n){l=+u;i=g;return+l}else{D=B}while(1){n=D-1|0;c[e>>2]=(c[e>>2]|0)-1;if((n|0)==0){l=+u;break}else{D=n}}i=g;return+l}do{if((t|0)==48){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;E=d[n]|0}else{E=Cq(b)|0}if((E|32|0)!=120){if((c[m>>2]|0)==0){F=48;break}c[e>>2]=(c[e>>2]|0)-1;F=48;break}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;G=d[n]|0;H=0}else{G=Cq(b)|0;H=0}while(1){if((G|0)==46){x=68;break}else if((G|0)!=48){I=G;K=0;L=0;M=0;N=0;O=H;P=0;Q=0;R=1.0;S=0.0;T=0;break}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;G=d[n]|0;H=1;continue}else{G=Cq(b)|0;H=1;continue}}a:do{if((x|0)==68){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;V=d[n]|0}else{V=Cq(b)|0}if((V|0)==48){W=-1;X=-1}else{I=V;K=0;L=0;M=0;N=0;O=H;P=1;Q=0;R=1.0;S=0.0;T=0;break}while(1){n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;Y=d[n]|0}else{Y=Cq(b)|0}if((Y|0)!=48){I=Y;K=0;L=0;M=W;N=X;O=1;P=1;Q=0;R=1.0;S=0.0;T=0;break a}n=Nq(X,W,-1,-1)|0;W=J;X=n}}}while(0);b:while(1){n=I-48|0;do{if(n>>>0<10>>>0){Z=n;x=82}else{o=I|32;q=(I|0)==46;if(!((o-97|0)>>>0<6>>>0|q)){_=I;break b}if(q){if((P|0)==0){$=K;aa=L;ba=K;ca=L;da=O;ea=1;ga=Q;ha=R;ia=S;ja=T;break}else{_=46;break b}}else{Z=(I|0)>57?o-87|0:n;x=82;break}}}while(0);if((x|0)==82){x=0;n=0;do{if((K|0)<(n|0)|(K|0)==(n|0)&L>>>0<8>>>0){ka=Q;la=R;ma=S;na=Z+(T<<4)|0}else{o=0;if((K|0)<(o|0)|(K|0)==(o|0)&L>>>0<14>>>0){oa=R*.0625;ka=Q;la=oa;ma=S+oa*+(Z|0);na=T;break}if(!((Z|0)!=0&(Q|0)==0)){ka=Q;la=R;ma=S;na=T;break}ka=1;la=R;ma=S+R*.5;na=T}}while(0);n=Nq(L,K,1,0)|0;$=J;aa=n;ba=M;ca=N;da=1;ea=P;ga=ka;ha=la;ia=ma;ja=na}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;I=d[n]|0;K=$;L=aa;M=ba;N=ca;O=da;P=ea;Q=ga;R=ha;S=ia;T=ja;continue}else{I=Cq(b)|0;K=$;L=aa;M=ba;N=ca;O=da;P=ea;Q=ga;R=ha;S=ia;T=ja;continue}}if((O|0)==0){n=(c[m>>2]|0)==0;if(!n){c[e>>2]=(c[e>>2]|0)-1}do{if(w){Bq(b,0)}else{if(n){break}o=c[e>>2]|0;c[e>>2]=o-1;if((P|0)==0){break}c[e>>2]=o-2}}while(0);l=+(r|0)*0.0;i=g;return+l}n=(P|0)==0;o=n?L:N;q=n?K:M;n=0;if((K|0)<(n|0)|(K|0)==(n|0)&L>>>0<8>>>0){n=T;p=K;pa=L;while(1){qa=n<<4;ra=Nq(pa,p,1,0)|0;sa=J;ta=0;if((sa|0)<(ta|0)|(sa|0)==(ta|0)&ra>>>0<8>>>0){n=qa;p=sa;pa=ra}else{ua=qa;break}}}else{ua=T}do{if((_|32|0)==112){pa=Aq(b,f)|0;p=J;if(!((pa|0)==0&(p|0)==(-2147483648|0))){va=p;wa=pa;break}if(w){Bq(b,0);l=0.0;i=g;return+l}else{if((c[m>>2]|0)==0){va=0;wa=0;break}c[e>>2]=(c[e>>2]|0)-1;va=0;wa=0;break}}else{if((c[m>>2]|0)==0){va=0;wa=0;break}c[e>>2]=(c[e>>2]|0)-1;va=0;wa=0}}while(0);pa=Nq(o<<2|0>>>30,q<<2|o>>>30,-32,-1)|0;p=Nq(pa,J,wa,va)|0;pa=J;if((ua|0)==0){l=+(r|0)*0.0;i=g;return+l}n=0;if((pa|0)>(n|0)|(pa|0)==(n|0)&p>>>0>(-j|0)>>>0){c[(Pb()|0)>>2]=34;l=+(r|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+l}n=j-106|0;qa=(n|0)<0|0?-1:0;if((pa|0)<(qa|0)|(pa|0)==(qa|0)&p>>>0<n>>>0){c[(Pb()|0)>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+l}if((ua|0)>-1){n=ua;oa=S;qa=pa;ra=p;while(1){sa=n<<1;if(oa<.5){xa=oa;ya=sa}else{xa=oa+-1.0;ya=sa|1}za=oa+xa;sa=Nq(ra,qa,-1,-1)|0;ta=J;if((ya|0)>-1){n=ya;oa=za;qa=ta;ra=sa}else{Aa=ya;Ba=za;Ca=ta;Da=sa;break}}}else{Aa=ua;Ba=S;Ca=pa;Da=p}ra=0;qa=Oq(32,0,j,(j|0)<0|0?-1:0)|0;n=Nq(Da,Ca,qa,J)|0;qa=J;if((ra|0)>(qa|0)|(ra|0)==(qa|0)&k>>>0>n>>>0){qa=n;Ea=(qa|0)<0?0:qa}else{Ea=k}do{if((Ea|0)<53){oa=+(r|0);za=+zb(+(+Dq(1.0,84-Ea|0)),+oa);if(!((Ea|0)<32&Ba!=0.0)){Fa=Ba;Ga=Aa;Ha=za;Ia=oa;break}qa=Aa&1;Fa=(qa|0)==0?0.0:Ba;Ga=(qa^1)+Aa|0;Ha=za;Ia=oa}else{Fa=Ba;Ga=Aa;Ha=0.0;Ia=+(r|0)}}while(0);oa=Ia*Fa+(Ha+Ia*+(Ga>>>0>>>0))-Ha;if(!(oa!=0.0)){c[(Pb()|0)>>2]=34}l=+Eq(oa,Da);i=g;return+l}else{F=t}}while(0);p=j+k|0;pa=3-p|0;qa=F;n=0;while(1){if((qa|0)==46){x=137;break}else if((qa|0)!=48){Ja=qa;Ka=0;La=n;Ma=0;Na=0;break}ra=c[e>>2]|0;if(ra>>>0<(c[m>>2]|0)>>>0){c[e>>2]=ra+1;qa=d[ra]|0;n=1;continue}else{qa=Cq(b)|0;n=1;continue}}c:do{if((x|0)==137){qa=c[e>>2]|0;if(qa>>>0<(c[m>>2]|0)>>>0){c[e>>2]=qa+1;Oa=d[qa]|0}else{Oa=Cq(b)|0}if((Oa|0)==48){Pa=-1;Ra=-1}else{Ja=Oa;Ka=1;La=n;Ma=0;Na=0;break}while(1){qa=c[e>>2]|0;if(qa>>>0<(c[m>>2]|0)>>>0){c[e>>2]=qa+1;Sa=d[qa]|0}else{Sa=Cq(b)|0}if((Sa|0)!=48){Ja=Sa;Ka=1;La=1;Ma=Pa;Na=Ra;break c}qa=Nq(Ra,Pa,-1,-1)|0;Pa=J;Ra=qa}}}while(0);n=h|0;c[n>>2]=0;qa=Ja-48|0;ra=(Ja|0)==46;d:do{if(qa>>>0<10>>>0|ra){o=h+496|0;q=Ma;sa=Na;ta=0;Ta=0;Ua=0;Va=La;Wa=Ka;Xa=0;Ya=0;_a=Ja;$a=qa;ab=ra;while(1){do{if(ab){if((Wa|0)==0){bb=Ya;cb=Xa;db=1;eb=Va;fb=Ua;gb=ta;hb=Ta;ib=ta;jb=Ta}else{kb=q;lb=sa;mb=ta;nb=Ta;ob=Ua;pb=Va;qb=Xa;rb=Ya;sb=_a;break d}}else{tb=Nq(Ta,ta,1,0)|0;ub=J;vb=(_a|0)!=48;if((Xa|0)>=125){if(!vb){bb=Ya;cb=Xa;db=Wa;eb=Va;fb=Ua;gb=ub;hb=tb;ib=q;jb=sa;break}c[o>>2]=c[o>>2]|1;bb=Ya;cb=Xa;db=Wa;eb=Va;fb=Ua;gb=ub;hb=tb;ib=q;jb=sa;break}wb=h+(Xa<<2)|0;if((Ya|0)==0){xb=$a}else{xb=_a-48+((c[wb>>2]|0)*10|0)|0}c[wb>>2]=xb;wb=Ya+1|0;yb=(wb|0)==9;bb=yb?0:wb;cb=(yb&1)+Xa|0;db=Wa;eb=1;fb=vb?tb:Ua;gb=ub;hb=tb;ib=q;jb=sa}}while(0);tb=c[e>>2]|0;if(tb>>>0<(c[m>>2]|0)>>>0){c[e>>2]=tb+1;Ab=d[tb]|0}else{Ab=Cq(b)|0}tb=Ab-48|0;ub=(Ab|0)==46;if(tb>>>0<10>>>0|ub){q=ib;sa=jb;ta=gb;Ta=hb;Ua=fb;Va=eb;Wa=db;Xa=cb;Ya=bb;_a=Ab;$a=tb;ab=ub}else{Bb=ib;Cb=jb;Db=gb;Eb=hb;Fb=fb;Gb=eb;Hb=db;Ib=cb;Jb=bb;Kb=Ab;x=160;break}}}else{Bb=Ma;Cb=Na;Db=0;Eb=0;Fb=0;Gb=La;Hb=Ka;Ib=0;Jb=0;Kb=Ja;x=160}}while(0);if((x|0)==160){ra=(Hb|0)==0;kb=ra?Db:Bb;lb=ra?Eb:Cb;mb=Db;nb=Eb;ob=Fb;pb=Gb;qb=Ib;rb=Jb;sb=Kb}ra=(pb|0)!=0;do{if(ra){if((sb|32|0)!=101){x=169;break}qa=Aq(b,f)|0;ab=J;do{if((qa|0)==0&(ab|0)==(-2147483648|0)){if(w){Bq(b,0);l=0.0;i=g;return+l}else{if((c[m>>2]|0)==0){Lb=0;Mb=0;break}c[e>>2]=(c[e>>2]|0)-1;Lb=0;Mb=0;break}}else{Lb=ab;Mb=qa}}while(0);qa=Nq(Mb,Lb,lb,kb)|0;Nb=J;Ob=qa}else{x=169}}while(0);do{if((x|0)==169){if(!((sb|0)>-1)){Nb=kb;Ob=lb;break}if((c[m>>2]|0)==0){Nb=kb;Ob=lb;break}c[e>>2]=(c[e>>2]|0)-1;Nb=kb;Ob=lb}}while(0);if(!ra){c[(Pb()|0)>>2]=22;Bq(b,0);l=0.0;i=g;return+l}qa=c[n>>2]|0;if((qa|0)==0){l=+(r|0)*0.0;i=g;return+l}ab=0;do{if((Ob|0)==(nb|0)&(Nb|0)==(mb|0)&((mb|0)<(ab|0)|(mb|0)==(ab|0)&nb>>>0<10>>>0)){if(!(k>>>0>30>>>0)){if((qa>>>(k>>>0)|0)!=0){break}}l=+(r|0)*+(qa>>>0>>>0);i=g;return+l}}while(0);qa=(j|0)/-2|0;ab=(qa|0)<0|0?-1:0;if((Nb|0)>(ab|0)|(Nb|0)==(ab|0)&Ob>>>0>qa>>>0){c[(Pb()|0)>>2]=34;l=+(r|0)*1.7976931348623157e+308*1.7976931348623157e+308;i=g;return+l}qa=j-106|0;ab=(qa|0)<0|0?-1:0;if((Nb|0)<(ab|0)|(Nb|0)==(ab|0)&Ob>>>0<qa>>>0){c[(Pb()|0)>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return+l}if((rb|0)==0){Qb=qb}else{if((rb|0)<9){qa=h+(qb<<2)|0;ab=rb;ra=c[qa>>2]|0;do{ra=ra*10|0;ab=ab+1|0;}while((ab|0)<9);c[qa>>2]=ra}Qb=qb+1|0}ab=Ob;do{if((ob|0)<9){if(!((ob|0)<=(ab|0)&(ab|0)<18)){break}if((ab|0)==9){l=+(r|0)*+((c[n>>2]|0)>>>0>>>0);i=g;return+l}if((ab|0)<9){l=+(r|0)*+((c[n>>2]|0)>>>0>>>0)/+(c[16+(8-ab<<2)>>2]|0);i=g;return+l}$a=k+27+(ab*-3|0)|0;_a=c[n>>2]|0;if(($a|0)<=30){if((_a>>>($a>>>0)|0)!=0){break}}l=+(r|0)*+(_a>>>0>>>0)*+(c[16+(ab-10<<2)>>2]|0);i=g;return+l}}while(0);n=(ab|0)%9|0;if((n|0)==0){Rb=0;Sb=Qb;Tb=0;Ub=ab}else{ra=(ab|0)>-1?n:n+9|0;n=c[16+(8-ra<<2)>>2]|0;do{if((Qb|0)==0){Vb=0;Wb=0;Xb=ab}else{qa=1e9/(n|0)|0;_a=ab;$a=0;Ya=0;Xa=0;while(1){Wa=h+(Ya<<2)|0;Va=c[Wa>>2]|0;Ua=((Va>>>0)/(n>>>0)|0)+Xa|0;c[Wa>>2]=Ua;Yb=fa((Va>>>0)%(n>>>0)|0,qa)|0;Va=Ya+1|0;if((Ya|0)==($a|0)&(Ua|0)==0){Zb=Va&127;_b=_a-9|0}else{Zb=$a;_b=_a}if((Va|0)==(Qb|0)){break}else{_a=_b;$a=Zb;Ya=Va;Xa=Yb}}if((Yb|0)==0){Vb=Qb;Wb=Zb;Xb=_b;break}c[h+(Qb<<2)>>2]=Yb;Vb=Qb+1|0;Wb=Zb;Xb=_b}}while(0);Rb=Wb;Sb=Vb;Tb=0;Ub=9-ra+Xb|0}e:while(1){n=h+(Rb<<2)|0;if((Ub|0)<18){ab=Sb;Xa=Tb;while(1){Ya=0;$a=ab+127|0;_a=ab;while(1){qa=$a&127;Va=h+(qa<<2)|0;Ua=c[Va>>2]|0;Wa=Nq(Ua<<29|0>>>3,0<<29|Ua>>>3,Ya,0)|0;Ua=J;Ta=0;if(Ua>>>0>Ta>>>0|Ua>>>0==Ta>>>0&Wa>>>0>1e9>>>0){Ta=Yq(Wa,Ua,1e9,0)|0;ta=Zq(Wa,Ua,1e9,0)|0;$b=Ta;ac=ta}else{$b=0;ac=Wa}c[Va>>2]=ac;Va=(qa|0)==(Rb|0);if((qa|0)!=(_a+127&127|0)|Va){bc=_a}else{bc=(ac|0)==0?qa:_a}if(Va){break}else{Ya=$b;$a=qa-1|0;_a=bc}}_a=Xa-29|0;if(($b|0)==0){ab=bc;Xa=_a}else{cc=_a;dc=bc;ec=$b;break}}}else{if((Ub|0)==18){fc=Sb;gc=Tb}else{hc=Rb;ic=Sb;jc=Tb;kc=Ub;break}while(1){if(!((c[n>>2]|0)>>>0<9007199>>>0)){hc=Rb;ic=fc;jc=gc;kc=18;break e}Xa=0;ab=fc+127|0;_a=fc;while(1){$a=ab&127;Ya=h+($a<<2)|0;qa=c[Ya>>2]|0;Va=Nq(qa<<29|0>>>3,0<<29|qa>>>3,Xa,0)|0;qa=J;Wa=0;if(qa>>>0>Wa>>>0|qa>>>0==Wa>>>0&Va>>>0>1e9>>>0){Wa=Yq(Va,qa,1e9,0)|0;ta=Zq(Va,qa,1e9,0)|0;lc=Wa;mc=ta}else{lc=0;mc=Va}c[Ya>>2]=mc;Ya=($a|0)==(Rb|0);if(($a|0)!=(_a+127&127|0)|Ya){nc=_a}else{nc=(mc|0)==0?$a:_a}if(Ya){break}else{Xa=lc;ab=$a-1|0;_a=nc}}_a=gc-29|0;if((lc|0)==0){fc=nc;gc=_a}else{cc=_a;dc=nc;ec=lc;break}}}n=Rb+127&127;if((n|0)==(dc|0)){_a=dc+127&127;ab=h+((dc+126&127)<<2)|0;c[ab>>2]=c[ab>>2]|c[h+(_a<<2)>>2];oc=_a}else{oc=dc}c[h+(n<<2)>>2]=ec;Rb=n;Sb=oc;Tb=cc;Ub=Ub+9|0}f:while(1){pc=ic+1&127;ra=h+((ic+127&127)<<2)|0;n=hc;_a=jc;ab=kc;while(1){Xa=(ab|0)==18;$a=(ab|0)>27?9:1;qc=n;rc=_a;while(1){Ya=0;while(1){if((Ya|0)>=2){sc=Ya;break}Va=Ya+qc&127;if((Va|0)==(ic|0)){sc=2;break}ta=c[h+(Va<<2)>>2]|0;Va=c[8+(Ya<<2)>>2]|0;if(ta>>>0<Va>>>0){sc=2;break}if(ta>>>0>Va>>>0){sc=Ya;break}else{Ya=Ya+1|0}}if((sc|0)==2&Xa){break f}tc=$a+rc|0;if((qc|0)==(ic|0)){qc=ic;rc=tc}else{break}}Xa=(1<<$a)-1|0;Ya=1e9>>>($a>>>0);uc=ab;vc=qc;Va=qc;wc=0;do{ta=h+(Va<<2)|0;Wa=c[ta>>2]|0;qa=(Wa>>>($a>>>0))+wc|0;c[ta>>2]=qa;wc=fa(Wa&Xa,Ya)|0;Wa=(Va|0)==(vc|0)&(qa|0)==0;Va=Va+1&127;uc=Wa?uc-9|0:uc;vc=Wa?Va:vc;}while((Va|0)!=(ic|0));if((wc|0)==0){n=vc;_a=tc;ab=uc;continue}if((pc|0)!=(vc|0)){break}c[ra>>2]=c[ra>>2]|1;n=vc;_a=tc;ab=uc}c[h+(ic<<2)>>2]=wc;hc=vc;ic=pc;jc=tc;kc=uc}ab=qc&127;if((ab|0)==(ic|0)){c[h+(pc-1<<2)>>2]=0;xc=pc}else{xc=ic}oa=+((c[h+(ab<<2)>>2]|0)>>>0>>>0);ab=qc+1&127;if((ab|0)==(xc|0)){_a=xc+1&127;c[h+(_a-1<<2)>>2]=0;yc=_a}else{yc=xc}za=+(r|0);zc=za*(oa*1.0e9+ +((c[h+(ab<<2)>>2]|0)>>>0>>>0));ab=rc+53|0;_a=ab-j|0;if((_a|0)<(k|0)){Ac=(_a|0)<0?0:_a;Bc=1}else{Ac=k;Bc=0}if((Ac|0)<53){oa=+zb(+(+Dq(1.0,105-Ac|0)),+zc);Cc=+Za(+zc,+(+Dq(1.0,53-Ac|0)));Dc=oa;Ec=Cc;Fc=oa+(zc-Cc)}else{Dc=0.0;Ec=0.0;Fc=zc}n=qc+2&127;do{if((n|0)==(yc|0)){Gc=Ec}else{ra=c[h+(n<<2)>>2]|0;do{if(ra>>>0<5e8>>>0){if((ra|0)==0){if((qc+3&127|0)==(yc|0)){Hc=Ec;break}}Hc=za*.25+Ec}else{if(ra>>>0>5e8>>>0){Hc=za*.75+Ec;break}if((qc+3&127|0)==(yc|0)){Hc=za*.5+Ec;break}else{Hc=za*.75+Ec;break}}}while(0);if((53-Ac|0)<=1){Gc=Hc;break}if(+Za(+Hc,+1.0)!=0.0){Gc=Hc;break}Gc=Hc+1.0}}while(0);za=Fc+Gc-Dc;do{if((ab&2147483647|0)>(-2-p|0)){if(+U(+za)<9007199254740992.0){Ic=za;Jc=Bc;Kc=rc}else{Ic=za*.5;Jc=(Bc|0)!=0&(Ac|0)==(_a|0)?0:Bc;Kc=rc+1|0}if((Kc+53|0)<=(pa|0)){if(!((Jc|0)!=0&Gc!=0.0)){Lc=Ic;Mc=Kc;break}}c[(Pb()|0)>>2]=34;Lc=Ic;Mc=Kc}else{Lc=za;Mc=rc}}while(0);l=+Eq(Lc,Mc);i=g;return+l}}while(0);if((c[m>>2]|0)!=0){c[e>>2]=(c[e>>2]|0)-1}c[(Pb()|0)>>2]=22;Bq(b,0);l=0.0;i=g;return+l}}while(0);do{if((x|0)==23){b=(c[m>>2]|0)==0;if(!b){c[e>>2]=(c[e>>2]|0)-1}if(s>>>0<4>>>0|(f|0)==0|b){break}else{Nc=s}do{c[e>>2]=(c[e>>2]|0)-1;Nc=Nc-1|0;}while(Nc>>>0>3>>>0)}}while(0);l=+(r|0)*v;i=g;return+l}function Aq(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=a+4|0;f=c[e>>2]|0;g=a+100|0;if(f>>>0<(c[g>>2]|0)>>>0){c[e>>2]=f+1;h=d[f]|0}else{h=Cq(a)|0}do{if((h|0)==45|(h|0)==43){f=(h|0)==45|0;i=c[e>>2]|0;if(i>>>0<(c[g>>2]|0)>>>0){c[e>>2]=i+1;j=d[i]|0}else{j=Cq(a)|0}if((j-48|0)>>>0<10>>>0|(b|0)==0){k=f;l=j;break}if((c[g>>2]|0)==0){k=f;l=j;break}c[e>>2]=(c[e>>2]|0)-1;k=f;l=j}else{k=0;l=h}}while(0);if((l-48|0)>>>0>9>>>0){if((c[g>>2]|0)==0){m=-2147483648;n=0;return(J=m,n)|0}c[e>>2]=(c[e>>2]|0)-1;m=-2147483648;n=0;return(J=m,n)|0}else{o=l;p=0}while(1){q=o-48+p|0;l=c[e>>2]|0;if(l>>>0<(c[g>>2]|0)>>>0){c[e>>2]=l+1;r=d[l]|0}else{r=Cq(a)|0}if(!((r-48|0)>>>0<10>>>0&(q|0)<214748364)){break}o=r;p=q*10|0}p=q;o=(q|0)<0|0?-1:0;if((r-48|0)>>>0<10>>>0){q=r;l=o;h=p;while(1){j=Xq(h,l,10,0)|0;b=J;f=Nq(q,(q|0)<0|0?-1:0,-48,-1)|0;i=Nq(f,J,j,b)|0;b=J;j=c[e>>2]|0;if(j>>>0<(c[g>>2]|0)>>>0){c[e>>2]=j+1;s=d[j]|0}else{s=Cq(a)|0}j=21474836;if((s-48|0)>>>0<10>>>0&((b|0)<(j|0)|(b|0)==(j|0)&i>>>0<2061584302>>>0)){q=s;l=b;h=i}else{t=s;u=b;v=i;break}}}else{t=r;u=o;v=p}if((t-48|0)>>>0<10>>>0){do{t=c[e>>2]|0;if(t>>>0<(c[g>>2]|0)>>>0){c[e>>2]=t+1;w=d[t]|0}else{w=Cq(a)|0}}while((w-48|0)>>>0<10>>>0)}if((c[g>>2]|0)!=0){c[e>>2]=(c[e>>2]|0)-1}e=(k|0)!=0;k=Oq(0,0,v,u)|0;m=e?J:u;n=e?k:v;return(J=m,n)|0}function Bq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a+104>>2]=b;d=c[a+8>>2]|0;e=c[a+4>>2]|0;f=d-e|0;c[a+108>>2]=f;if((b|0)!=0&(f|0)>(b|0)){c[a+100>>2]=e+b;return}else{c[a+100>>2]=d;return}}function Cq(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=b+104|0;f=c[e>>2]|0;if((f|0)==0){g=3}else{if((c[b+108>>2]|0)<(f|0)){g=3}}do{if((g|0)==3){f=Gq(b)|0;if((f|0)<0){break}h=c[e>>2]|0;i=c[b+8>>2]|0;do{if((h|0)==0){g=8}else{j=c[b+4>>2]|0;k=h-(c[b+108>>2]|0)-1|0;if((i-j|0)<=(k|0)){g=8;break}c[b+100>>2]=j+k}}while(0);if((g|0)==8){c[b+100>>2]=i}h=c[b+4>>2]|0;if((i|0)!=0){k=b+108|0;c[k>>2]=i+1-h+(c[k>>2]|0)}k=h-1|0;if((d[k]|0|0)==(f|0)){l=f;return l|0}a[k]=f;l=f;return l|0}}while(0);c[b+100>>2]=0;l=-1;return l|0}function Dq(a,b){a=+a;b=b|0;var d=0.0,e=0,f=0.0,g=0;do{if((b|0)>1023){d=a*8.98846567431158e+307;e=b-1023|0;if((e|0)<=1023){f=d;g=e;break}e=b-2046|0;f=d*8.98846567431158e+307;g=(e|0)>1023?1023:e}else{if(!((b|0)<-1022)){f=a;g=b;break}d=a*2.2250738585072014e-308;e=b+1022|0;if(!((e|0)<-1022)){f=d;g=e;break}e=b+2044|0;f=d*2.2250738585072014e-308;g=(e|0)<-1022?-1022:e}}while(0);return+(f*(c[k>>2]=0<<20|0>>>12,c[k+4>>2]=g+1023<<20|0>>>12,+h[k>>3]))}function Eq(a,b){a=+a;b=b|0;return+(+Dq(a,b))}function Fq(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=b+74|0;e=a[d]|0;a[d]=e-1&255|e;e=b+20|0;d=b+44|0;if((c[e>>2]|0)>>>0>(c[d>>2]|0)>>>0){yc[c[b+36>>2]&63](b,0,0)|0}c[b+16>>2]=0;c[b+28>>2]=0;c[e>>2]=0;e=b|0;f=c[e>>2]|0;if((f&20|0)==0){g=c[d>>2]|0;c[b+8>>2]=g;c[b+4>>2]=g;h=0;return h|0}if((f&4|0)==0){h=-1;return h|0}c[e>>2]=f|32;h=-1;return h|0}function Gq(a){a=a|0;var b=0,e=0,f=0,g=0;b=i;i=i+8|0;e=b|0;if((c[a+8>>2]|0)==0){if((Fq(a)|0)==0){f=3}else{g=-1}}else{f=3}do{if((f|0)==3){if((yc[c[a+32>>2]&63](a,e,1)|0)!=1){g=-1;break}g=d[e]|0}}while(0);i=b;return g|0}function Hq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0.0,j=0,k=0;d=i;i=i+112|0;e=d|0;Kq(e|0,0,112)|0;f=e+4|0;c[f>>2]=a;g=e+8|0;c[g>>2]=-1;c[e+44>>2]=a;c[e+76>>2]=-1;Bq(e,0);h=+zq(e,2,1);j=(c[f>>2]|0)-(c[g>>2]|0)+(c[e+108>>2]|0)|0;if((b|0)==0){i=d;return+h}if((j|0)==0){k=a}else{k=a+j|0}c[b>>2]=k;i=d;return+h}function Iq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return tb(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function Jq(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b]=a[c]|0}b=e}else{Iq(b,c,d)|0}return b|0}function Kq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;i=f&~3;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b]=d;b=b+1|0}}while((b|0)<(i|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}return b-e|0}function Lq(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function Mq(b,c){b=b|0;c=c|0;var d=0;do{a[b+d|0]=a[c+d|0];d=d+1|0}while(a[c+(d-1)|0]|0);return b|0}function Nq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return(J=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function Oq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return(J=e,a-c>>>0|0)|0}function Pq(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){J=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}J=a<<c-32;return 0}function Qq(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){J=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}J=0;return b>>>c-32|0}function Rq(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){J=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}J=(b|0)<0?-1:0;return b>>c-32|0}function Sq(b){b=b|0;var c=0;c=a[n+(b>>>24)|0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)|0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)|0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)|0]|0)+24|0}function Tq(b){b=b|0;var c=0;c=a[m+(b&255)|0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)|0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)|0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)|0]|0)+24|0}function Uq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=fa(d,c)|0;f=a>>>16;a=(e>>>16)+(fa(d,f)|0)|0;d=b>>>16;b=fa(d,c)|0;return(J=(a>>>16)+(fa(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function Vq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=Oq(e^a,f^b,e,f)|0;b=J;a=g^e;e=h^f;f=Oq((_q(i,b,Oq(g^c,h^d,g,h)|0,J,0)|0)^a,J^e,a,e)|0;return(J=J,f)|0}function Wq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=Oq(h^a,j^b,h,j)|0;b=J;_q(m,b,Oq(k^d,l^e,k,l)|0,J,g)|0;l=Oq(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=J;i=f;return(J=j,l)|0}function Xq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=Uq(e,a)|0;f=J;return(J=(fa(b,a)|0)+(fa(d,e)|0)+f|f&0,c|0|0)|0}function Yq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=_q(a,b,c,d,0)|0;return(J=J,e)|0}function Zq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;_q(a,b,d,e,g)|0;i=f;return(J=c[g+4>>2]|0,c[g>>2]|0)|0}function _q(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0;g=a;h=b;i=h;j=d;k=e;l=k;if((i|0)==0){m=(f|0)!=0;if((l|0)==0){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return(J=n,o)|0}else{if(!m){n=0;o=0;return(J=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return(J=n,o)|0}}m=(l|0)==0;do{if((j|0)==0){if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return(J=n,o)|0}if((g|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return(J=n,o)|0}p=l-1|0;if((p&l|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=p&i|b&0}n=0;o=i>>>((Tq(l|0)|0)>>>0);return(J=n,o)|0}p=(Sq(l|0)|0)-(Sq(i|0)|0)|0;if(p>>>0<=30){q=p+1|0;r=31-p|0;s=q;t=i<<r|g>>>(q>>>0);u=i>>>(q>>>0);v=0;w=g<<r;break}if((f|0)==0){n=0;o=0;return(J=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(J=n,o)|0}else{if(!m){r=(Sq(l|0)|0)-(Sq(i|0)|0)|0;if(r>>>0<=31){q=r+1|0;p=31-r|0;x=r-31>>31;s=q;t=g>>>(q>>>0)&x|i<<p;u=i>>>(q>>>0)&x;v=0;w=g<<p;break}if((f|0)==0){n=0;o=0;return(J=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(J=n,o)|0}p=j-1|0;if((p&j|0)!=0){x=(Sq(j|0)|0)+33-(Sq(i|0)|0)|0;q=64-x|0;r=32-x|0;y=r>>31;z=x-32|0;A=z>>31;s=x;t=r-1>>31&i>>>(z>>>0)|(i<<r|g>>>(x>>>0))&A;u=A&i>>>(x>>>0);v=g<<q&y;w=(i<<q|g>>>(z>>>0))&y|g<<r&x-33>>31;break}if((f|0)!=0){c[f>>2]=p&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return(J=n,o)|0}else{p=Tq(j|0)|0;n=i>>>(p>>>0)|0;o=i<<32-p|g>>>(p>>>0)|0;return(J=n,o)|0}}}while(0);if((s|0)==0){B=w;C=v;D=u;E=t;F=0;G=0}else{g=d|0|0;d=k|e&0;e=Nq(g,d,-1,-1)|0;k=J;i=w;w=v;v=u;u=t;t=s;s=0;while(1){H=w>>>31|i<<1;I=s|w<<1;j=u<<1|i>>>31|0;a=u>>>31|v<<1|0;Oq(e,k,j,a)|0;b=J;h=b>>31|((b|0)<0?-1:0)<<1;K=h&1;L=Oq(j,a,h&g,(((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1)&d)|0;M=J;b=t-1|0;if((b|0)==0){break}else{i=H;w=I;v=M;u=L;t=b;s=K}}B=H;C=I;D=M;E=L;F=0;G=K}K=C;C=0;if((f|0)!=0){c[f>>2]=E;c[f+4>>2]=D}n=(K|0)>>>31|(B|C)<<1|(C<<1|K>>>31)&0|F;o=(K<<1|0>>>31)&-2|G;return(J=n,o)|0}function $q(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;tc[a&15](b|0,c|0,d|0,e|0,f|0)}function ar(a,b){a=a|0;b=b|0;uc[a&511](b|0)}function br(a,b,c){a=a|0;b=b|0;c=c|0;vc[a&127](b|0,c|0)}function cr(a,b){a=a|0;b=b|0;return wc[a&255](b|0)|0}function dr(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return xc[a&31](b|0,c|0,d|0,e|0,f|0)|0}function er(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return yc[a&63](b|0,c|0,d|0)|0}function fr(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;zc[a&15](b|0,c|0,d|0,e|0,f|0,+g)}function gr(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;Ac[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function hr(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Bc[a&63](b|0,c|0,d|0,e|0,f|0,g|0)}function ir(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;Cc[a&127](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function jr(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;Dc[a&7](b|0,c|0,d|0,e|0,f|0,g|0,+h)}function kr(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;Ec[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function lr(a,b,c){a=a|0;b=b|0;c=c|0;return Fc[a&63](b|0,c|0)|0}function mr(a,b,c){a=a|0;b=b|0;c=c|0;return+Gc[a&3](b|0,c|0)}function nr(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Hc[a&15](b|0,c|0,d|0,e|0)|0}function or(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;Ic[a&3](b|0,c|0,d|0,+e)}function pr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Jc[a&31](b|0,c|0,d|0)}function qr(a){a=a|0;Kc[a&1]()}function rr(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return Lc[a&31](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function sr(a,b,c,d,e,f){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;f=f|0;Mc[a&3](b|0,+c,d|0,e|0,f|0)}function tr(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Nc[a&31](b|0,c|0,d|0,e|0)}function ur(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ga(0)}function vr(a){a=a|0;ga(1)}function wr(a,b){a=a|0;b=b|0;ga(2)}function xr(a){a=a|0;ga(3);return 0}function yr(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ga(4);return 0}function zr(a,b,c){a=a|0;b=b|0;c=c|0;ga(5);return 0}function Ar(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;ga(6)}function Br(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ga(7)}function Cr(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ga(8)}function Dr(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ga(9)}function Er(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;ga(10)}function Fr(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ga(11)}function Gr(a,b){a=a|0;b=b|0;ga(12);return 0}function Hr(a,b){a=a|0;b=b|0;ga(13);return 0.0}function Ir(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ga(14);return 0}function Jr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;ga(15)}function Kr(a,b,c){a=a|0;b=b|0;c=c|0;ga(16)}function Lr(){ga(17)}function Mr(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ga(18);return 0}function Nr(a,b,c,d,e){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;ga(19)}function Or(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ga(20)}




// EMSCRIPTEN_END_FUNCS
var tc=[ur,ur,fq,ur,eq,ur,ge,ur,dq,ur,ur,ur,ur,ur,ur,ur];var uc=[vr,vr,jn,vr,Cj,vr,dn,vr,Sk,vr,yh,vr,ji,vr,Wd,vr,on,vr,Bn,vr,eh,vr,Tg,vr,Dk,vr,qh,vr,oo,vr,je,vr,$j,vr,sj,vr,oj,vr,cf,vr,tg,vr,Fe,vr,rh,vr,ce,vr,zn,vr,Pn,vr,sl,vr,ak,vr,Qp,vr,gj,vr,en,vr,Jd,vr,An,vr,Nd,vr,Mi,vr,Dj,vr,fm,vr,tn,vr,Kd,vr,af,vr,Vp,vr,mj,vr,wh,vr,yj,vr,Ml,vr,Po,vr,Yd,vr,Cn,vr,kq,vr,wh,vr,Zm,vr,Lo,vr,Ti,vr,xj,vr,Hl,vr,td,vr,rh,vr,me,vr,vp,vr,Ek,vr,No,vr,zo,vr,ug,vr,Ge,vr,gm,vr,Li,vr,_i,vr,El,vr,rl,vr,pj,vr,Wl,vr,vq,vr,ii,vr,Mo,vr,ne,vr,yp,vr,zp,vr,Xe,vr,wq,vr,hj,vr,kf,vr,xi,vr,Yp,vr,Zn,vr,Sp,vr,Ni,vr,bf,vr,nj,vr,Bm,vr,Kg,vr,qm,vr,ij,vr,wq,vr,Bp,vr,Wp,vr,Zd,vr,Zg,vr,dg,vr,sn,vr,xn,vr,fe,vr,Fl,vr,Mm,vr,Rp,vr,Ko,vr,Em,vr,_m,vr,Ap,vr,Ll,vr,Rk,vr,rj,vr,_g,vr,Dg,vr,tj,vr,Vi,vr,Gh,vr,go,vr,Tm,vr,Lm,vr,Oo,vr,he,vr,jg,vr,Zh,vr,Sg,vr,sg,vr,Sp,vr,Zp,vr,Zi,vr,Ld,vr,md,vr,uq,vr,Md,vr,Hh,vr,dg,vr,Ki,vr,lg,vr,fj,vr,Xd,vr,Od,vr,fi,vr,Yi,vr,fh,vr,vn,vr,Ye,vr,qj,vr,rm,vr,dl,vr,Xl,vr,Mg,vr,Ui,vr,wi,vr,Xi,vr,xp,vr,el,vr,Xp,vr,kn,vr,Lg,vr,Up,vr,Il,vr,Um,vr,Cm,vr,Id,vr,Nh,vr,Qn,vr,vh,vr,Si,vr,Cp,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr,vr];var vc=[wr,wr,Yo,wr,lf,wr,wm,wr,_l,wr,Ug,wr,Vo,wr,pm,wr,Uo,wr,em,wr,Ng,wr,hn,wr,yi,wr,Sl,wr,zm,wr,cg,wr,mm,wr,Rl,wr,Pl,wr,xm,wr,wn,wr,ke,wr,$g,wr,Am,wr,We,wr,Xo,wr,um,wr,$l,wr,uh,wr,Zo,wr,om,wr,bm,wr,De,wr,Wo,wr,dm,wr,ki,wr,nn,wr,gh,wr,jm,wr,Vl,wr,Ul,wr,Ql,wr,km,wr,lm,wr,vm,wr,am,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr,wr];var wc=[xr,xr,He,xr,ri,xr,co,xr,bp,xr,lp,xr,si,xr,Go,xr,jp,xr,Yl,xr,fl,xr,$o,xr,ih,xr,Gi,xr,Fi,xr,Fo,xr,fp,xr,dp,xr,Tp,xr,xh,xr,To,xr,Qo,xr,ep,xr,Ro,xr,oi,xr,bo,xr,ym,xr,gp,xr,hh,xr,Og,xr,Zl,xr,vo,xr,_e,xr,sm,xr,_o,xr,Vg,xr,Ae,xr,Oe,xr,kj,xr,Tl,xr,Wg,xr,So,xr,pi,xr,Ci,xr,ah,xr,fo,xr,cm,xr,kp,xr,$e,xr,uo,xr,lo,xr,Di,xr,Nl,xr,ap,xr,Ol,xr,sh,xr,hm,xr,no,xr,nm,xr,im,xr,cp,xr,tm,xr,ko,xr,tl,xr,Rd,xr,ip,xr,hp,xr,ff,xr,yo,xr,xq,xr,Jo,xr,ze,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr,xr];var xc=[yr,yr,On,yr,to,yr,Yn,yr,zj,yr,Ho,yr,wo,yr,jo,yr,uj,yr,ao,yr,eo,yr,Eo,yr,mo,yr,yr,yr,yr,yr,yr,yr];var yc=[zr,zr,Ii,zr,wj,zr,Sn,zr,Kn,zr,_p,zr,fn,zr,Nn,zr,Bj,zr,Bh,zr,ui,zr,qi,zr,Dn,zr,zi,zr,ln,zr,Xn,zr,In,zr,Pg,zr,Ei,zr,Ch,zr,Un,zr,li,zr,bh,zr,zr,zr,zr,zr,zr,zr,zr,zr,zr,zr,zr,zr,zr,zr,zr,zr,zr,zr];var zc=[Ar,Ar,al,Ar,_k,Ar,Pk,Ar,Mk,Ar,Ar,Ar,Ar,Ar,Ar,Ar];var Ac=[Br,Br,Jl,Br,Gl,Br,Dm,Br,Nm,Br,Hm,Br,Pm,Br,Br,Br];var Bc=[Cr,Cr,gq,Cr,Yk,Cr,Uk,Cr,hq,Cr,bl,Cr,gn,Cr,Ai,Cr,Qk,Cr,Fk,Cr,Kk,Cr,Gk,Cr,Pd,Cr,Tk,Cr,iq,Cr,mi,Cr,mn,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr,Cr];var Cc=[Dr,Dr,kl,Dr,ul,Dr,wl,Dr,cn,Dr,Zk,Dr,Xk,Dr,Ym,Dr,gl,Dr,jl,Dr,xl,Dr,Lk,Dr,vk,Dr,il,Dr,jk,Dr,vl,Dr,Jk,Dr,nk,Dr,fk,Dr,hk,Dr,Yj,Dr,lk,Dr,dk,Dr,bk,Dr,tk,Dr,rk,Dr,pk,Dr,yl,Dr,Mj,Dr,hl,Dr,Qj,Dr,Ij,Dr,Kj,Dr,Oj,Dr,Gj,Dr,Wj,Dr,Uj,Dr,Sj,Dr,Ej,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr,Dr];var Dc=[Er,Er,$m,Er,Vm,Er,Er,Er];var Ec=[Fr,Fr,zl,Fr,ll,Fr,Fr,Fr];var Fc=[Gr,Gr,Ln,Gr,Hi,Gr,Vn,Gr,Rn,Gr,Xg,Gr,jh,Gr,ch,Gr,Hn,Gr,Td,Gr,gf,Gr,Tn,Gr,vi,Gr,Ji,Gr,Jn,Gr,Sd,Gr,ti,Gr,Qg,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr];var Gc=[Hr,Hr,eg,Hr];var Hc=[Ir,Ir,En,Ir,Fn,Ir,Wn,Ir,Mn,Ir,Gn,Ir,Ir,Ir,Ir,Ir];var Ic=[Jr,Jr,ie,Jr];var Jc=[Kr,Kr,Ne,Kr,ef,Kr,fg,Kr,ye,Kr,jf,Kr,Ah,Kr,Ze,Kr,lj,Kr,Kr,Kr,Kr,Kr,Kr,Kr,Kr,Kr,Kr,Kr,Kr,Kr,Kr,Kr];var Kc=[Lr,Lr];var Lc=[Mr,Mr,ho,Mr,ro,Mr,po,Mr,Co,Mr,io,Mr,Ao,Mr,_n,Mr,$n,Mr,Mr,Mr,Mr,Mr,Mr,Mr,Mr,Mr,Mr,Mr,Mr,Mr,Mr,Mr];var Mc=[Nr,Nr,de,Nr];var Nc=[Or,Or,Qd,Or,aq,Or,bq,Or,$p,Or,ni,Or,Aj,Or,Bi,Or,vj,Or,Or,Or,Or,Or,Or,Or,Or,Or,Or,Or,Or,Or,Or,Or];return{_strlen:Lq,_free:kq,_add_alvar_marker:mg,_realloc:lq,_memmove:Jq,_add_image_marker:og,__GLOBAL__I_a:Gg,_init:kg,_memset:Kq,_malloc:jq,_memcpy:Iq,_process_image:qg,_strcpy:Mq,__GLOBAL__I_a361:lh,_add_artoolkit_marker:ng,runPostSets:cd,stackAlloc:Oc,stackSave:Pc,stackRestore:Qc,setThrew:Rc,setTempRet0:Uc,setTempRet1:Vc,setTempRet2:Wc,setTempRet3:Xc,setTempRet4:Yc,setTempRet5:Zc,setTempRet6:_c,setTempRet7:$c,setTempRet8:ad,setTempRet9:bd,dynCall_viiiii:$q,dynCall_vi:ar,dynCall_vii:br,dynCall_ii:cr,dynCall_iiiiii:dr,dynCall_iiii:er,dynCall_viiiiid:fr,dynCall_viiiiiiii:gr,dynCall_viiiiii:hr,dynCall_viiiiiii:ir,dynCall_viiiiiid:jr,dynCall_viiiiiiiii:kr,dynCall_iii:lr,dynCall_dii:mr,dynCall_iiiii:nr,dynCall_viiid:or,dynCall_viii:pr,dynCall_v:qr,dynCall_iiiiiiiii:rr,dynCall_vidiii:sr,dynCall_viiii:tr}})


// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_viiiii": invoke_viiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_iiiiii": invoke_iiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiid": invoke_viiiiid, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_iii": invoke_iii, "invoke_dii": invoke_dii, "invoke_iiiii": invoke_iiiii, "invoke_viiid": invoke_viiid, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_vidiii": invoke_vidiii, "invoke_viiii": invoke_viiii, "_llvm_lifetime_end": _llvm_lifetime_end, "__scanString": __scanString, "_pthread_mutex_lock": _pthread_mutex_lock, "___cxa_end_catch": ___cxa_end_catch, "_strtoull": _strtoull, "_fflush": _fflush, "__isLeapYear": __isLeapYear, "_fwrite": _fwrite, "_send": _send, "_llvm_umul_with_overflow_i32": _llvm_umul_with_overflow_i32, "_isspace": _isspace, "_read": _read, "_isxdigit_l": _isxdigit_l, "_fileno": _fileno, "___cxa_guard_abort": ___cxa_guard_abort, "_newlocale": _newlocale, "___gxx_personality_v0": ___gxx_personality_v0, "_pthread_cond_wait": _pthread_cond_wait, "___cxa_rethrow": ___cxa_rethrow, "_fmod": _fmod, "___resumeException": ___resumeException, "_llvm_va_end": _llvm_va_end, "_vsscanf": _vsscanf, "_snprintf": _snprintf, "_fgetc": _fgetc, "__getFloat": __getFloat, "_atexit": _atexit, "___cxa_free_exception": ___cxa_free_exception, "_isdigit_l": _isdigit_l, "___setErrNo": ___setErrNo, "_isxdigit": _isxdigit, "_exit": _exit, "_sprintf": _sprintf, "___ctype_b_loc": ___ctype_b_loc, "_freelocale": _freelocale, "_catgets": _catgets, "_asprintf": _asprintf, "___cxa_is_number_type": ___cxa_is_number_type, "___cxa_does_inherit": ___cxa_does_inherit, "___cxa_guard_acquire": ___cxa_guard_acquire, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_recv": _recv, "__parseInt64": __parseInt64, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_cos": _cos, "__ZNSt9exceptionD2Ev": __ZNSt9exceptionD2Ev, "_copysign": _copysign, "__exit": __exit, "_strftime": _strftime, "___cxa_throw": ___cxa_throw, "_pread": _pread, "_strtoull_l": _strtoull_l, "__arraySum": __arraySum, "_sysconf": _sysconf, "_strtoll_l": _strtoll_l, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "__formatString": __formatString, "_pthread_cond_broadcast": _pthread_cond_broadcast, "__ZSt9terminatev": __ZSt9terminatev, "_pthread_mutex_unlock": _pthread_mutex_unlock, "___cxa_call_unexpected": ___cxa_call_unexpected, "_sbrk": _sbrk, "___errno_location": ___errno_location, "_strerror": _strerror, "_catclose": _catclose, "_llvm_lifetime_start": _llvm_lifetime_start, "___cxa_guard_release": ___cxa_guard_release, "_ungetc": _ungetc, "_uselocale": _uselocale, "_vsnprintf": _vsnprintf, "_sscanf": _sscanf, "___assert_fail": ___assert_fail, "_fread": _fread, "_strftime_l": _strftime_l, "_abort": _abort, "_isdigit": _isdigit, "_strtoll": _strtoll, "__addDays": __addDays, "_fabs": _fabs, "__reallyNegative": __reallyNegative, "_sqrt": _sqrt, "_write": _write, "_mkport": _mkport, "___cxa_allocate_exception": ___cxa_allocate_exception, "_sin": _sin, "_vasprintf": _vasprintf, "_catopen": _catopen, "___ctype_toupper_loc": ___ctype_toupper_loc, "___ctype_tolower_loc": ___ctype_tolower_loc, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_atan2": _atan2, "_time": _time, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "_stdin": _stdin, "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE, "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE, "_stderr": _stderr, "_stdout": _stdout, "___dso_handle": ___dso_handle }, buffer);
var _strlen = Module["_strlen"] = asm["_strlen"];
var _free = Module["_free"] = asm["_free"];
var _add_alvar_marker = Module["_add_alvar_marker"] = asm["_add_alvar_marker"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _add_image_marker = Module["_add_image_marker"] = asm["_add_image_marker"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var _init = Module["_init"] = asm["_init"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _process_image = Module["_process_image"] = asm["_process_image"];
var _strcpy = Module["_strcpy"] = asm["_strcpy"];
var __GLOBAL__I_a361 = Module["__GLOBAL__I_a361"] = asm["__GLOBAL__I_a361"];
var _add_artoolkit_marker = Module["_add_artoolkit_marker"] = asm["_add_artoolkit_marker"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_dii = Module["dynCall_dii"] = asm["dynCall_dii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiid = Module["dynCall_viiid"] = asm["dynCall_viiid"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_vidiii = Module["dynCall_vidiii"] = asm["dynCall_vidiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };

// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    ensureInitRuntime();

    preMain();

    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371

  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  throw 'abort() at ' + stackTrace();
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






